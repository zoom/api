{
	"swagger": "2.0",
	"x-explorer-enabled": false,
	"info": {
		"version": "1.0",
		"title": "Zoom API",
		"description": "API Description"
	},
	"host": "api.zoom.us",
	"basePath": "/v2",
	"securityDefinitions": {
		"ApiKeyAuth": {
			"type": "apiKey",
			"in": "header",
			"name": "Authorization"
		}
	},
	"security": [{
		"ApiKeyAuth": []
	}],
	"schemes": [
		"https"
	],
	"paths": {
		"/accounts": {
			"get": {
				"description": "List all the sub accounts under the master account",
				"summary": "List sub accounts",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": "The number of records returned within a single API call"
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": "Current page number of returned records"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/accounts?page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List sub accounts",
					"x-testDescription": "List all the sub accounts under the master account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a sub account under the master account. <aside>Your account must be a master account and have this privilege to create sub account. Zoom only assigns this privilege to trusted partners. The created user will not receive a confirmation email.</aside>.",
				"summary": "Create a sub account",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a sub accountRequest",
							"example": {
								"first_name": "string",
								"last_name": "string",
								"email": "string",
								"password": "string",
								"options": {
									"share_rc": "boolean",
									"room_connectors": "string",
									"share_mc": "boolean",
									"meeting_connectors": "string",
									"pay_mode": "string"
								}
							},
							"type": "object",
							"properties": {
								"first_name": {
									"description": "User’s first name",
									"example": "string",
									"type": "string"
								},
								"last_name": {
									"description": "User’s last name",
									"example": "string",
									"type": "string"
								},
								"email": {
									"description": "User’s email address",
									"example": "string",
									"type": "string"
								},
								"password": {
									"description": "User’s password",
									"example": "string",
									"type": "string"
								},
								"options": {
									"title": "Options",
									"example": {
										"share_rc": "boolean",
										"room_connectors": "string",
										"share_mc": "boolean",
										"meeting_connectors": "string",
										"pay_mode": "string"
									},
									"type": "object",
									"properties": {
										"share_rc": {
											"description": "Enable Share Virtual Room Connector",
											"example": "boolean",
											"type": "string"
										},
										"room_connectors": {
											"description": "Virtual Room Connector, multiple value separated by comma",
											"example": "string",
											"type": "string"
										},
										"share_mc": {
											"description": "Enable Share Meeting Connector",
											"example": "boolean",
											"type": "string"
										},
										"meeting_connectors": {
											"description": "Meeting Connector, multiple values separated by comma",
											"example": "string",
											"type": "string"
										},
										"pay_mode": {
											"description": "Payee",
											"example": "string",
											"type": "string"
										}
									}
								}
							},
							"required": [
								"first_name",
								"last_name",
								"email",
								"password"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/accounts",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"first_name\":\"string\",\"last_name\":\"string\",\"email\":\"string\",\"password\":\"string\",\"options\":{\"share_rc\":\"boolean\",\"room_connectors\":\"string\",\"share_mc\":\"boolean\",\"meeting_connectors\":\"string\",\"pay_mode\":\"string\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a sub account",
					"x-testDescription": "Create a sub account under the master account. <aside>Your account must be a master account and have this privilege to create sub account. Zoom only assigns this privilege to trusted partners. The created user will not receive a confirmation email.</aside>."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}": {
			"get": {
				"description": "Retrieve a sub account under the master account. <aside>Your account must be a master account and have this privilege to read sub accounts. Zoom only assigns this privilege to trusted partners</aside>.",
				"summary": "Retrieve a sub account",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsByAccountIdGet",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/accounts/%7B%7BaccountId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a sub account",
					"x-testDescription": "Retrieve a sub account under the master account. <aside>Your account must be a master account and have this privilege to read sub accounts. Zoom only assigns this privilege to trusted partners</aside>."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Disassociate a sub account from the master account. This will leave the account intact but the sub account will not longer be associated with the master account.",
				"summary": "Disassociate an account",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsByAccountIdDelete",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/accounts/%7B%7BaccountId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Disassociate an account",
					"x-testDescription": "Disassociate a sub account from the master account. This will leave the account intact but the sub account will not longer be associated with the master account."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/options": {
			"patch": {
				"description": "Update a sub account's options under the master account",
				"summary": "Update a sub account's options",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsOptionsByAccountIdPatch",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a sub account's optionsRequest",
							"example": {
								"share_rc": "boolean",
								"room_connectors": "string",
								"share_mc": "boolean",
								"meeting_connectors": "string",
								"pay_mode": "string"
							},
							"type": "object",
							"properties": {
								"share_rc": {
									"description": "Enable Share Virtual Room Connector",
									"example": "boolean",
									"type": "string"
								},
								"room_connectors": {
									"description": "Virtual Room Connector, multiple value separated by comma",
									"example": "string",
									"type": "string"
								},
								"share_mc": {
									"description": "Enable Share Meeting Connector",
									"example": "boolean",
									"type": "string"
								},
								"meeting_connectors": {
									"description": "Meeting Connector, multiple values separated by comma",
									"example": "string",
									"type": "string"
								},
								"pay_mode": {
									"description": "Payee",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/options",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"share_rc\":\"boolean\",\"room_connectors\":\"string\",\"share_mc\":\"boolean\",\"meeting_connectors\":\"string\",\"pay_mode\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a sub account's options",
					"x-testDescription": "Update a sub account's options under the master account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/settings": {
			"get": {
				"description": "Retrieve a sub account's settings under the master account",
				"summary": "Retrieve a sub account's settings",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsSettingsByAccountIdGet",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/settings",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a sub account's settings",
					"x-testDescription": "Retrieve a sub account's settings under the master account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a sub account's settings under the master account",
				"summary": "Update a sub account's settings",
				"tags": [
					"Accounts"
				],
				"operationId": "AccountsSettingsByAccountIdPatch",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a sub account's settingsRequest",
							"example": {
								"schedule_meting": {
									"host_video": "boolean",
									"participant_video": "boolean",
									"audio_type": "string",
									"join_before_host": "boolean",
									"enforce_login": "boolean",
									"enforce_login_with_domains": "boolean",
									"enforce_login_domains": "string",
									"not_store_meeting_topic": "boolean",
									"force_pmi_jbh_password": "boolean"
								},
								"in_meeting": {
									"e2e_encryption": "boolean",
									"chat": "boolean",
									"private_chat": "boolean",
									"auto_saving_chat": "boolean",
									"file_transfer": "boolean",
									"feedback": "boolean",
									"post_meeting_feedback": "boolean",
									"co_host": "boolean",
									"polling": "boolean",
									"attendee_on_hold": "boolean",
									"show_meeting_control_toolbar": "boolean",
									"allow_show_zoom_windows": "boolean",
									"annotation": "boolean",
									"whiteboard": "boolean",
									"webinar_question_answer": "boolean",
									"anonymous_question_answer": "boolean",
									"breakout_room": "boolean",
									"closed_caption": "boolean",
									"far_end_camera_control": "boolean",
									"group_hd": "boolean",
									"virtual_background": "boolean",
									"watermark": "boolean",
									"alert_guest_join": "boolean",
									"auto_answer": "boolean",
									"p2p_connetion": "boolean",
									"p2p_ports": "boolean",
									"ports_range": "string",
									"sending_default_email_invites": "boolean",
									"use_html_format_email": "boolean",
									"dscp_marking": "boolean",
									"dscp_audio": "integer",
									"dscp_video": "integer",
									"stereo_audio": "boolean",
									"original_audio": "boolean",
									"screen_sharing": "boolean",
									"remote_control": "boolean",
									"attention_tracking": "boolean"
								},
								"email_notification": {
									"cloud_recording_avaliable_reminder": "boolean",
									"jbh_reminder": "boolean",
									"cancel_meeting_reminder": "boolean",
									"low_host_count_reminder": "boolean",
									"alternative_host_reminder": "boolean"
								},
								"zoom_rooms": {
									"upcoming_meeting_alert": "boolean",
									"start_airplay_manually": "boolean",
									"weekly_system_restart": "boolean",
									"list_meetings_with_calendar": "boolean",
									"zr_post_meeting_feedback": "boolean",
									"ultrasonic": "boolean",
									"force_private_meeting": "boolean",
									"hide_host_information": "boolean",
									"cmr_for_instant_meeting": "boolean",
									"auto_start_stop_scheduled_meetings": "boolean"
								},
								"security": {
									"admin_change_name_pic": "boolean",
									"import_photos_from_devices": "boolean",
									"hide_billing_info": "boolean"
								},
								"recording": {
									"local_recording": "boolean",
									"cloud_recording": "boolean",
									"record_speaker_view": "boolean",
									"record_gallery_view": "boolean",
									"record_audio_file": "boolean",
									"save_chat_text": "boolean",
									"show_timestamp": "boolean",
									"recording_audio_transcript": "boolean",
									"auto_recording": "string",
									"cloud_recording_download": "boolean",
									"cloud_recording_download_host": "boolean",
									"account_user_access_recording": "boolean",
									"auto_delete_cmr": "boolean",
									"auto_delete_cmr_days": "integer"
								},
								"telephony": {
									"third_party_audio": "boolean",
									"audio_conference_info": "string"
								},
								"integration": {
									"google_calendar": "boolean",
									"google_drive": "boolean",
									"dropbox": "boolean",
									"box": "boolean",
									"microsoft_one_drive": "boolean",
									"kubi": "boolean"
								},
								"feature": {
									"meeting_capacity": "integer"
								}
							},
							"type": "object",
							"properties": {
								"schedule_meting": {
									"title": "ScheduleMeting",
									"example": {
										"host_video": "boolean",
										"participant_video": "boolean",
										"audio_type": "string",
										"join_before_host": "boolean",
										"enforce_login": "boolean",
										"enforce_login_with_domains": "boolean",
										"enforce_login_domains": "string",
										"not_store_meeting_topic": "boolean",
										"force_pmi_jbh_password": "boolean"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"participant_video": {
											"description": "Start meetings with participant video on. Participants can change this during the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"audio_type": {
											"description": "Determine how participants can join the audio portion of the meeting 'both' Telephony and VoIP 'telephony' Audio PSTN telephony only 'voip' VoIP only 'thirdParty' 3rd party audio conference",
											"example": "string",
											"type": "string"
										},
										"join_before_host": {
											"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
											"example": "boolean",
											"type": "string"
										},
										"enforce_login": {
											"description": "Only signed-in users can join this meeting.",
											"example": "boolean",
											"type": "string"
										},
										"enforce_login_with_domains": {
											"description": "",
											"example": "boolean",
											"type": "string"
										},
										"not_store_meeting_topic": {
											"description": "Always display “Zoom Meeting” as the meeting topic.",
											"example": "boolean",
											"type": "string"
										},
										"force_pmi_jbh_password": {
											"description": "Require a password for Personal Meetings if attendees can join before host.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"in_meeting": {
									"title": "InMeeting",
									"example": {
										"e2e_encryption": "boolean",
										"chat": "boolean",
										"private_chat": "boolean",
										"auto_saving_chat": "boolean",
										"file_transfer": "boolean",
										"feedback": "boolean",
										"post_meeting_feedback": "boolean",
										"co_host": "boolean",
										"polling": "boolean",
										"attendee_on_hold": "boolean",
										"show_meeting_control_toolbar": "boolean",
										"allow_show_zoom_windows": "boolean",
										"annotation": "boolean",
										"whiteboard": "boolean",
										"webinar_question_answer": "boolean",
										"anonymous_question_answer": "boolean",
										"breakout_room": "boolean",
										"closed_caption": "boolean",
										"far_end_camera_control": "boolean",
										"group_hd": "boolean",
										"virtual_background": "boolean",
										"watermark": "boolean",
										"alert_guest_join": "boolean",
										"auto_answer": "boolean",
										"p2p_connetion": "boolean",
										"p2p_ports": "boolean",
										"ports_range": "string",
										"sending_default_email_invites": "boolean",
										"use_html_format_email": "boolean",
										"dscp_marking": "boolean",
										"dscp_audio": "integer",
										"dscp_video": "integer",
										"stereo_audio": "boolean",
										"original_audio": "boolean",
										"screen_sharing": "boolean",
										"remote_control": "boolean",
										"attention_tracking": "boolean"
									},
									"type": "object",
									"properties": {
										"e2e_encryption": {
											"description": "Require that all meetings are encrypted using AES.",
											"example": "boolean",
											"type": "string"
										},
										"chat": {
											"description": "Allow meeting participants to send a message visible to all participants.",
											"example": "boolean",
											"type": "string"
										},
										"private_chat": {
											"description": "Allow meeting participants to send a private 1:1 message to another participants.",
											"example": "boolean",
											"type": "string"
										},
										"auto_saving_chat": {
											"description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts.",
											"example": "boolean",
											"type": "string"
										},
										"file_transfer": {
											"description": "Hosts and participants can send files through the in-meeting chat.",
											"example": "boolean",
											"type": "string"
										},
										"feedback": {
											"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"post_meeting_feedback": {
											"description": "Display a thumbs up/down survey at the end of each meeting.",
											"example": "boolean",
											"type": "string"
										},
										"co_host": {
											"description": "Allow the host to add co-hosts.",
											"example": "boolean",
											"type": "string"
										},
										"polling": {
											"description": "Add ‘Polls’ to the meeting controls.",
											"example": "boolean",
											"type": "string"
										},
										"attendee_on_hold": {
											"description": "Allow hosts to temporarily remove an attendee from the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"show_meeting_control_toolbar": {
											"description": "Always show meeting control toolbar.",
											"example": "boolean",
											"type": "string"
										},
										"allow_show_zoom_windows": {
											"description": "Show Zoom Desktop application when sharing screen.",
											"example": "boolean",
											"type": "string"
										},
										"annotation": {
											"description": "Allow participants to use annotation tools to add information to shared screens.",
											"example": "boolean",
											"type": "string"
										},
										"whiteboard": {
											"description": "Allow participants to share a whiteboard that includes annotation tools.",
											"example": "boolean",
											"type": "string"
										},
										"webinar_question_answer": {
											"description": "Q&A in webinar.",
											"example": "boolean",
											"type": "string"
										},
										"anonymous_question_answer": {
											"description": "Allow Anonymous Q&A in Webinar.",
											"example": "boolean",
											"type": "string"
										},
										"breakout_room": {
											"description": "Allow host to split meeting participants into separate, smaller rooms.",
											"example": "boolean",
											"type": "string"
										},
										"closed_caption": {
											"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
											"example": "boolean",
											"type": "string"
										},
										"far_end_camera_control": {
											"description": "Allow another user to take control of your camera during a meeting.",
											"example": "boolean",
											"type": "string"
										},
										"group_hd": {
											"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
											"example": "boolean",
											"type": "string"
										},
										"virtual_background": {
											"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
											"example": "boolean",
											"type": "string"
										},
										"watermark": {
											"description": "Add watermark when viewing shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"alert_guest_join": {
											"description": "Identify guest participants in the meeting/webinar.",
											"example": "boolean",
											"type": "string"
										},
										"auto_answer": {
											"description": "Enable users to see and add contacts to ‘auto-answer group’ in the contact list on chat. Any call from members of this group will be automatically answered.",
											"example": "boolean",
											"type": "string"
										},
										"p2p_connetion": {
											"description": "Peer to Peer connection while only 2 people are in a meeting.",
											"example": "boolean",
											"type": "string"
										},
										"p2p_ports": {
											"description": "P2P listening ports range.",
											"example": "boolean",
											"type": "string"
										},
										"ports_range": {
											"description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
											"example": "string",
											"type": "string"
										},
										"sending_default_email_invites": {
											"description": "Only show default email when sending email invites.",
											"example": "boolean",
											"type": "string"
										},
										"use_html_format_email": {
											"description": "Use HTML format email for Outlook plugin.",
											"example": "boolean",
											"type": "string"
										},
										"dscp_marking": {
											"description": "DSCP marking.",
											"example": "boolean",
											"type": "string"
										},
										"dscp_audio": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"dscp_video": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"stereo_audio": {
											"description": "Allow users to select stereo audio in their client settings.",
											"example": "boolean",
											"type": "string"
										},
										"original_audio": {
											"description": "Allow users to select original sound in their client settings.",
											"example": "boolean",
											"type": "string"
										},
										"screen_sharing": {
											"description": "Allow screen sharing.",
											"example": "boolean",
											"type": "string"
										},
										"remote_control": {
											"description": "Allow users to request remote control.",
											"example": "boolean",
											"type": "string"
										},
										"attention_tracking": {
											"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"email_notification": {
									"title": "EmailNotification",
									"example": {
										"cloud_recording_avaliable_reminder": "boolean",
										"jbh_reminder": "boolean",
										"cancel_meeting_reminder": "boolean",
										"low_host_count_reminder": "boolean",
										"alternative_host_reminder": "boolean"
									},
									"type": "object",
									"properties": {
										"cloud_recording_avaliable_reminder": {
											"description": "Notify host when cloud recording is available.",
											"example": "boolean",
											"type": "string"
										},
										"jbh_reminder": {
											"description": "Notify host when participants join the meeting before them.",
											"example": "boolean",
											"type": "string"
										},
										"cancel_meeting_reminder": {
											"description": "Notify host and participants when the meeting is cancelled.",
											"example": "boolean",
											"type": "string"
										},
										"low_host_count_reminder": {
											"description": "Notify when host licenses are running low.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_host_reminder": {
											"description": "Notify when an alternative host is set or removed from a meeting.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"zoom_rooms": {
									"title": "ZoomRooms",
									"example": {
										"upcoming_meeting_alert": "boolean",
										"start_airplay_manually": "boolean",
										"weekly_system_restart": "boolean",
										"list_meetings_with_calendar": "boolean",
										"zr_post_meeting_feedback": "boolean",
										"ultrasonic": "boolean",
										"force_private_meeting": "boolean",
										"hide_host_information": "boolean",
										"cmr_for_instant_meeting": "boolean",
										"auto_start_stop_scheduled_meetings": "boolean"
									},
									"type": "object",
									"properties": {
										"upcoming_meeting_alert": {
											"description": "Upcoming meeting alert.",
											"example": "boolean",
											"type": "string"
										},
										"start_airplay_manually": {
											"description": "Start AirPlay service manually.",
											"example": "boolean",
											"type": "string"
										},
										"weekly_system_restart": {
											"description": "Weekly system restart.",
											"example": "boolean",
											"type": "string"
										},
										"list_meetings_with_calendar": {
											"description": "Display meeting list with calendar integration.",
											"example": "boolean",
											"type": "string"
										},
										"zr_post_meeting_feedback": {
											"description": "Zoom Room post meeting feedback.",
											"example": "boolean",
											"type": "string"
										},
										"ultrasonic": {
											"description": "Automatic direct sharing using ultrasonic proximity signal.",
											"example": "boolean",
											"type": "string"
										},
										"force_private_meeting": {
											"description": "Transform all meetings to private.",
											"example": "boolean",
											"type": "string"
										},
										"hide_host_information": {
											"description": "Hide host and meeting ID from private meetings.",
											"example": "boolean",
											"type": "string"
										},
										"cmr_for_instant_meeting": {
											"description": "Cloud recording for instant meetings.",
											"example": "boolean",
											"type": "string"
										},
										"auto_start_stop_scheduled_meetings": {
											"description": "Automatic start/stop for scheduled meetings.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"security": {
									"title": "Security",
									"example": {
										"admin_change_name_pic": "boolean",
										"import_photos_from_devices": "boolean",
										"hide_billing_info": "boolean"
									},
									"type": "object",
									"properties": {
										"admin_change_name_pic": {
											"description": "Only account administrators can change user’s username and picture.",
											"example": "boolean",
											"type": "string"
										},
										"import_photos_from_devices": {
											"description": "Allow importing of photos from photo library on the user’s device.",
											"example": "boolean",
											"type": "string"
										},
										"hide_billing_info": {
											"description": "Hide billing information.",
											"example": "boolean",
											"type": "string"
										}
									},
									"required": [
										"admin_change_name_pic",
										"import_photos_from_devices",
										"hide_billing_info"
									]
								},
								"recording": {
									"title": "Recording",
									"example": {
										"local_recording": "boolean",
										"cloud_recording": "boolean",
										"record_speaker_view": "boolean",
										"record_gallery_view": "boolean",
										"record_audio_file": "boolean",
										"save_chat_text": "boolean",
										"show_timestamp": "boolean",
										"recording_audio_transcript": "boolean",
										"auto_recording": "string",
										"cloud_recording_download": "boolean",
										"cloud_recording_download_host": "boolean",
										"account_user_access_recording": "boolean",
										"auto_delete_cmr": "boolean",
										"auto_delete_cmr_days": "integer"
									},
									"type": "object",
									"properties": {
										"local_recording": {
											"description": "Allow hosts and participants to record the meeting to a local file.",
											"example": "boolean",
											"type": "string"
										},
										"cloud_recording": {
											"description": "Allow hosts to record and save the meeting in the cloud.",
											"example": "boolean",
											"type": "string"
										},
										"record_speaker_view": {
											"description": "Record active speaker with shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"record_gallery_view": {
											"description": "Record gallery view with shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"record_audio_file": {
											"description": "Record an audio only file.",
											"example": "boolean",
											"type": "string"
										},
										"save_chat_text": {
											"description": "Save chat text from the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"show_timestamp": {
											"description": "Add a timestamp to the recording.",
											"example": "boolean",
											"type": "string"
										},
										"recording_audio_transcript": {
											"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
											"example": "boolean",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"cloud_recording_download": {
											"description": "Cloud Recording Downloads",
											"example": "boolean",
											"type": "string"
										},
										"cloud_recording_download_host": {
											"description": "Only the host can download cloud recordings.",
											"example": "boolean",
											"type": "string"
										},
										"account_user_access_recording": {
											"description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
											"example": "boolean",
											"type": "string"
										},
										"auto_delete_cmr": {
											"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
											"example": "boolean",
											"type": "string"
										},
										"auto_delete_cmr_days": {
											"description": "When `auto_delete_cmr is` ‘true’ this value will set the number of days before auto deletion of cloud recordings.",
											"example": "integer",
											"type": "string"
										}
									}
								},
								"telephony": {
									"title": "Telephony",
									"example": {
										"third_party_audio": "boolean",
										"audio_conference_info": "string"
									},
									"type": "object",
									"properties": {
										"third_party_audio": {
											"description": "Users can join the meeting using the existing 3rd party audio configuration.",
											"example": "boolean",
											"type": "string"
										},
										"audio_conference_info": {
											"description": "3rd party audio conference info.",
											"example": "string",
											"type": "string"
										}
									}
								},
								"integration": {
									"title": "Integration",
									"example": {
										"google_calendar": "boolean",
										"google_drive": "boolean",
										"dropbox": "boolean",
										"box": "boolean",
										"microsoft_one_drive": "boolean",
										"kubi": "boolean"
									},
									"type": "object",
									"properties": {
										"google_calendar": {
											"description": "Enables meetings to be scheduled using Google Calendars.",
											"example": "boolean",
											"type": "string"
										},
										"google_drive": {
											"description": "Enables users who join a meeting from their mobile device to share content from their Google Drive.",
											"example": "boolean",
											"type": "string"
										},
										"dropbox": {
											"description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account.",
											"example": "boolean",
											"type": "string"
										},
										"box": {
											"description": "",
											"example": "boolean",
											"type": "string"
										},
										"microsoft_one_drive": {
											"description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.",
											"example": "boolean",
											"type": "string"
										},
										"kubi": {
											"description": "Enables users to control a connected Kubi device from within a Zoom meeting.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"feature": {
									"title": "Feature",
									"example": {
										"meeting_capacity": "integer"
									},
									"type": "object",
									"properties": {
										"meeting_capacity": {
											"description": "Set the maximum number of participants this user can have in a single meeting.",
											"example": "integer",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/settings",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"schedule_meting\":{\"host_video\":\"boolean\",\"participant_video\":\"boolean\",\"audio_type\":\"string\",\"join_before_host\":\"boolean\",\"enforce_login\":\"boolean\",\"enforce_login_with_domains\":\"boolean\",\"enforce_login_domains\":\"string\",\"not_store_meeting_topic\":\"boolean\",\"force_pmi_jbh_password\":\"boolean\"},\"in_meeting\":{\"e2e_encryption\":\"boolean\",\"chat\":\"boolean\",\"private_chat\":\"boolean\",\"auto_saving_chat\":\"boolean\",\"file_transfer\":\"boolean\",\"feedback\":\"boolean\",\"post_meeting_feedback\":\"boolean\",\"co_host\":\"boolean\",\"polling\":\"boolean\",\"attendee_on_hold\":\"boolean\",\"show_meeting_control_toolbar\":\"boolean\",\"allow_show_zoom_windows\":\"boolean\",\"annotation\":\"boolean\",\"whiteboard\":\"boolean\",\"webinar_question_answer\":\"boolean\",\"anonymous_question_answer\":\"boolean\",\"breakout_room\":\"boolean\",\"closed_caption\":\"boolean\",\"far_end_camera_control\":\"boolean\",\"group_hd\":\"boolean\",\"virtual_background\":\"boolean\",\"watermark\":\"boolean\",\"alert_guest_join\":\"boolean\",\"auto_answer\":\"boolean\",\"p2p_connetion\":\"boolean\",\"p2p_ports\":\"boolean\",\"ports_range\":\"string\",\"sending_default_email_invites\":\"boolean\",\"use_html_format_email\":\"boolean\",\"dscp_marking\":\"boolean\",\"dscp_audio\":\"integer\",\"dscp_video\":\"integer\",\"stereo_audio\":\"boolean\",\"original_audio\":\"boolean\",\"screen_sharing\":\"boolean\",\"remote_control\":\"boolean\",\"attention_tracking\":\"boolean\"},\"email_notification\":{\"cloud_recording_avaliable_reminder\":\"boolean\",\"jbh_reminder\":\"boolean\",\"cancel_meeting_reminder\":\"boolean\",\"low_host_count_reminder\":\"boolean\",\"alternative_host_reminder\":\"boolean\"},\"zoom_rooms\":{\"upcoming_meeting_alert\":\"boolean\",\"start_airplay_manually\":\"boolean\",\"weekly_system_restart\":\"boolean\",\"list_meetings_with_calendar\":\"boolean\",\"zr_post_meeting_feedback\":\"boolean\",\"ultrasonic\":\"boolean\",\"force_private_meeting\":\"boolean\",\"hide_host_information\":\"boolean\",\"cmr_for_instant_meeting\":\"boolean\",\"auto_start_stop_scheduled_meetings\":\"boolean\"},\"security\":{\"admin_change_name_pic\":\"boolean\",\"import_photos_from_devices\":\"boolean\",\"hide_billing_info\":\"boolean\"},\"recording\":{\"local_recording\":\"boolean\",\"cloud_recording\":\"boolean\",\"record_speaker_view\":\"boolean\",\"record_gallery_view\":\"boolean\",\"record_audio_file\":\"boolean\",\"save_chat_text\":\"boolean\",\"show_timestamp\":\"boolean\",\"recording_audio_transcript\":\"boolean\",\"auto_recording\":\"string\",\"cloud_recording_download\":\"boolean\",\"cloud_recording_download_host\":\"boolean\",\"account_user_access_recording\":\"boolean\",\"auto_delete_cmr\":\"boolean\",\"auto_delete_cmr_days\":\"integer\"},\"telephony\":{\"third_party_audio\":\"boolean\",\"audio_conference_info\":\"string\"},\"integration\":{\"google_calendar\":\"boolean\",\"google_drive\":\"boolean\",\"dropbox\":\"boolean\",\"box\":\"boolean\",\"microsoft_one_drive\":\"boolean\",\"kubi\":\"boolean\"},\"feature\":{\"meeting_capacity\":\"integer\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a sub account's settings",
					"x-testDescription": "Update a sub account's settings under the master account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/billing": {
			"get": {
				"description": "Retrieve billing information for a sub account under the master account",
				"summary": "Retrieve billing information for a sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsBillingByAccountIdGet",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/billing",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve billing information for a sub account",
					"x-testDescription": "Retrieve billing information for a sub account under the master account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update billing information for a sub account under the master account <aside>Only for the sub account which is a paid account and paid by master account</aside>",
				"summary": "Update billing information for a sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsBillingByAccountIdPatch",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update billing information for a sub accountRequest",
							"example": {
								"first_name": "string",
								"last_name": "string",
								"email": "string",
								"phone_number": "string",
								"address": "string",
								"apt": "string",
								"city": "string",
								"state": "string",
								"zip": "string",
								"country": "string"
							},
							"type": "object",
							"properties": {
								"first_name": {
									"description": "User's first name.",
									"example": "string",
									"type": "string"
								},
								"last_name": {
									"description": "User's last name.",
									"example": "string",
									"type": "string"
								},
								"email": {
									"description": "User's email address.",
									"example": "string",
									"type": "string"
								},
								"phone_number": {
									"description": "User's phone number. ",
									"example": "string",
									"type": "string"
								},
								"address": {
									"description": "User's address. ",
									"example": "string",
									"type": "string"
								},
								"apt": {
									"description": "User's apartment/suite. ",
									"example": "string",
									"type": "string"
								},
								"city": {
									"description": "User's city. ",
									"example": "string",
									"type": "string"
								},
								"state": {
									"description": "User's state. ",
									"example": "string",
									"type": "string"
								},
								"zip": {
									"description": "User's zip code. ",
									"example": "string",
									"type": "string"
								},
								"country": {
									"description": "User's country. ",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/billing",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"first_name\":\"string\",\"last_name\":\"string\",\"email\":\"string\",\"phone_number\":\"string\",\"address\":\"string\",\"apt\":\"string\",\"city\":\"string\",\"state\":\"string\",\"zip\":\"string\",\"country\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update billing information for a sub account",
					"x-testDescription": "Update billing information for a sub account under the master account <aside>Only for the sub account which is a paid account and paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/plans": {
			"get": {
				"description": "Retrieve plan information for a sub account under the master account  <aside>Only for the sub account which is paid by master account</aside>",
				"summary": "Retrieve plan information for a sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsPlansByAccountIdGet",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/plans",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve plan information for a sub account",
					"x-testDescription": "Retrieve plan information for a sub account under the master account  <aside>Only for the sub account which is paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Subscribe plans for a sub account of the master account <aside>Can only subscribe plans for the sub account which is a free account and paid by master account</aside>",
				"summary": "Subscribe plans for a sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsPlansByAccountIdPost",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/plans",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Subscribe plans for a sub account",
					"x-testDescription": "Subscribe plans for a sub account of the master account <aside>Can only subscribe plans for the sub account which is a free account and paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/plans/base": {
			"put": {
				"description": "Update a base plan for a sub account <aside>Can only update a base plan for the sub account which is a paid account and paid by master account</aside>",
				"summary": "Update a base plan for a sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsPlansBaseByAccountIdPut",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a base plan for a sub accountRequest",
							"example": {
								"type": "string",
								"hosts": "integer"
							},
							"type": "object",
							"properties": {
								"type": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"hosts": {
									"description": "",
									"example": "integer",
									"type": "string"
								}
							},
							"required": [
								"type",
								"hosts"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/plans/base",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"type\":\"string\",\"hosts\":\"integer\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a base plan for a sub account",
					"x-testDescription": "Update a base plan for a sub account <aside>Can only update a base plan for the sub account which is a paid account and paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/accounts/{accountId}/plans/addons": {
			"put": {
				"description": "Update an additional plan for sub account<aside>Can only update an Additional plan for the sub account which is a paid account and paid by master account</aside>",
				"summary": "Update an additional plan for sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsPlansAddonsByAccountIdPut",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update an additional plan for sub accountRequest",
							"example": {
								"type": "string",
								"hosts": "integer"
							},
							"type": "object",
							"properties": {
								"type": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"hosts": {
									"description": "",
									"example": "integer",
									"type": "string"
								}
							},
							"required": [
								"type",
								"hosts"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/plans/addons",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"type\":\"string\",\"hosts\":\"integer\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update an additional plan for sub account",
					"x-testDescription": "Update an additional plan for sub account<aside>Can only update an Additional plan for the sub account which is a paid account and paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add an additional plan for sub account <aside>Can only add an Additional plan for the sub account which is a paid account and paid by master account</aside>",
				"summary": "Add an additional plan for sub account",
				"tags": [
					"Billing"
				],
				"operationId": "AccountsPlansAddonsByAccountIdPost",
				"parameters": [{
						"name": "accountId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "The account ID"
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add an additional plan for sub accountRequest",
							"example": {
								"type": "string",
								"hosts": "integer"
							},
							"type": "object",
							"properties": {
								"type": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"hosts": {
									"description": "",
									"example": "integer",
									"type": "string"
								}
							},
							"required": [
								"type",
								"hosts"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/accounts/%7B%7BaccountId%7D%7D/plans/addons",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"type\":\"string\",\"hosts\":\"integer\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add an additional plan for sub account",
					"x-testDescription": "Add an additional plan for sub account <aside>Can only add an Additional plan for the sub account which is a paid account and paid by master account</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users": {
			"get": {
				"description": "List users on your account",
				"summary": "List Users",
				"tags": [
					"Users"
				],
				"operationId": "UsersGet",
				"parameters": [{
						"name": "status",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users?status=active&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List Users",
					"x-testDescription": "List users on your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a user on your account",
				"summary": "Create a user",
				"tags": [
					"Users"
				],
				"operationId": "UsersPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a userRequest",
							"example": {
								"action": "string",
								"user_info": {
									"email": "string",
									"type": "integer",
									"first_name": "string",
									"last_name": "string",
									"password": "string"
								}
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"user_info": {
									"title": "UserInfo",
									"example": {
										"email": "string",
										"type": "integer",
										"first_name": "string",
										"last_name": "string",
										"password": "string"
									},
									"type": "object",
									"properties": {
										"email": {
											"description": "User's email address.",
											"example": "string",
											"type": "string"
										},
										"type": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"first_name": {
											"description": "User's first name.",
											"example": "string",
											"type": "string"
										},
										"last_name": {
											"description": "User's last name.",
											"example": "string",
											"type": "string"
										},
										"password": {
											"description": "Sets password.",
											"example": "string",
											"type": "string"
										}
									},
									"required": [
										"email",
										"type"
									]
								}
							},
							"required": [
								"action",
								"user_info"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\",\"user_info\":{\"email\":\"string\",\"type\":\"integer\",\"first_name\":\"string\",\"last_name\":\"string\",\"password\":\"string\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a user",
					"x-testDescription": "Create a user on your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}": {
			"get": {
				"description": "Retrieve a user on your account",
				"summary": "Retrieve a user",
				"tags": [
					"Users"
				],
				"operationId": "UsersByUserIdGet",
				"parameters": [{
						"name": "login_type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}?login_type={{login_type}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a user",
					"x-testDescription": "Retrieve a user on your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a user on your account",
				"summary": "Delete a user",
				"tags": [
					"Users"
				],
				"operationId": "UsersByUserIdDelete",
				"parameters": [{
						"name": "action",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "transfer_email",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "transfer_meeting",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "transfer_webinar",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "transfer_recording",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/{{userId}}?action=disassociate&transfer_email={{transfer_email}}&transfer_meeting={{transfer_meeting}}&transfer_webinar={{transfer_webinar}}&transfer_recording={{transfer_recording}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user",
					"x-testDescription": "Delete a user on your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a user on your account",
				"summary": "Update a user",
				"tags": [
					"Users"
				],
				"operationId": "UsersByUserIdPatch",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a userRequest",
							"example": {
								"first_name": "string",
								"last_name": "string",
								"type": "integer",
								"pmi": "string",
								"timezone": "string [date-time]",
								"dept": "string",
								"vanity_name": "string",
								"host_key": "string",
								"cms_user_id": "string"
							},
							"type": "object",
							"properties": {
								"first_name": {
									"description": "User's first name.",
									"example": "string",
									"type": "string"
								},
								"last_name": {
									"description": "User's last name.",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "integer",
									"type": "string"
								},
								"pmi": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"timezone": {
									"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
									"example": "string [date-time]",
									"type": "string"
								},
								"dept": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"vanity_name": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"host_key": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"cms_user_id": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/users/%7B%7BuserId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"first_name\":\"string\",\"last_name\":\"string\",\"type\":\"integer\",\"pmi\":\"string\",\"timezone\":\"string [date-time]\",\"dept\":\"string\",\"vanity_name\":\"string\",\"host_key\":\"string\",\"cms_user_id\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a user",
					"x-testDescription": "Update a user on your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/assistants": {
			"get": {
				"description": "List a user's assistants",
				"summary": "List a user's assistants",
				"tags": [
					"Users"
				],
				"operationId": "UsersAssistantsByUserIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/assistants",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a user's assistants",
					"x-testDescription": "List a user's assistants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add assistants to a user",
				"summary": "Add assistants",
				"tags": [
					"Users"
				],
				"operationId": "UsersAssistantsByUserIdPost",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add assistantsRequest",
							"example": {
								"assistants": [{
									"id": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"assistants": {
									"description": "List of User’s assistants. ",
									"example": [{
										"id": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Assistant",
										"example": {
											"id": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"id": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"id",
											"email"
										]
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users/%7B%7BuserId%7D%7D/assistants",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"assistants\":[{\"id\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add assistants",
					"x-testDescription": "Add assistants to a user"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete all of a user'sassitants",
				"summary": "Delete a user's assistants",
				"tags": [
					"Users"
				],
				"operationId": "UsersAssistantsByUserIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/assistants",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user's assistants",
					"x-testDescription": "Delete all of a user'sassitants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/assistants/{assistantId}": {
			"delete": {
				"description": "Delete one of a user's assistants",
				"summary": "Delete a user's assistant",
				"tags": [
					"Users"
				],
				"operationId": "UsersAssistantsByUserIdAndAssistantIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "assistantId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/assistants/%7B%7BassistantId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user's assistant",
					"x-testDescription": "Delete one of a user's assistants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/schedulers": {
			"get": {
				"description": "List a user's schedulers",
				"summary": "List a user's schedulers",
				"tags": [
					"Users"
				],
				"operationId": "UsersSchedulersByUserIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/schedulers",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a user's schedulers",
					"x-testDescription": "List a user's schedulers"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete all of a user'schedulers",
				"summary": "Delete a user's schedulers",
				"tags": [
					"Users"
				],
				"operationId": "UsersSchedulersByUserIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/schedulers",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user's schedulers",
					"x-testDescription": "Delete all of a user'schedulers"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/schedulers/{schedulerId}": {
			"delete": {
				"description": "Delete one of a user's schedulers",
				"summary": "Delete a user's scheduler",
				"tags": [
					"Users"
				],
				"operationId": "UsersSchedulersByUserIdAndSchedulerIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "schedulerId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/schedulers/%7B%7BschedulerId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user's scheduler",
					"x-testDescription": "Delete one of a user's schedulers"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/picture": {
			"post": {
				"description": "Upload a user's profile picture",
				"summary": "Upload a user's picture",
				"tags": [
					"Users"
				],
				"operationId": "UsersPictureByUserIdPost",
				"consumes": [
					"application/x-www-form-urlencoded"
				],
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "pic_file",
						"in": "formData",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users/%7B%7BuserId%7D%7D/picture",
						"headers": {
							"Content-Type": "application/x-www-form-urlencoded",
							"Accept": "application/json"
						},
						"body": "pic_file={{pic_file}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Upload a user's picture",
					"x-testDescription": "Upload a user's profile picture"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/settings": {
			"get": {
				"description": "Retrieve a user's settings",
				"summary": "Retrieve a user's settings",
				"tags": [
					"Users"
				],
				"operationId": "UsersSettingsByUserIdGet",
				"parameters": [{
						"name": "login_type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}/settings?login_type={{login_type}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a user's settings",
					"x-testDescription": "Retrieve a user's settings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a user's settings",
				"summary": "Update a user's settings",
				"tags": [
					"Users"
				],
				"operationId": "UsersSettingsByUserIdPatch",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a user's settingsRequest",
							"example": {
								"scheduled_meeting": {
									"host_video": "boolean",
									"participants_video": "boolean",
									"audio_type": "string",
									"join_before_host": "boolean",
									"force_pmi_jbh_password": "boolean",
									"pstn_password_protected": "boolean"
								},
								"in_meeting": {
									"e2e_encryption": "boolean",
									"chat": "boolean",
									"private_chat": "boolean",
									"auto_saving_chat": "boolean",
									"entry_exit_chime": "string",
									"record_play_voice": "boolean",
									"file_transfer": "boolean",
									"feedback": "boolean",
									"co_host": "boolean",
									"polling": "boolean",
									"attendee_on_hold": "boolean",
									"annotation": "boolean",
									"remote_control": "boolean",
									"non_verbal_feedback": "boolean",
									"breakout_room": "boolean",
									"remote_support": "boolean",
									"closed_caption": "boolean",
									"group_hd": "boolean",
									"virtual_background": "boolean",
									"far_end_camera_control": "boolean",
									"share_dual_camera": "boolean",
									"attention_tracking": "boolean",
									"waiting_room": "boolean"
								},
								"email_notification": {
									"jbh_reminder": "boolean",
									"cancel_meeting_reminder": "boolean",
									"alternative_host_reminder": "boolean"
								},
								"recording": {
									"local_recording": "boolean",
									"cloud_recording": "boolean",
									"record_speaker_view": "boolean",
									"record_gallery_view": "boolean",
									"record_audio_file": "boolean",
									"save_chat_text": "boolean",
									"show_timestamp": "boolean",
									"recording_audio_transcript": "boolean",
									"auto_recording": "string",
									"auto_delete_cmr": "boolean",
									"auto_delete_cmr_days": "integer"
								},
								"telephony": {
									"third_party_audio": "boolean",
									"audio_conference_info": "string",
									"show_international_numbers_link": "boolean"
								},
								"feature": {
									"meeting_capacity": "integer",
									"large_meeting": "boolean",
									"large_meeting_capacity": "integer",
									"webinar": "boolean",
									"webinar_capacity": "integer"
								}
							},
							"type": "object",
							"properties": {
								"scheduled_meeting": {
									"title": "ScheduledMeeting",
									"example": {
										"host_video": "boolean",
										"participants_video": "boolean",
										"audio_type": "string",
										"join_before_host": "boolean",
										"force_pmi_jbh_password": "boolean",
										"pstn_password_protected": "boolean"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"participants_video": {
											"description": "Participants video. ",
											"example": "boolean",
											"type": "string"
										},
										"audio_type": {
											"description": "Determine how participants can join the audio portion of the meeting 'both' Telephony and VoIP 'telephony' Audio PSTN telephony only 'voip' VoIP only 'thirdParty' 3rd party audio conference",
											"example": "string",
											"type": "string"
										},
										"join_before_host": {
											"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
											"example": "boolean",
											"type": "string"
										},
										"force_pmi_jbh_password": {
											"description": "Require a password for Personal Meetings if attendees can join before host.",
											"example": "boolean",
											"type": "string"
										},
										"pstn_password_protected": {
											"description": "Generate and require password for participants joining by phone.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"in_meeting": {
									"title": "InMeeting24",
									"example": {
										"e2e_encryption": "boolean",
										"chat": "boolean",
										"private_chat": "boolean",
										"auto_saving_chat": "boolean",
										"entry_exit_chime": "string",
										"record_play_voice": "boolean",
										"file_transfer": "boolean",
										"feedback": "boolean",
										"co_host": "boolean",
										"polling": "boolean",
										"attendee_on_hold": "boolean",
										"annotation": "boolean",
										"remote_control": "boolean",
										"non_verbal_feedback": "boolean",
										"breakout_room": "boolean",
										"remote_support": "boolean",
										"closed_caption": "boolean",
										"group_hd": "boolean",
										"virtual_background": "boolean",
										"far_end_camera_control": "boolean",
										"share_dual_camera": "boolean",
										"attention_tracking": "boolean",
										"waiting_room": "boolean"
									},
									"type": "object",
									"properties": {
										"e2e_encryption": {
											"description": "Require that all meetings are encrypted using AES.",
											"example": "boolean",
											"type": "string"
										},
										"chat": {
											"description": "Allow meeting participants to send a message visible to all participants.",
											"example": "boolean",
											"type": "string"
										},
										"private_chat": {
											"description": "Allow meeting participants to send a private 1:1 message to another participants.",
											"example": "boolean",
											"type": "string"
										},
										"auto_saving_chat": {
											"description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts.",
											"example": "boolean",
											"type": "string"
										},
										"entry_exit_chime": {
											"description": "Play sound on join/leave 'host' when host joins/leaves 'all' when any participant joins/leaves 'none' no join/leave sound.",
											"example": "string",
											"type": "string"
										},
										"record_play_voice": {
											"description": "Record and play their own voice.",
											"example": "boolean",
											"type": "string"
										},
										"file_transfer": {
											"description": "Hosts and participants can send files through the in-meeting chat.",
											"example": "boolean",
											"type": "string"
										},
										"feedback": {
											"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"co_host": {
											"description": "Allow the host to add co-hosts.",
											"example": "boolean",
											"type": "string"
										},
										"polling": {
											"description": "Add ‘Polls’ to the meeting controls.",
											"example": "boolean",
											"type": "string"
										},
										"attendee_on_hold": {
											"description": "Allow hosts to temporarily remove an attendee from the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"annotation": {
											"description": "Allow participants to use annotation tools to add information to shared screens.",
											"example": "boolean",
											"type": "string"
										},
										"remote_control": {
											"description": "Allow users to request remote control.",
											"example": "boolean",
											"type": "string"
										},
										"non_verbal_feedback": {
											"description": "Non-verbal feedback.",
											"example": "boolean",
											"type": "string"
										},
										"breakout_room": {
											"description": "Allow host to split meeting participants into separate, smaller rooms.",
											"example": "boolean",
											"type": "string"
										},
										"remote_support": {
											"description": "Remote support.",
											"example": "boolean",
											"type": "string"
										},
										"closed_caption": {
											"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
											"example": "boolean",
											"type": "string"
										},
										"group_hd": {
											"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
											"example": "boolean",
											"type": "string"
										},
										"virtual_background": {
											"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
											"example": "boolean",
											"type": "string"
										},
										"far_end_camera_control": {
											"description": "Allow another user to take control of your camera during a meeting.",
											"example": "boolean",
											"type": "string"
										},
										"share_dual_camera": {
											"description": "Share dual camera. (Deprecated)",
											"example": "boolean",
											"type": "string"
										},
										"attention_tracking": {
											"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
											"example": "boolean",
											"type": "string"
										},
										"waiting_room": {
											"description": "Waiting room.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"email_notification": {
									"title": "EmailNotification25",
									"example": {
										"jbh_reminder": "boolean",
										"cancel_meeting_reminder": "boolean",
										"alternative_host_reminder": "boolean"
									},
									"type": "object",
									"properties": {
										"jbh_reminder": {
											"description": "Notify host when participants join the meeting before them.",
											"example": "boolean",
											"type": "string"
										},
										"cancel_meeting_reminder": {
											"description": "Notify host and participants when the meeting is cancelled.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_host_reminder": {
											"description": "Notify when an alternative host is set or removed from a meeting.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"recording": {
									"title": "Recording26",
									"example": {
										"local_recording": "boolean",
										"cloud_recording": "boolean",
										"record_speaker_view": "boolean",
										"record_gallery_view": "boolean",
										"record_audio_file": "boolean",
										"save_chat_text": "boolean",
										"show_timestamp": "boolean",
										"recording_audio_transcript": "boolean",
										"auto_recording": "string",
										"auto_delete_cmr": "boolean",
										"auto_delete_cmr_days": "integer"
									},
									"type": "object",
									"properties": {
										"local_recording": {
											"description": "Allow hosts and participants to record the meeting to a local file.",
											"example": "boolean",
											"type": "string"
										},
										"cloud_recording": {
											"description": "Allow hosts to record and save the meeting in the cloud.",
											"example": "boolean",
											"type": "string"
										},
										"record_speaker_view": {
											"description": "Record active speaker with shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"record_gallery_view": {
											"description": "Record gallery view with shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"record_audio_file": {
											"description": "Record an audio only file.",
											"example": "boolean",
											"type": "string"
										},
										"save_chat_text": {
											"description": "Save chat text from the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"show_timestamp": {
											"description": "Add a timestamp to the recording.",
											"example": "boolean",
											"type": "string"
										},
										"recording_audio_transcript": {
											"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
											"example": "boolean",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"auto_delete_cmr": {
											"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
											"example": "boolean",
											"type": "string"
										},
										"auto_delete_cmr_days": {
											"description": "When `auto_delete_cmr is` ‘true’ this value will set the number of days before auto deletion of cloud recordings.",
											"example": "integer",
											"type": "string"
										}
									}
								},
								"telephony": {
									"title": "Telephony27",
									"example": {
										"third_party_audio": "boolean",
										"audio_conference_info": "string",
										"show_international_numbers_link": "boolean"
									},
									"type": "object",
									"properties": {
										"third_party_audio": {
											"description": "Users can join the meeting using the existing 3rd party audio configuration.",
											"example": "boolean",
											"type": "string"
										},
										"audio_conference_info": {
											"description": "3rd party audio conference info.",
											"example": "string",
											"type": "string"
										},
										"show_international_numbers_link": {
											"description": "Show international numbers link on the invitation email.",
											"example": "boolean",
											"type": "string"
										}
									}
								},
								"feature": {
									"title": "Feature28",
									"example": {
										"meeting_capacity": "integer",
										"large_meeting": "boolean",
										"large_meeting_capacity": "integer",
										"webinar": "boolean",
										"webinar_capacity": "integer"
									},
									"type": "object",
									"properties": {
										"meeting_capacity": {
											"description": "Set the maximum number of participants this user can have in a single meeting.",
											"example": "integer",
											"type": "string"
										},
										"large_meeting": {
											"description": "Large meting feature.",
											"example": "boolean",
											"type": "string"
										},
										"large_meeting_capacity": {
											"description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not.",
											"example": "integer",
											"type": "string"
										},
										"webinar": {
											"description": "Webinar feature.",
											"example": "boolean",
											"type": "string"
										},
										"webinar_capacity": {
											"description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not.",
											"example": "integer",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/users/%7B%7BuserId%7D%7D/settings",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"scheduled_meeting\":{\"host_video\":\"boolean\",\"participants_video\":\"boolean\",\"audio_type\":\"string\",\"join_before_host\":\"boolean\",\"force_pmi_jbh_password\":\"boolean\",\"pstn_password_protected\":\"boolean\"},\"in_meeting\":{\"e2e_encryption\":\"boolean\",\"chat\":\"boolean\",\"private_chat\":\"boolean\",\"auto_saving_chat\":\"boolean\",\"entry_exit_chime\":\"string\",\"record_play_voice\":\"boolean\",\"file_transfer\":\"boolean\",\"feedback\":\"boolean\",\"co_host\":\"boolean\",\"polling\":\"boolean\",\"attendee_on_hold\":\"boolean\",\"annotation\":\"boolean\",\"remote_control\":\"boolean\",\"non_verbal_feedback\":\"boolean\",\"breakout_room\":\"boolean\",\"remote_support\":\"boolean\",\"closed_caption\":\"boolean\",\"group_hd\":\"boolean\",\"virtual_background\":\"boolean\",\"far_end_camera_control\":\"boolean\",\"share_dual_camera\":\"boolean\",\"attention_tracking\":\"boolean\",\"waiting_room\":\"boolean\"},\"email_notification\":{\"jbh_reminder\":\"boolean\",\"cancel_meeting_reminder\":\"boolean\",\"alternative_host_reminder\":\"boolean\"},\"recording\":{\"local_recording\":\"boolean\",\"cloud_recording\":\"boolean\",\"record_speaker_view\":\"boolean\",\"record_gallery_view\":\"boolean\",\"record_audio_file\":\"boolean\",\"save_chat_text\":\"boolean\",\"show_timestamp\":\"boolean\",\"recording_audio_transcript\":\"boolean\",\"auto_recording\":\"string\",\"auto_delete_cmr\":\"boolean\",\"auto_delete_cmr_days\":\"integer\"},\"telephony\":{\"third_party_audio\":\"boolean\",\"audio_conference_info\":\"string\",\"show_international_numbers_link\":\"boolean\"},\"feature\":{\"meeting_capacity\":\"integer\",\"large_meeting\":\"boolean\",\"large_meeting_capacity\":\"integer\",\"webinar\":\"boolean\",\"webinar_capacity\":\"integer\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a user's settings",
					"x-testDescription": "Update a user's settings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/status": {
			"put": {
				"description": "Update a user's status",
				"summary": "Update a user's status",
				"tags": [
					"Users"
				],
				"operationId": "UsersStatusByUserIdPut",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a user's statusRequest",
							"example": {
								"action": "string"
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"action"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/users/%7B%7BuserId%7D%7D/status",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a user's status",
					"x-testDescription": "Update a user's status"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/password": {
			"put": {
				"description": "Update a user's password",
				"summary": "Update a user's password",
				"tags": [
					"Users"
				],
				"operationId": "UsersPasswordByUserIdPut",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a user's passwordRequest",
							"example": {
								"password": "string"
							},
							"type": "object",
							"properties": {
								"password": {
									"description": "Sets password.",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"password"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/users/%7B%7BuserId%7D%7D/password",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"password\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a user's password",
					"x-testDescription": "Update a user's password"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/permissions": {
			"get": {
				"description": "Retrieve a user's permissions",
				"summary": "Retrieve a user's permissions",
				"tags": [
					"Users"
				],
				"operationId": "UsersPermissionsByUserIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/permissions",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a user's permissions",
					"x-testDescription": "Retrieve a user's permissions"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/token": {
			"get": {
				"description": "Retrieve a user's token",
				"summary": "Retrieve a user's token",
				"tags": [
					"Users"
				],
				"operationId": "UsersTokenByUserIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}/token?type={{type}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a user's token",
					"x-testDescription": "Retrieve a user's token"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Revoke a user's SSO token",
				"summary": "Revoke a user's SSO token",
				"tags": [
					"Users"
				],
				"operationId": "UsersTokenByUserIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/token",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Revoke a user's SSO token",
					"x-testDescription": "Revoke a user's SSO token"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/zpk": {
			"get": {
				"description": "Check if the zpk is expired. The zpk is used to authenticate a user.",
				"summary": "Verify a user's zpk (Deprecated",
				"tags": [
					"Users"
				],
				"operationId": "UsersZpkGet",
				"parameters": [{
						"name": "zpk",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/zpk?zpk={{zpk}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Verify a user's zpk (Deprecated",
					"x-testDescription": "Check if the zpk is expired. The zpk is used to authenticate a user."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/email": {
			"get": {
				"description": "Check if the user email exists",
				"summary": "Check a user's email",
				"tags": [
					"Users"
				],
				"operationId": "UsersEmailGet",
				"parameters": [{
						"name": "email",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/email?email={{email}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Check a user's email",
					"x-testDescription": "Check if the user email exists"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/webinars": {
			"get": {
				"description": "List webinars for a user",
				"summary": "List webinars",
				"tags": [
					"Users"
				],
				"operationId": "UsersWebinarsByUserIdGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}/webinars?page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List webinars",
					"x-testDescription": "List webinars for a user"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a webinar for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
				"summary": "Create a webinar",
				"tags": [
					"Webinars"
				],
				"operationId": "UsersWebinarsByUserIdPost",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a webinarRequest",
							"example": {
								"topic": "string",
								"type": "integer",
								"start_time": "string [date-time]",
								"duration": "integer",
								"timezone": "string",
								"password": "string",
								"agenda": "string",
								"recurrence": {
									"type": "integer",
									"repeat_interval": "integer",
									"weekly_days": "integer",
									"monthly_day": "integer",
									"monthly_week": "integer",
									"monthly_week_day": "integer",
									"end_times": "integer",
									"end_date_time": "string [date-time]"
								},
								"settings": {
									"host_video": "boolean",
									"panelists_video": "boolean",
									"practice_session": "boolean",
									"hd_video": "boolean",
									"approval_type": "integer",
									"registration_type": "integer",
									"audio": "string",
									"auto_recording": "string",
									"enforce_login": "boolean",
									"enforce_login_domains": "string",
									"alternative_hosts": "string",
									"close_registration": "boolean",
									"show_share_button": "boolean",
									"allow_multiple_devices": "boolean"
								}
							},
							"type": "object",
							"properties": {
								"topic": {
									"description": "Topic",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "integer",
									"type": "string"
								},
								"start_time": {
									"description": "Start time.",
									"example": "string [date-time]",
									"type": "string"
								},
								"duration": {
									"description": "Duration in minutes",
									"example": "integer",
									"type": "string"
								},
								"timezone": {
									"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
									"example": "string",
									"type": "string"
								},
								"password": {
									"description": "Sets password.",
									"example": "string",
									"type": "string"
								},
								"agenda": {
									"description": "Meeting description.",
									"example": "string",
									"type": "string"
								},
								"recurrence": {
									"title": "Recurrence",
									"example": {
										"type": "integer",
										"repeat_interval": "integer",
										"weekly_days": "integer",
										"monthly_day": "integer",
										"monthly_week": "integer",
										"monthly_week_day": "integer",
										"end_times": "integer",
										"end_date_time": "string [date-time]"
									},
									"type": "object",
									"properties": {
										"type": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"repeat_interval": {
											"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
											"example": "integer",
											"type": "string"
										},
										"weekly_days": {
											"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
											"example": "integer",
											"type": "string"
										},
										"monthly_day": {
											"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week": {
											"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week_day": {
											"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
											"example": "integer",
											"type": "string"
										},
										"end_times": {
											"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
											"example": "integer",
											"type": "string"
										},
										"end_date_time": {
											"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
											"example": "string [date-time]",
											"type": "string"
										}
									}
								},
								"settings": {
									"title": "Settings44",
									"example": {
										"host_video": "boolean",
										"panelists_video": "boolean",
										"practice_session": "boolean",
										"hd_video": "boolean",
										"approval_type": "integer",
										"registration_type": "integer",
										"audio": "string",
										"auto_recording": "string",
										"enforce_login": "boolean",
										"enforce_login_domains": "string",
										"alternative_hosts": "string",
										"close_registration": "boolean",
										"show_share_button": "boolean",
										"allow_multiple_devices": "boolean"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"panelists_video": {
											"description": "Start video when panelists join webinar.",
											"example": "boolean",
											"type": "string"
										},
										"practice_session": {
											"description": "Enable Practice Session.",
											"example": "boolean",
											"type": "string"
										},
										"hd_video": {
											"description": "Default to HD Video.",
											"example": "boolean",
											"type": "string"
										},
										"approval_type": {
											"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required",
											"example": "integer",
											"type": "string"
										},
										"registration_type": {
											"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
											"example": "integer",
											"type": "string"
										},
										"audio": {
											"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
											"example": "string",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"enforce_login": {
											"description": "Only signed-in users can join this meeting.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_hosts": {
											"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
											"example": "string",
											"type": "string"
										},
										"close_registration": {
											"description": "Close registration after event date.",
											"example": "boolean",
											"type": "string"
										},
										"show_share_button": {
											"description": "Show social share buttons on registration page.",
											"example": "boolean",
											"type": "string"
										},
										"allow_multiple_devices": {
											"description": "Allow attendees to join from multiple devices.",
											"example": "boolean",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users/%7B%7BuserId%7D%7D/webinars",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"topic\":\"string\",\"type\":\"integer\",\"start_time\":\"string [date-time]\",\"duration\":\"integer\",\"timezone\":\"string\",\"password\":\"string\",\"agenda\":\"string\",\"recurrence\":{\"type\":\"integer\",\"repeat_interval\":\"integer\",\"weekly_days\":\"integer\",\"monthly_day\":\"integer\",\"monthly_week\":\"integer\",\"monthly_week_day\":\"integer\",\"end_times\":\"integer\",\"end_date_time\":\"string [date-time]\"},\"settings\":{\"host_video\":\"boolean\",\"panelists_video\":\"boolean\",\"practice_session\":\"boolean\",\"hd_video\":\"boolean\",\"approval_type\":\"integer\",\"registration_type\":\"integer\",\"audio\":\"string\",\"auto_recording\":\"string\",\"enforce_login\":\"boolean\",\"enforce_login_domains\":\"string\",\"alternative_hosts\":\"string\",\"close_registration\":\"boolean\",\"show_share_button\":\"boolean\",\"allow_multiple_devices\":\"boolean\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a webinar",
					"x-testDescription": "Create a webinar for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/meetings": {
			"get": {
				"description": "List meetings for a user",
				"summary": "List meetings",
				"tags": [
					"Meetings"
				],
				"operationId": "UsersMeetingsByUserIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}/meetings?type=live&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List meetings",
					"x-testDescription": "List meetings for a user"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a meeting for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
				"summary": "Create a meeting",
				"tags": [
					"Meetings"
				],
				"operationId": "UsersMeetingsByUserIdPost",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a meetingRequest",
							"example": {
								"topic": "string",
								"type": "integer",
								"start_time": "string [date-time]",
								"duration": "integer",
								"timezone": "string",
								"password": "string",
								"agenda": "string",
								"recurrence": {
									"type": "integer",
									"repeat_interval": "integer",
									"weekly_days": "integer",
									"monthly_day": "integer",
									"monthly_week": "integer",
									"monthly_week_day": "integer",
									"end_times": "integer",
									"end_date_time": "string [date-time]"
								},
								"settings": {
									"host_video": "boolean",
									"participant_video": "boolean",
									"cn_meeting": "boolean",
									"in_meeting": "boolean",
									"join_before_host": "boolean",
									"mute_upon_entry": "boolean",
									"watermark": "boolean",
									"use_pmi": "boolean",
									"approval_type": "integer",
									"registration_type": "integer",
									"audio": "string",
									"auto_recording": "string",
									"enforce_login": "boolean",
									"enforce_login_domains": "string",
									"alternative_hosts": "string"
								}
							},
							"type": "object",
							"properties": {
								"topic": {
									"description": "Topic",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "integer",
									"type": "string"
								},
								"start_time": {
									"description": "Start time.",
									"example": "string [date-time]",
									"type": "string"
								},
								"duration": {
									"description": "Duration in minutes",
									"example": "integer",
									"type": "string"
								},
								"timezone": {
									"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
									"example": "string",
									"type": "string"
								},
								"password": {
									"description": "Sets password.",
									"example": "string",
									"type": "string"
								},
								"agenda": {
									"description": "Meeting description.",
									"example": "string",
									"type": "string"
								},
								"recurrence": {
									"title": "Recurrence",
									"example": {
										"type": "integer",
										"repeat_interval": "integer",
										"weekly_days": "integer",
										"monthly_day": "integer",
										"monthly_week": "integer",
										"monthly_week_day": "integer",
										"end_times": "integer",
										"end_date_time": "string [date-time]"
									},
									"type": "object",
									"properties": {
										"type": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"repeat_interval": {
											"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
											"example": "integer",
											"type": "string"
										},
										"weekly_days": {
											"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
											"example": "integer",
											"type": "string"
										},
										"monthly_day": {
											"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week": {
											"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week_day": {
											"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
											"example": "integer",
											"type": "string"
										},
										"end_times": {
											"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
											"example": "integer",
											"type": "string"
										},
										"end_date_time": {
											"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
											"example": "string [date-time]",
											"type": "string"
										}
									}
								},
								"settings": {
									"title": "Settings",
									"example": {
										"host_video": "boolean",
										"participant_video": "boolean",
										"cn_meeting": "boolean",
										"in_meeting": "boolean",
										"join_before_host": "boolean",
										"mute_upon_entry": "boolean",
										"watermark": "boolean",
										"use_pmi": "boolean",
										"approval_type": "integer",
										"registration_type": "integer",
										"audio": "string",
										"auto_recording": "string",
										"enforce_login": "boolean",
										"enforce_login_domains": "string",
										"alternative_hosts": "string"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"participant_video": {
											"description": "Start meetings with participant video on. Participants can change this during the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"cn_meeting": {
											"description": "Host meeting in China.",
											"example": "boolean",
											"type": "string"
										},
										"in_meeting": {
											"description": "Host meeting in India.",
											"example": "boolean",
											"type": "string"
										},
										"join_before_host": {
											"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
											"example": "boolean",
											"type": "string"
										},
										"mute_upon_entry": {
											"description": "Mute participants upon entry.",
											"example": "boolean",
											"type": "string"
										},
										"watermark": {
											"description": "Add watermark when viewing shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"use_pmi": {
											"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
											"example": "boolean",
											"type": "string"
										},
										"approval_type": {
											"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
											"example": "integer",
											"type": "string"
										},
										"registration_type": {
											"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
											"example": "integer",
											"type": "string"
										},
										"audio": {
											"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
											"example": "string",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"enforce_login": {
											"description": "Only signed-in users can join this meeting.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_hosts": {
											"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
											"example": "string",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users/%7B%7BuserId%7D%7D/meetings",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"topic\":\"string\",\"type\":\"integer\",\"start_time\":\"string [date-time]\",\"duration\":\"integer\",\"timezone\":\"string\",\"password\":\"string\",\"agenda\":\"string\",\"recurrence\":{\"type\":\"integer\",\"repeat_interval\":\"integer\",\"weekly_days\":\"integer\",\"monthly_day\":\"integer\",\"monthly_week\":\"integer\",\"monthly_week_day\":\"integer\",\"end_times\":\"integer\",\"end_date_time\":\"string [date-time]\"},\"settings\":{\"host_video\":\"boolean\",\"participant_video\":\"boolean\",\"cn_meeting\":\"boolean\",\"in_meeting\":\"boolean\",\"join_before_host\":\"boolean\",\"mute_upon_entry\":\"boolean\",\"watermark\":\"boolean\",\"use_pmi\":\"boolean\",\"approval_type\":\"integer\",\"registration_type\":\"integer\",\"audio\":\"string\",\"auto_recording\":\"string\",\"enforce_login\":\"boolean\",\"enforce_login_domains\":\"string\",\"alternative_hosts\":\"string\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a meeting",
					"x-testDescription": "Create a meeting for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}": {
			"get": {
				"description": "Retrieve a meeting's details",
				"summary": "Retrieve a meeting",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsByMeetingIdGet",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a meeting",
					"x-testDescription": "Retrieve a meeting's details"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a meeting",
				"summary": "Delete a meeting",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsByMeetingIdDelete",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/meetings/{{meetingId}}?occurrence_id={{occurrence_id}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a meeting",
					"x-testDescription": "Delete a meeting"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a meeting's details",
				"summary": "Update a meeting",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsByMeetingIdPatch",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a meetingRequest",
							"example": {
								"topic": "string",
								"type": "integer",
								"start_time": "string [date-time]",
								"duration": "integer",
								"timezone": "string",
								"password": "string",
								"agenda": "string",
								"recurrence": {
									"type": "integer",
									"repeat_interval": "integer",
									"weekly_days": "integer",
									"monthly_day": "integer",
									"monthly_week": "integer",
									"monthly_week_day": "integer",
									"end_times": "integer",
									"end_date_time": "string [date-time]"
								},
								"settings": {
									"host_video": "boolean",
									"participant_video": "boolean",
									"cn_meeting": "boolean",
									"in_meeting": "boolean",
									"join_before_host": "boolean",
									"mute_upon_entry": "boolean",
									"watermark": "boolean",
									"use_pmi": "boolean",
									"approval_type": "integer",
									"registration_type": "integer",
									"audio": "string",
									"auto_recording": "string",
									"enforce_login": "boolean",
									"enforce_login_domains": "string",
									"alternative_hosts": "string",
									"registrants_confirmation_email": "boolean"
								}
							},
							"type": "object",
							"properties": {
								"topic": {
									"description": "Topic",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "integer",
									"type": "string"
								},
								"start_time": {
									"description": "Start time.",
									"example": "string [date-time]",
									"type": "string"
								},
								"duration": {
									"description": "Duration in minutes",
									"example": "integer",
									"type": "string"
								},
								"timezone": {
									"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
									"example": "string",
									"type": "string"
								},
								"password": {
									"description": "Sets password.",
									"example": "string",
									"type": "string"
								},
								"agenda": {
									"description": "Meeting description.",
									"example": "string",
									"type": "string"
								},
								"recurrence": {
									"title": "Recurrence",
									"example": {
										"type": "integer",
										"repeat_interval": "integer",
										"weekly_days": "integer",
										"monthly_day": "integer",
										"monthly_week": "integer",
										"monthly_week_day": "integer",
										"end_times": "integer",
										"end_date_time": "string [date-time]"
									},
									"type": "object",
									"properties": {
										"type": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"repeat_interval": {
											"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
											"example": "integer",
											"type": "string"
										},
										"weekly_days": {
											"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
											"example": "integer",
											"type": "string"
										},
										"monthly_day": {
											"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week": {
											"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week_day": {
											"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
											"example": "integer",
											"type": "string"
										},
										"end_times": {
											"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
											"example": "integer",
											"type": "string"
										},
										"end_date_time": {
											"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
											"example": "string [date-time]",
											"type": "string"
										}
									}
								},
								"settings": {
									"title": "Settings36",
									"example": {
										"host_video": "boolean",
										"participant_video": "boolean",
										"cn_meeting": "boolean",
										"in_meeting": "boolean",
										"join_before_host": "boolean",
										"mute_upon_entry": "boolean",
										"watermark": "boolean",
										"use_pmi": "boolean",
										"approval_type": "integer",
										"registration_type": "integer",
										"audio": "string",
										"auto_recording": "string",
										"enforce_login": "boolean",
										"enforce_login_domains": "string",
										"alternative_hosts": "string",
										"registrants_confirmation_email": "boolean"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"participant_video": {
											"description": "Start meetings with participant video on. Participants can change this during the meeting.",
											"example": "boolean",
											"type": "string"
										},
										"cn_meeting": {
											"description": "Host meeting in China.",
											"example": "boolean",
											"type": "string"
										},
										"in_meeting": {
											"description": "Host meeting in India.",
											"example": "boolean",
											"type": "string"
										},
										"join_before_host": {
											"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
											"example": "boolean",
											"type": "string"
										},
										"mute_upon_entry": {
											"description": "Mute participants upon entry.",
											"example": "boolean",
											"type": "string"
										},
										"watermark": {
											"description": "Add watermark when viewing shared screen.",
											"example": "boolean",
											"type": "string"
										},
										"use_pmi": {
											"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
											"example": "boolean",
											"type": "string"
										},
										"approval_type": {
											"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
											"example": "integer",
											"type": "string"
										},
										"registration_type": {
											"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
											"example": "integer",
											"type": "string"
										},
										"audio": {
											"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
											"example": "string",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"enforce_login": {
											"description": "Only signed-in users can join this meeting.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_hosts": {
											"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
											"example": "string",
											"type": "string"
										},
										"registrants_confirmation_email": {
											"description": "Send confirmation Email to Registrants.",
											"example": "boolean",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"topic\":\"string\",\"type\":\"integer\",\"start_time\":\"string [date-time]\",\"duration\":\"integer\",\"timezone\":\"string\",\"password\":\"string\",\"agenda\":\"string\",\"recurrence\":{\"type\":\"integer\",\"repeat_interval\":\"integer\",\"weekly_days\":\"integer\",\"monthly_day\":\"integer\",\"monthly_week\":\"integer\",\"monthly_week_day\":\"integer\",\"end_times\":\"integer\",\"end_date_time\":\"string [date-time]\"},\"settings\":{\"host_video\":\"boolean\",\"participant_video\":\"boolean\",\"cn_meeting\":\"boolean\",\"in_meeting\":\"boolean\",\"join_before_host\":\"boolean\",\"mute_upon_entry\":\"boolean\",\"watermark\":\"boolean\",\"use_pmi\":\"boolean\",\"approval_type\":\"integer\",\"registration_type\":\"integer\",\"audio\":\"string\",\"auto_recording\":\"string\",\"enforce_login\":\"boolean\",\"enforce_login_domains\":\"string\",\"alternative_hosts\":\"string\",\"registrants_confirmation_email\":\"boolean\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a meeting",
					"x-testDescription": "Update a meeting's details"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/status": {
			"put": {
				"description": "Update a meeting's status",
				"summary": "Update a meeting's status",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsStatusByMeetingIdPut",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a meeting's statusRequest",
							"example": {
								"action": "string"
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D/status",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a meeting's status",
					"x-testDescription": "Update a meeting's status"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/registrants": {
			"get": {
				"description": "List registrants of a meeting",
				"summary": "List a meeting's registrants",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsRegistrantsByMeetingIdGet",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/meetings/{{meetingId}}/registrants?occurrence_id={{occurrence_id}}&status=approved&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a meeting's registrants",
					"x-testDescription": "List registrants of a meeting"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Register a participant for a meeting",
				"summary": "Add a meeting registrant",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsRegistrantsByMeetingIdPost",
				"parameters": [{
						"name": "occurrence_ids",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add a meeting registrantRequest",
							"example": {
								"email": "string",
								"first_name": "string",
								"last_name": "string",
								"address": "string",
								"city": "string",
								"country": "string",
								"zip": "string",
								"state": "string",
								"phone": "string",
								"industry": "string",
								"org": "string",
								"job_title": "string",
								"purchasing_time_frame": "string",
								"role_in_purchase_process": "string",
								"no_of_employees": "string",
								"comments": "string",
								"custom_questions": [{
									"title": "string",
									"value": "string"
								}]
							},
							"type": "object",
							"properties": {
								"email": {
									"description": "User's email address.",
									"example": "string",
									"type": "string"
								},
								"first_name": {
									"description": "User's first name.",
									"example": "string",
									"type": "string"
								},
								"last_name": {
									"description": "User's last name.",
									"example": "string",
									"type": "string"
								},
								"address": {
									"description": "User's address. ",
									"example": "string",
									"type": "string"
								},
								"city": {
									"description": "User's city. ",
									"example": "string",
									"type": "string"
								},
								"country": {
									"description": "User's country. ",
									"example": "string",
									"type": "string"
								},
								"zip": {
									"description": "User's zip code. ",
									"example": "string",
									"type": "string"
								},
								"state": {
									"description": "User's state. ",
									"example": "string",
									"type": "string"
								},
								"phone": {
									"description": "Phone",
									"example": "string",
									"type": "string"
								},
								"industry": {
									"description": "Industry",
									"example": "string",
									"type": "string"
								},
								"org": {
									"description": "Organization",
									"example": "string",
									"type": "string"
								},
								"job_title": {
									"description": "Job Title",
									"example": "string",
									"type": "string"
								},
								"purchasing_time_frame": {
									"description": "Purchasing Time Frame `Within a month` `1-3 months`  `4-6 months`  `More than 6 months` `No timeframe` ",
									"example": "string",
									"type": "string"
								},
								"role_in_purchase_process": {
									"description": "Role in Purchase Process `Decision Maker` `Evaluator/Recommender`  `Influencer` `Not involved` ",
									"example": "string",
									"type": "string"
								},
								"no_of_employees": {
									"description": "Number of Employees `1-20` `21-50` `51-100` `101-500` `500-1,000` `1,001-5,000` `5,001-10,000` `More than 10,000` ",
									"example": "string",
									"type": "string"
								},
								"comments": {
									"description": "Questions & Comments.",
									"example": "string",
									"type": "string"
								},
								"custom_questions": {
									"description": "Custom Questions.",
									"example": [{
										"title": "string",
										"value": "string"
									}],
									"type": "array",
									"items": {
										"title": "CustomQuestion",
										"example": {
											"title": "string",
											"value": "string"
										},
										"type": "object",
										"properties": {
											"title": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"value": {
												"description": "",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"title",
											"value"
										]
									}
								}
							},
							"required": [
								"email",
								"first_name",
								"last_name"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/meetings/{{meetingId}}/registrants?occurrence_ids={{occurrence_ids}}",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"email\":\"string\",\"first_name\":\"string\",\"last_name\":\"string\",\"address\":\"string\",\"city\":\"string\",\"country\":\"string\",\"zip\":\"string\",\"state\":\"string\",\"phone\":\"string\",\"industry\":\"string\",\"org\":\"string\",\"job_title\":\"string\",\"purchasing_time_frame\":\"string\",\"role_in_purchase_process\":\"string\",\"no_of_employees\":\"string\",\"comments\":\"string\",\"custom_questions\":[{\"title\":\"string\",\"value\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add a meeting registrant",
					"x-testDescription": "Register a participant for a meeting"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/registrants/status": {
			"put": {
				"description": "Update a meeting registrant's status",
				"summary": "Update a meeting registrant's status",
				"tags": [
					"Meetings"
				],
				"operationId": "MeetingsRegistrantsStatusByMeetingIdPut",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a meeting registrant's statusRequest",
							"example": {
								"action": "string",
								"registrants": [{
									"id": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"registrants": {
									"description": "",
									"example": [{
										"id": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Registrant",
										"example": {
											"id": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"id": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"id",
											"email"
										]
									}
								}
							},
							"required": [
								"action"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/meetings/{{meetingId}}/registrants/status?occurrence_id={{occurrence_id}}",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\",\"registrants\":[{\"id\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a meeting registrant's status",
					"x-testDescription": "Update a meeting registrant's status"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/past_meetings/{meetingUUID}": {
			"get": {
				"description": "Retrieve ended meeting details",
				"summary": "Retrieve past meeting details",
				"tags": [
					"Meetings"
				],
				"operationId": "PastMeetingsByMeetingUUIDGet",
				"parameters": [{
						"name": "meetingUUID",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/past_meetings/%7B%7BmeetingUUID%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve past meeting details",
					"x-testDescription": "Retrieve ended meeting details"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/past_meetings/{meetingUUID}/participants": {
			"get": {
				"description": "Retrieve ended meeting participants",
				"summary": "Retrieve past meeting participants",
				"tags": [
					"Meetings"
				],
				"operationId": "PastMeetingsParticipantsByMeetingUUIDGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingUUID",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/past_meetings/{{meetingUUID}}/participants?page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve past meeting participants",
					"x-testDescription": "Retrieve ended meeting participants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}": {
			"get": {
				"description": "Retrieve a webinar",
				"summary": "Retrieve a webinar",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a webinar",
					"x-testDescription": "Retrieve a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a webinar",
				"summary": "Delete a webinar",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsByWebinarIdDelete",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/webinars/{{webinarId}}?occurrence_id={{occurrence_id}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a webinar",
					"x-testDescription": "Delete a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a webinar",
				"summary": "Update a webinar",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsByWebinarIdPatch",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a webinarRequest",
							"example": {
								"topic": "string",
								"type": "integer",
								"start_time": "string [date-time]",
								"duration": "integer",
								"timezone": "string",
								"password": "string",
								"agenda": "string",
								"recurrence": {
									"type": "integer",
									"repeat_interval": "integer",
									"weekly_days": "integer",
									"monthly_day": "integer",
									"monthly_week": "integer",
									"monthly_week_day": "integer",
									"end_times": "integer",
									"end_date_time": "string [date-time]"
								},
								"settings": {
									"host_video": "boolean",
									"panelists_video": "boolean",
									"practice_session": "boolean",
									"hd_video": "boolean",
									"approval_type": "integer",
									"registration_type": "integer",
									"audio": "string",
									"auto_recording": "string",
									"enforce_login": "boolean",
									"enforce_login_domains": "string",
									"alternative_hosts": "string",
									"close_registration": "boolean",
									"show_share_button": "boolean",
									"allow_multiple_devices": "boolean",
									"registrants_confirmation_email": "boolean"
								}
							},
							"type": "object",
							"properties": {
								"topic": {
									"description": "Topic",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "integer",
									"type": "string"
								},
								"start_time": {
									"description": "Start time.",
									"example": "string [date-time]",
									"type": "string"
								},
								"duration": {
									"description": "Duration in minutes",
									"example": "integer",
									"type": "string"
								},
								"timezone": {
									"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
									"example": "string",
									"type": "string"
								},
								"password": {
									"description": "Sets password.",
									"example": "string",
									"type": "string"
								},
								"agenda": {
									"description": "Meeting description.",
									"example": "string",
									"type": "string"
								},
								"recurrence": {
									"title": "Recurrence",
									"example": {
										"type": "integer",
										"repeat_interval": "integer",
										"weekly_days": "integer",
										"monthly_day": "integer",
										"monthly_week": "integer",
										"monthly_week_day": "integer",
										"end_times": "integer",
										"end_date_time": "string [date-time]"
									},
									"type": "object",
									"properties": {
										"type": {
											"description": "",
											"example": "integer",
											"type": "string"
										},
										"repeat_interval": {
											"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
											"example": "integer",
											"type": "string"
										},
										"weekly_days": {
											"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
											"example": "integer",
											"type": "string"
										},
										"monthly_day": {
											"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week": {
											"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
											"example": "integer",
											"type": "string"
										},
										"monthly_week_day": {
											"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
											"example": "integer",
											"type": "string"
										},
										"end_times": {
											"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
											"example": "integer",
											"type": "string"
										},
										"end_date_time": {
											"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
											"example": "string [date-time]",
											"type": "string"
										}
									}
								},
								"settings": {
									"title": "Settings47",
									"example": {
										"host_video": "boolean",
										"panelists_video": "boolean",
										"practice_session": "boolean",
										"hd_video": "boolean",
										"approval_type": "integer",
										"registration_type": "integer",
										"audio": "string",
										"auto_recording": "string",
										"enforce_login": "boolean",
										"enforce_login_domains": "string",
										"alternative_hosts": "string",
										"close_registration": "boolean",
										"show_share_button": "boolean",
										"allow_multiple_devices": "boolean",
										"registrants_confirmation_email": "boolean"
									},
									"type": "object",
									"properties": {
										"enforce_login_domains": {
											"description": "Start meetings with host video on.",
											"example": "boolean",
											"type": "string"
										},
										"panelists_video": {
											"description": "Start video when panelists join webinar.",
											"example": "boolean",
											"type": "string"
										},
										"practice_session": {
											"description": "Enable Practice Session.",
											"example": "boolean",
											"type": "string"
										},
										"hd_video": {
											"description": "Default to HD Video.",
											"example": "boolean",
											"type": "string"
										},
										"approval_type": {
											"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
											"example": "integer",
											"type": "string"
										},
										"registration_type": {
											"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
											"example": "integer",
											"type": "string"
										},
										"audio": {
											"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
											"example": "string",
											"type": "string"
										},
										"auto_recording": {
											"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
											"example": "string",
											"type": "string"
										},
										"enforce_login": {
											"description": "Only signed-in users can join this meeting.",
											"example": "boolean",
											"type": "string"
										},
										"alternative_hosts": {
											"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
											"example": "string",
											"type": "string"
										},
										"close_registration": {
											"description": "Close registration after event date.",
											"example": "boolean",
											"type": "string"
										},
										"show_share_button": {
											"description": "Show social share buttons on registration page.",
											"example": "boolean",
											"type": "string"
										},
										"allow_multiple_devices": {
											"description": "Allow attendees to join from multiple devices.",
											"example": "boolean",
											"type": "string"
										},
										"registrants_confirmation_email": {
											"description": "Send confirmation Email to Registrants.",
											"example": "boolean",
											"type": "string"
										}
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"topic\":\"string\",\"type\":\"integer\",\"start_time\":\"string [date-time]\",\"duration\":\"integer\",\"timezone\":\"string\",\"password\":\"string\",\"agenda\":\"string\",\"recurrence\":{\"type\":\"integer\",\"repeat_interval\":\"integer\",\"weekly_days\":\"integer\",\"monthly_day\":\"integer\",\"monthly_week\":\"integer\",\"monthly_week_day\":\"integer\",\"end_times\":\"integer\",\"end_date_time\":\"string [date-time]\"},\"settings\":{\"host_video\":\"boolean\",\"panelists_video\":\"boolean\",\"practice_session\":\"boolean\",\"hd_video\":\"boolean\",\"approval_type\":\"integer\",\"registration_type\":\"integer\",\"audio\":\"string\",\"auto_recording\":\"string\",\"enforce_login\":\"boolean\",\"enforce_login_domains\":\"string\",\"alternative_hosts\":\"string\",\"close_registration\":\"boolean\",\"show_share_button\":\"boolean\",\"allow_multiple_devices\":\"boolean\",\"registrants_confirmation_email\":\"boolean\"}}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a webinar",
					"x-testDescription": "Update a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}/status": {
			"put": {
				"description": "Update a webinar's status",
				"summary": "Update a webinar's status",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsStatusByWebinarIdPut",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a webinar's statusRequest",
							"example": {
								"status": "string"
							},
							"type": "object",
							"properties": {
								"status": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D/status",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"status\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a webinar's status",
					"x-testDescription": "Update a webinar's status"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}/panelists": {
			"get": {
				"description": "List panelists for a webinar",
				"summary": "List a webinar's panelists",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsPanelistsByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D/panelists",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a webinar's panelists",
					"x-testDescription": "List panelists for a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add panelist to webinar",
				"summary": "Add a webinar panelist",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsPanelistsByWebinarIdPost",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add a webinar panelistRequest",
							"example": {
								"panelists": [{
									"name": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"panelists": {
									"description": "",
									"example": [{
										"name": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Panelist",
										"example": {
											"name": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"name": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"name",
											"email"
										]
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D/panelists",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"panelists\":[{\"name\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add a webinar panelist",
					"x-testDescription": "Add panelist to webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Remove all panelists from a webinar",
				"summary": "Remove a webinar's panelists",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsPanelistsByWebinarIdDelete",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D/panelists",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Remove a webinar's panelists",
					"x-testDescription": "Remove all panelists from a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}/panelists/{panelistId}": {
			"delete": {
				"description": "Remove a panelist from a webinar",
				"summary": "Remove a webinar panelist",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsPanelistsByWebinarIdAndPanelistIdDelete",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "panelistId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/webinars/%7B%7BwebinarId%7D%7D/panelists/%7B%7BpanelistId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Remove a webinar panelist",
					"x-testDescription": "Remove a panelist from a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}/registrants": {
			"get": {
				"description": "List registrants for a webinar",
				"summary": "List a webinar's registrants",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsRegistrantsByWebinarIdGet",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "status",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/webinars/{{webinarId}}/registrants?occurrence_id={{occurrence_id}}&status=approved&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a webinar's registrants",
					"x-testDescription": "List registrants for a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add a registrant for a webinar",
				"summary": "Add a webinar registrant",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsRegistrantsByWebinarIdPost",
				"parameters": [{
						"name": "occurrence_ids",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add a webinar registrantRequest",
							"example": {
								"email": "string",
								"first_name": "string",
								"last_name": "string",
								"address": "string",
								"city": "string",
								"country": "string",
								"zip": "string",
								"state": "string",
								"phone": "string",
								"industry": "string",
								"org": "string",
								"job_title": "string",
								"purchasing_time_frame": "string",
								"role_in_purchase_process": "string",
								"no_of_employees": "string",
								"comments": "string",
								"custom_questions": [{
									"title": "string",
									"value": "string"
								}]
							},
							"type": "object",
							"properties": {
								"email": {
									"description": "User's email address.",
									"example": "string",
									"type": "string"
								},
								"first_name": {
									"description": "User's first name.",
									"example": "string",
									"type": "string"
								},
								"last_name": {
									"description": "User's last name.",
									"example": "string",
									"type": "string"
								},
								"address": {
									"description": "User's address. ",
									"example": "string",
									"type": "string"
								},
								"city": {
									"description": "User's city. ",
									"example": "string",
									"type": "string"
								},
								"country": {
									"description": "User's country. ",
									"example": "string",
									"type": "string"
								},
								"zip": {
									"description": "User's zip code. ",
									"example": "string",
									"type": "string"
								},
								"state": {
									"description": "User's state. ",
									"example": "string",
									"type": "string"
								},
								"phone": {
									"description": "Phone",
									"example": "string",
									"type": "string"
								},
								"industry": {
									"description": "Industry",
									"example": "string",
									"type": "string"
								},
								"org": {
									"description": "Organization",
									"example": "string",
									"type": "string"
								},
								"job_title": {
									"description": "Job Title",
									"example": "string",
									"type": "string"
								},
								"purchasing_time_frame": {
									"description": "Purchasing Time Frame `Within a month` `1-3 months`  `4-6 months`  `More than 6 months` `No timeframe` ",
									"example": "string",
									"type": "string"
								},
								"role_in_purchase_process": {
									"description": "Role in Purchase Process `Decision Maker` `Evaluator/Recommender`  `Influencer` `Not involved` ",
									"example": "string",
									"type": "string"
								},
								"no_of_employees": {
									"description": "Number of Employees `1-20` `21-50` `51-100` `101-500` `500-1,000` `1,001-5,000` `5,001-10,000` `More than 10,000` ",
									"example": "string",
									"type": "string"
								},
								"comments": {
									"description": "Questions & Comments.",
									"example": "string",
									"type": "string"
								},
								"custom_questions": {
									"description": "Custom Questions.",
									"example": [{
										"title": "string",
										"value": "string"
									}],
									"type": "array",
									"items": {
										"title": "CustomQuestion",
										"example": {
											"title": "string",
											"value": "string"
										},
										"type": "object",
										"properties": {
											"title": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"value": {
												"description": "",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"title",
											"value"
										]
									}
								}
							},
							"required": [
								"email",
								"first_name",
								"last_name"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/webinars/{{webinarId}}/registrants?occurrence_ids={{occurrence_ids}}",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"email\":\"string\",\"first_name\":\"string\",\"last_name\":\"string\",\"address\":\"string\",\"city\":\"string\",\"country\":\"string\",\"zip\":\"string\",\"state\":\"string\",\"phone\":\"string\",\"industry\":\"string\",\"org\":\"string\",\"job_title\":\"string\",\"purchasing_time_frame\":\"string\",\"role_in_purchase_process\":\"string\",\"no_of_employees\":\"string\",\"comments\":\"string\",\"custom_questions\":[{\"title\":\"string\",\"value\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add a webinar registrant",
					"x-testDescription": "Add a registrant for a webinar"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webinars/{webinarId}/registrants/status": {
			"put": {
				"description": "Update a webinar registrant's status",
				"summary": "Update a webinar registrant's status",
				"tags": [
					"Webinars"
				],
				"operationId": "WebinarsRegistrantsStatusByWebinarIdPut",
				"parameters": [{
						"name": "occurrence_id",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a webinar registrant's statusRequest",
							"example": {
								"action": "string",
								"registrants": [{
									"id": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"registrants": {
									"description": "",
									"example": [{
										"id": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Registrant",
										"example": {
											"id": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"id": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"id",
											"email"
										]
									}
								}
							},
							"required": [
								"action"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/webinars/{{webinarId}}/registrants/status?occurrence_id={{occurrence_id}}",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\",\"registrants\":[{\"id\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a webinar registrant's status",
					"x-testDescription": "Update a webinar registrant's status"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/past_webinars/{webinarId}/instances": {
			"get": {
				"description": "List of ended webinar instances",
				"summary": "List of ended webinar instances",
				"tags": [
					"Webinars"
				],
				"operationId": "PastWebinarsInstancesByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/past_webinars/%7B%7BwebinarId%7D%7D/instances",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List of ended webinar instances",
					"x-testDescription": "List of ended webinar instances"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/groups": {
			"get": {
				"description": "List groups under your account",
				"summary": "List groups",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsGet",
				"parameters": [{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/groups",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List groups",
					"x-testDescription": "List groups under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a group under your account",
				"summary": "Create a group",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a groupRequest",
							"example": {
								"name": "string"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"name"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/groups",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a group",
					"x-testDescription": "Create a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/groups/{groupId}": {
			"get": {
				"description": "Retrieve a group under your account",
				"summary": "Retrieve a group",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsByGroupIdGet",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a group",
					"x-testDescription": "Retrieve a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a group under your account",
				"summary": "Delete a group",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsByGroupIdDelete",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a group",
					"x-testDescription": "Delete a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a group under your account",
				"summary": "Update a group",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsByGroupIdPatch",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a groupRequest",
							"example": {
								"name": "string"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"name"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a group",
					"x-testDescription": "Update a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/groups/{groupId}/members": {
			"get": {
				"description": "List a group's members under your account",
				"summary": "List a group's members",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsMembersByGroupIdGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/groups/{{groupId}}/members?page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List a group's members",
					"x-testDescription": "List a group's members under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add members to a group under your account",
				"summary": "Add group members",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsMembersByGroupIdPost",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add group membersRequest",
							"example": {
								"members": [{
									"id": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"members": {
									"description": "",
									"example": [{
										"id": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Member",
										"example": {
											"id": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"id": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"id",
											"email"
										]
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/groups/%7B%7BgroupId%7D%7D/members",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"members\":[{\"id\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add group members",
					"x-testDescription": "Add members to a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/groups/{groupId}/members/{memberId}": {
			"delete": {
				"description": "Delete a member from a group under your account",
				"summary": "Delete a group member",
				"tags": [
					"Groups"
				],
				"operationId": "GroupsMembersByGroupIdAndMemberIdDelete",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "memberId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/groups/%7B%7BgroupId%7D%7D/members/%7B%7BmemberId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a group member",
					"x-testDescription": "Delete a member from a group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/groups": {
			"get": {
				"description": "List IM groups under your account",
				"summary": "List IM Groups",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsGet",
				"parameters": [{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/im/groups",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List IM Groups",
					"x-testDescription": "List IM groups under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a IM Group under your account",
				"summary": "Create an IM Group",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create an IM GroupRequest",
							"example": {
								"name": "string",
								"type": "string",
								"search_by_domain": "boolean",
								"search_by_account": "boolean",
								"search_by_ma_account": "boolean"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"search_by_domain": {
									"description": "",
									"example": "boolean",
									"type": "string"
								},
								"search_by_account": {
									"description": "",
									"example": "boolean",
									"type": "string"
								},
								"search_by_ma_account": {
									"description": "",
									"example": "boolean",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/im/groups",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\",\"type\":\"string\",\"search_by_domain\":\"boolean\",\"search_by_account\":\"boolean\",\"search_by_ma_account\":\"boolean\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create an IM Group",
					"x-testDescription": "Create a IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/groups/{groupId}": {
			"get": {
				"description": "Retrieve an IM Group under your account",
				"summary": "Retrieve an IM Group",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsByGroupIdGet",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/im/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve an IM Group",
					"x-testDescription": "Retrieve an IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete an IM Group under your account",
				"summary": "Delete an IM Group",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsByGroupIdDelete",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/im/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete an IM Group",
					"x-testDescription": "Delete an IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update an IM Group under your account",
				"summary": "Update an IM Group",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsByGroupIdPatch",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update an IM GroupRequest",
							"example": {
								"name": "string",
								"type": "string",
								"search_by_domain": "boolean",
								"search_by_account": "boolean",
								"search_by_ma_account": "boolean"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"type": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"search_by_domain": {
									"description": "",
									"example": "boolean",
									"type": "string"
								},
								"search_by_account": {
									"description": "",
									"example": "boolean",
									"type": "string"
								},
								"search_by_ma_account": {
									"description": "",
									"example": "boolean",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/im/groups/%7B%7BgroupId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\",\"type\":\"string\",\"search_by_domain\":\"boolean\",\"search_by_account\":\"boolean\",\"search_by_ma_account\":\"boolean\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update an IM Group",
					"x-testDescription": "Update an IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/groups/{groupId}/members": {
			"get": {
				"description": "List an IM Group's members under your account",
				"summary": "List an IM Group's members",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsMembersByGroupIdGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/im/groups/{{groupId}}/members?page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List an IM Group's members",
					"x-testDescription": "List an IM Group's members under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add members to an IM Group under your account",
				"summary": "Add IM Group members",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsMembersByGroupIdPost",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add IM Group membersRequest",
							"example": {
								"members": [{
									"id": "string",
									"email": "string"
								}]
							},
							"type": "object",
							"properties": {
								"members": {
									"description": "",
									"example": [{
										"id": "string",
										"email": "string"
									}],
									"type": "array",
									"items": {
										"title": "Member",
										"example": {
											"id": "string",
											"email": "string"
										},
										"type": "object",
										"properties": {
											"id": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"email": {
												"description": "User's email address.",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"id",
											"email"
										]
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/im/groups/%7B%7BgroupId%7D%7D/members",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"members\":[{\"id\":\"string\",\"email\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add IM Group members",
					"x-testDescription": "Add members to an IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/groups/{groupId}/members/{memberId}": {
			"delete": {
				"description": "Delete a member from an IM Group under your account",
				"summary": "Delete an IM Group member",
				"tags": [
					"IM Groups"
				],
				"operationId": "ImGroupsMembersByGroupIdAndMemberIdDelete",
				"parameters": [{
						"name": "groupId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "memberId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/im/groups/%7B%7BgroupId%7D%7D/members/%7B%7BmemberId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete an IM Group member",
					"x-testDescription": "Delete a member from an IM Group under your account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/chat/sessions": {
			"get": {
				"description": "Retrieve IM Chat sessions for a specified period <aside>This API only supports oauth2.</aside>",
				"summary": "Retrieve IM Chat sessions",
				"tags": [
					"IM Chat"
				],
				"operationId": "ImChatSessionsGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/im/chat/sessions?from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve IM Chat sessions",
					"x-testDescription": "Retrieve IM Chat sessions for a specified period <aside>This API only supports oauth2.</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/im/chat/sessions/{sessionId}": {
			"get": {
				"description": "Retrieve IM Chat messages for a specified period <aside>This API only supports oauth2.</aside>",
				"summary": "Retrieve IM Chat messages",
				"tags": [
					"IM Chat"
				],
				"operationId": "ImChatSessionsBySessionIdGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "sessionId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/im/chat/sessions/{{sessionId}}?from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve IM Chat messages",
					"x-testDescription": "Retrieve IM Chat messages for a specified period <aside>This API only supports oauth2.</aside>"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/recordings": {
			"get": {
				"description": "List all the recordings",
				"summary": "List all the recordings",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "UsersRecordingsByUserIdGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "mc",
						"in": "query",
						"required": false,
						"type": "boolean",
						"description": ""
					},
					{
						"name": "trash",
						"in": "query",
						"required": false,
						"type": "boolean",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/{{userId}}/recordings?from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}&mc=false&trash=false",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List all the recordings",
					"x-testDescription": "List all the recordings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/recordings": {
			"get": {
				"description": "Retrieve a meeting’s all recordings",
				"summary": "Retrieve a meeting’s all recordings",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "MeetingsRecordingsByMeetingIdGet",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D/recordings",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a meeting’s all recordings",
					"x-testDescription": "Retrieve a meeting’s all recordings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a meeting's recordings",
				"summary": "Delete a meeting's recordings",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "MeetingsRecordingsByMeetingIdDelete",
				"parameters": [{
						"name": "action",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/meetings/{{meetingId}}/recordings?action=trash",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a meeting's recordings",
					"x-testDescription": "Delete a meeting's recordings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/recordings/{recordingId}": {
			"delete": {
				"description": "Delete one meeting recording file",
				"summary": "Delete one meeting recording file",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "MeetingsRecordingsByMeetingIdAndRecordingIdDelete",
				"parameters": [{
						"name": "action",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "recordingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/meetings/{{meetingId}}/recordings/{{recordingId}}?action=trash",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete one meeting recording file",
					"x-testDescription": "Delete one meeting recording file"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/recordings/status": {
			"put": {
				"description": "Recover a meeting's recordings",
				"summary": "Recover a meeting's recordings",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "MeetingsRecordingsStatusByMeetingIdPut",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Recover a meeting's recordingsRequest",
							"example": {
								"action": "string"
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D/recordings/status",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Recover a meeting's recordings",
					"x-testDescription": "Recover a meeting's recordings"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/meetings/{meetingId}/recordings/{recordingId}/status": {
			"put": {
				"description": "Recover a single recording",
				"summary": "Recover a single recording",
				"tags": [
					"Cloud Recording"
				],
				"operationId": "MeetingsRecordingsStatusByMeetingIdAndRecordingIdPut",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "recordingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Recover a single recordingRequest",
							"example": {
								"action": "string"
							},
							"type": "object",
							"properties": {
								"action": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PUT",
						"uri": "/meetings/%7B%7BmeetingId%7D%7D/recordings/%7B%7BrecordingId%7D%7D/status",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"action\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Recover a single recording",
					"x-testDescription": "Recover a single recording"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/daily": {
			"get": {
				"description": "Retrieve daily report for one month, can only get daily report for recent 6 months",
				"summary": "Retrieve daily report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportDailyGet",
				"parameters": [{
						"name": "year",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "month",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/daily?year={{year}}&month={{month}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve daily report",
					"x-testDescription": "Retrieve daily report for one month, can only get daily report for recent 6 months"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/users": {
			"get": {
				"description": "Retrieve active or inactive hosts report for a specified period",
				"summary": "Retrieve hosts report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportUsersGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/users?type={{type}}&from={{from}}&to={{to}}&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve hosts report",
					"x-testDescription": "Retrieve active or inactive hosts report for a specified period"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/users/{userId}/meetings": {
			"get": {
				"description": "Retrieve ended meetings report for a specified period",
				"summary": "Retrieve meetings report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportUsersMeetingsByUserIdGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/users/{{userId}}/meetings?from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meetings report",
					"x-testDescription": "Retrieve ended meetings report for a specified period"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/meetings/{meetingId}": {
			"get": {
				"description": "Retrieve ended meeting details report",
				"summary": "Retrieve meeting details report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportMeetingsByMeetingIdGet",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/meetings/%7B%7BmeetingId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting details report",
					"x-testDescription": "Retrieve ended meeting details report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/meetings/{meetingId}/participants": {
			"get": {
				"description": "Retrieve ended meeting participants report",
				"summary": "Retrieve meeting participants report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportMeetingsParticipantsByMeetingIdGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/meetings/{{meetingId}}/participants?page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting participants report",
					"x-testDescription": "Retrieve ended meeting participants report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/meetings/{meetingId}/polls": {
			"get": {
				"description": "Retrieve ended meeting polls report",
				"summary": "Retrieve meeting polls report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportMeetingsPollsByMeetingIdGet",
				"parameters": [{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/meetings/%7B%7BmeetingId%7D%7D/polls",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting polls report",
					"x-testDescription": "Retrieve ended meeting polls report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/webinars/{webinarId}": {
			"get": {
				"description": "Retrieve ended webinar details report",
				"summary": "Retrieve webinar details report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportWebinarsByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/webinars/%7B%7BwebinarId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar details report",
					"x-testDescription": "Retrieve ended webinar details report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/webinars/{webinarId}/participants": {
			"get": {
				"description": "Retrieve ended webinar participants report",
				"summary": "Retrieve webinar participants report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportWebinarsParticipantsByWebinarIdGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/webinars/{{webinarId}}/participants?page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar participants report",
					"x-testDescription": "Retrieve ended webinar participants report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/webinars/{webinarId}/polls": {
			"get": {
				"description": "Retrieve ended webinar polls report",
				"summary": "Retrieve webinar polls report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportWebinarsPollsByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/webinars/%7B%7BwebinarId%7D%7D/polls",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar polls report",
					"x-testDescription": "Retrieve ended webinar polls report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/webinars/{webinarId}/qa": {
			"get": {
				"description": "Retrieve ended webinar Q&A report",
				"summary": "Retrieve webinar Q&A report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportWebinarsQaByWebinarIdGet",
				"parameters": [{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/webinars/%7B%7BwebinarId%7D%7D/qa",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar Q&A report",
					"x-testDescription": "Retrieve ended webinar Q&A report"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/report/telephone": {
			"get": {
				"description": "Retrieve telephone report for a specified period <aside>Toll Report option would be removed.</aside>.",
				"summary": "Retrieve telephone report",
				"tags": [
					"Reports"
				],
				"operationId": "ReportTelephoneGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/report/telephone?type=1&from={{from}}&to={{to}}&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve telephone report",
					"x-testDescription": "Retrieve telephone report for a specified period <aside>Toll Report option would be removed.</aside>."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings": {
			"get": {
				"description": "List live meetings or past meetings for a specified period",
				"summary": "List meetings",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings?type=live&from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List meetings",
					"x-testDescription": "List live meetings or past meetings for a specified period"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings/{meetingId}": {
			"get": {
				"description": "Retrieve live or past meetings detail",
				"summary": "Retrieve meeting detail",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsByMeetingIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings/{{meetingId}}?type=live",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting detail",
					"x-testDescription": "Retrieve live or past meetings detail"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings/{meetingId}/participants": {
			"get": {
				"description": "Retrieve live or past meetings participants",
				"summary": "Retrieve meeting participants",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsParticipantsByMeetingIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings/{{meetingId}}/participants?type=live&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting participants",
					"x-testDescription": "Retrieve live or past meetings participants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings/{meetingId}/participants/{participantId}/qos": {
			"get": {
				"description": "Retrieve live or past meetings participant quality of service",
				"summary": "Retrieve meeting participant QOS",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsParticipantsQosByMeetingIdAndParticipantIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "participantId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings/{{meetingId}}/participants/{{participantId}}/qos?type=live",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve meeting participant QOS",
					"x-testDescription": "Retrieve live or past meetings participant quality of service"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings/{meetingId}/participants/qos": {
			"get": {
				"description": "Retrieve list of live or past meetings participants quality of service",
				"summary": "List meeting participants QOS",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsParticipantsQosByMeetingIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings/{{meetingId}}/participants/qos?type=live&page_size=1&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List meeting participants QOS",
					"x-testDescription": "Retrieve list of live or past meetings participants quality of service"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/meetings/{meetingId}/participants/sharing": {
			"get": {
				"description": "Retrieve sharing/recording details of live or past meetings participant",
				"summary": "Retrieve sharing/recording details of meeting participant",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsMeetingsParticipantsSharingByMeetingIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "meetingId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/meetings/{{meetingId}}/participants/sharing?type=live&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve sharing/recording details of meeting participant",
					"x-testDescription": "Retrieve sharing/recording details of live or past meetings participant"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars": {
			"get": {
				"description": "List live webinars or past webinars for a specified period",
				"summary": "List webinars",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars?type=live&from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List webinars",
					"x-testDescription": "List live webinars or past webinars for a specified period"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars/{webinarId}": {
			"get": {
				"description": "Retrieve live  or past webinars detail",
				"summary": "Retrieve webinar detail",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsByWebinarIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars/{{webinarId}}?type=live",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar detail",
					"x-testDescription": "Retrieve live  or past webinars detail"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars/{webinarId}/participants": {
			"get": {
				"description": "Retrieve live or past webinar participants",
				"summary": "Retrieve webinar participants",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsParticipantsByWebinarIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars/{{webinarId}}/participants?type=live&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar participants",
					"x-testDescription": "Retrieve live or past webinar participants"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars/{webinarId}/participants/{participantId}/qos": {
			"get": {
				"description": "Retrieve live or past webinar participant quality of service",
				"summary": "Retrieve webinar participant QOS",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsParticipantsQosByWebinarIdAndParticipantIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "participantId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars/{{webinarId}}/participants/{{participantId}}/qos?type=live",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve webinar participant QOS",
					"x-testDescription": "Retrieve live or past webinar participant quality of service"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars/{webinarId}/participants/qos": {
			"get": {
				"description": "Retrieve list of live or past webinar participants quality of service",
				"summary": "List webinar participant QOS",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsParticipantsQosByWebinarIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars/{{webinarId}}/participants/qos?type=live&page_size=1&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List webinar participant QOS",
					"x-testDescription": "Retrieve list of live or past webinar participants quality of service"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/webinars/{webinarId}/participants/sharing": {
			"get": {
				"description": "Retrieve sharing/recording details of live or past webinar participant",
				"summary": "Retrieve sharing/recording details of webinar participant",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsWebinarsParticipantsSharingByWebinarIdGet",
				"parameters": [{
						"name": "type",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "webinarId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/webinars/{{webinarId}}/participants/sharing?type=live&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve sharing/recording details of webinar participant",
					"x-testDescription": "Retrieve sharing/recording details of live or past webinar participant"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/zoomrooms": {
			"get": {
				"description": "List all zoom rooms on account",
				"summary": "List Zoom Rooms",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsZoomroomsGet",
				"parameters": [{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/zoomrooms?page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List Zoom Rooms",
					"x-testDescription": "List all zoom rooms on account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/zoomrooms/{zoomroomId}": {
			"get": {
				"description": "Retrieve zoom room on account",
				"summary": "Retrieve Zoom Room",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsZoomroomsByZoomroomIdGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": true,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "page_number",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "zoomroomId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/zoomrooms/{{zoomroomId}}?from={{from}}&to={{to}}&page_size=30&page_number=1",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve Zoom Room",
					"x-testDescription": "Retrieve zoom room on account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/crc": {
			"get": {
				"description": "Get CRC Port usage hour by hour for a specified time period <aside class='notice'>We will report a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is \"2017-10-10\" we will adjust \"from\" to \"2017-09-10\"</aside>.",
				"summary": "Retrieve CRC Port Usage",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsCrcGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/crc?from={{from}}&to={{to}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve CRC Port Usage",
					"x-testDescription": "Get CRC Port usage hour by hour for a specified time period <aside class='notice'>We will report a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is \"2017-10-10\" we will adjust \"from\" to \"2017-09-10\"</aside>."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/metrics/im": {
			"get": {
				"description": "Retrieve metrics of Zoom IM",
				"summary": "Retrieve IM",
				"tags": [
					"Dashboards"
				],
				"operationId": "MetricsImGet",
				"parameters": [{
						"name": "from",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "to",
						"in": "query",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "page_size",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32",
						"description": ""
					},
					{
						"name": "next_page_token",
						"in": "query",
						"required": false,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/metrics/im?from={{from}}&to={{to}}&page_size=30&next_page_token={{next_page_token}}",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve IM",
					"x-testDescription": "Retrieve metrics of Zoom IM"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webhooks/options": {
			"patch": {
				"description": "Switch webhook version",
				"summary": "Switch webhook version",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksOptionsPatch",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Switch webhook versionRequest",
							"example": {
								"version": "string"
							},
							"type": "object",
							"properties": {
								"version": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"version"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/webhooks/options",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"version\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Switch webhook version",
					"x-testDescription": "Switch webhook version"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webhooks": {
			"get": {
				"description": "List webhooks for a account",
				"summary": "List webhooks",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksGet",
				"parameters": [{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/webhooks",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List webhooks",
					"x-testDescription": "List webhooks for a account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a webhook for a account",
				"summary": "Create a webhook",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a webhookRequest",
							"example": {
								"url": "string",
								"auth_user": "string",
								"auth_password": "string",
								"events": [
									"string"
								]
							},
							"type": "object",
							"properties": {
								"url": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"auth_user": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"auth_password": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"events": {
									"description": "",
									"example": [
										"string"
									],
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							},
							"required": [
								"url",
								"auth_user",
								"auth_password",
								"events"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/webhooks",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"url\":\"string\",\"auth_user\":\"string\",\"auth_password\":\"string\",\"events\":[\"string\"]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a webhook",
					"x-testDescription": "Create a webhook for a account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/webhooks/{webhookId}": {
			"get": {
				"description": "Retrieve a webhook",
				"summary": "Retrieve a webhook",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksByWebhookIdGet",
				"parameters": [{
						"name": "webhookId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/webhooks/%7B%7BwebhookId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a webhook",
					"x-testDescription": "Retrieve a webhook"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a webhook",
				"summary": "Delete a webhook",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksByWebhookIdDelete",
				"parameters": [{
						"name": "webhookId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/webhooks/%7B%7BwebhookId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a webhook",
					"x-testDescription": "Delete a webhook"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a webhook",
				"summary": "Update a webhook",
				"tags": [
					"Webhooks"
				],
				"operationId": "WebhooksByWebhookIdPatch",
				"parameters": [{
						"name": "webhookId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a webhookRequest",
							"example": {
								"url": "string",
								"auth_user": "string",
								"auth_password": "string",
								"events": [
									"string"
								]
							},
							"type": "object",
							"properties": {
								"url": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"auth_user": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"auth_password": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"events": {
									"description": "",
									"example": [
										"string"
									],
									"type": "array",
									"items": {
										"type": "string"
									}
								}
							}
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/webhooks/%7B%7BwebhookId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"url\":\"string\",\"auth_user\":\"string\",\"auth_password\":\"string\",\"events\":[\"string\"]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a webhook",
					"x-testDescription": "Update a webhook"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/tsp": {
			"get": {
				"description": "List TSP dial-in numbers under account",
				"summary": "List TSP dial-in numbers",
				"tags": [
					"TSP"
				],
				"operationId": "TspGet",
				"parameters": [{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/tsp",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List TSP dial-in numbers",
					"x-testDescription": "List TSP dial-in numbers under account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/tsp": {
			"get": {
				"description": "List user's TSP accounts",
				"summary": "List user's TSP accounts",
				"tags": [
					"TSP"
				],
				"operationId": "UsersTspByUserIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/tsp",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List user's TSP accounts",
					"x-testDescription": "List user's TSP accounts"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Add a user's TSP account",
				"summary": "Add a user's TSP account",
				"tags": [
					"TSP"
				],
				"operationId": "UsersTspByUserIdPost",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Add a user's TSP accountRequest",
							"example": {
								"conference_code": "string",
								"leader_pin": "string",
								"media_number": {
									"code": "string",
									"number": "string"
								},
								"dial_in_numbers": [{
									"code": "string",
									"number": "string"
								}]
							},
							"type": "object",
							"properties": {
								"conference_code": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"leader_pin": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"media_number": {
									"title": "MediaNumber",
									"example": {
										"code": "string",
										"number": "string"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "",
											"example": "string",
											"type": "string"
										},
										"number": {
											"description": "",
											"example": "string",
											"type": "string"
										}
									},
									"required": [
										"code",
										"number"
									]
								},
								"dial_in_numbers": {
									"description": "",
									"example": [{
										"code": "string",
										"number": "string"
									}],
									"type": "array",
									"items": {
										"title": "DialInNumber",
										"example": {
											"code": "string",
											"number": "string"
										},
										"type": "object",
										"properties": {
											"code": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"number": {
												"description": "",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"code",
											"number"
										]
									}
								}
							},
							"required": [
								"conference_code",
								"leader_pin",
								"media_number",
								"dial_in_numbers"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/users/%7B%7BuserId%7D%7D/tsp",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"conference_code\":\"string\",\"leader_pin\":\"string\",\"media_number\":{\"code\":\"string\",\"number\":\"string\"},\"dial_in_numbers\":[{\"code\":\"string\",\"number\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Add a user's TSP account",
					"x-testDescription": "Add a user's TSP account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/tsp/{tspId}": {
			"get": {
				"description": "Retrieve a user's TSP account",
				"summary": "Retrieve a user's TSP account",
				"tags": [
					"TSP"
				],
				"operationId": "UsersTspByUserIdAndTspIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "tspId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/tsp/%7B%7BtspId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Retrieve a user's TSP account",
					"x-testDescription": "Retrieve a user's TSP account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"delete": {
				"description": "Delete a user's TSP account",
				"summary": "Delete a user's TSP account",
				"tags": [
					"TSP"
				],
				"operationId": "UsersTspByUserIdAndTspIdDelete",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "tspId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/users/%7B%7BuserId%7D%7D/tsp/%7B%7BtspId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a user's TSP account",
					"x-testDescription": "Delete a user's TSP account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a user's TSP account",
				"summary": "Update a TSP account",
				"tags": [
					"TSP"
				],
				"operationId": "UsersTspByUserIdAndTspIdPatch",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "tspId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a TSP accountRequest",
							"example": {
								"conference_code": "string",
								"leader_pin": "string",
								"media_number": {
									"code": "string",
									"number": "string"
								},
								"dial_in_numbers": [{
									"code": "string",
									"number": "string"
								}]
							},
							"type": "object",
							"properties": {
								"conference_code": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"leader_pin": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"media_number": {
									"title": "MediaNumber",
									"example": {
										"code": "string",
										"number": "string"
									},
									"type": "object",
									"properties": {
										"code": {
											"description": "",
											"example": "string",
											"type": "string"
										},
										"number": {
											"description": "",
											"example": "string",
											"type": "string"
										}
									},
									"required": [
										"code",
										"number"
									]
								},
								"dial_in_numbers": {
									"description": "",
									"example": [{
										"code": "string",
										"number": "string"
									}],
									"type": "array",
									"items": {
										"title": "DialInNumber",
										"example": {
											"code": "string",
											"number": "string"
										},
										"type": "object",
										"properties": {
											"code": {
												"description": "",
												"example": "string",
												"type": "string"
											},
											"number": {
												"description": "",
												"example": "string",
												"type": "string"
											}
										},
										"required": [
											"code",
											"number"
										]
									}
								}
							},
							"required": [
								"conference_code",
								"leader_pin",
								"media_number",
								"dial_in_numbers"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/users/%7B%7BuserId%7D%7D/tsp/%7B%7BtspId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"conference_code\":\"string\",\"leader_pin\":\"string\",\"media_number\":{\"code\":\"string\",\"number\":\"string\"},\"dial_in_numbers\":[{\"code\":\"string\",\"number\":\"string\"}]}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a TSP account",
					"x-testDescription": "Update a user's TSP account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/users/{userId}/pac": {
			"get": {
				"description": "List user's PAC accounts",
				"summary": "List user's PAC accounts",
				"tags": [
					"PAC"
				],
				"operationId": "UsersPacByUserIdGet",
				"parameters": [{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": "Unique user ID."
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/users/%7B%7BuserId%7D%7D/pac",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List user's PAC accounts",
					"x-testDescription": "List user's PAC accounts"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/h323/devices": {
			"get": {
				"description": "List H.323/SIP Devices on your Zoom account.",
				"summary": "List H.323/SIP Devices.",
				"tags": [
					"Devices"
				],
				"operationId": "H323DevicesGet",
				"parameters": [{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "GET",
						"uri": "/h323/devices",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "List H.323/SIP Devices.",
					"x-testDescription": "List H.323/SIP Devices on your Zoom account."
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"post": {
				"description": "Create a H.323/SIP Device on your Zoom account",
				"summary": "Create a H.323/SIP Device",
				"tags": [
					"Devices"
				],
				"operationId": "H323DevicesPost",
				"parameters": [{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Create a H.323/SIP DeviceRequest",
							"example": {
								"name": "string",
								"protocol": "string",
								"ip": "string",
								"encryption": "string"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"protocol": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"ip": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"encryption": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"name",
								"protocol",
								"ip",
								"encryption"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "POST",
						"uri": "/h323/devices",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\",\"protocol\":\"string\",\"ip\":\"string\",\"encryption\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Create a H.323/SIP Device",
					"x-testDescription": "Create a H.323/SIP Device on your Zoom account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		},
		"/h323/devices/{deviceId}": {
			"delete": {
				"description": "Delete a H.323/SIP Device on your Zoom account",
				"summary": "Delete a H.323/SIP Device",
				"tags": [
					"Devices"
				],
				"operationId": "H323DevicesByDeviceIdDelete",
				"parameters": [{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "DELETE",
						"uri": "/h323/devices/%7B%7BdeviceId%7D%7D",
						"headers": {
							"Accept": "application/json",
							"Content-Type": "application/json"
						}
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Delete a H.323/SIP Device",
					"x-testDescription": "Delete a H.323/SIP Device on your Zoom account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			},
			"patch": {
				"description": "Update a H.323/SIP Device on your Zoom account",
				"summary": "Update a H.323/SIP Device",
				"tags": [
					"Devices"
				],
				"operationId": "H323DevicesByDeviceIdPatch",
				"parameters": [{
						"name": "deviceId",
						"in": "path",
						"required": true,
						"type": "string",
						"description": ""
					},
					{
						"name": "Body",
						"in": "body",
						"required": false,
						"description": "",
						"schema": {
							"title": "Update a H.323/SIP DeviceRequest",
							"example": {
								"name": "string",
								"protocol": "string",
								"ip": "string",
								"encryption": "string"
							},
							"type": "object",
							"properties": {
								"name": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"protocol": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"ip": {
									"description": "",
									"example": "string",
									"type": "string"
								},
								"encryption": {
									"description": "",
									"example": "string",
									"type": "string"
								}
							},
							"required": [
								"name",
								"protocol",
								"ip",
								"encryption"
							]
						}
					},
					{
						"name": "Accept",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Content-Type",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "application/json",
						"description": "Type is always 'application/json'."
					},
					{
						"name": "Authorization",
						"in": "header",
						"required": true,
						"type": "string",
						"default": "Bearer {{Your Token}}",
						"description": "Uses JWT generated using client ID and Secret."
					}
				],
				"responses": {
					"200": {
						"description": ""
					}
				},
				"security": [{
					"auth": []
				}],
				"x-unitTests": [{
					"request": {
						"method": "PATCH",
						"uri": "/h323/devices/%7B%7BdeviceId%7D%7D",
						"headers": {
							"Content-Type": "application/json",
							"Accept": "application/json"
						},
						"body": "{\"name\":\"string\",\"protocol\":\"string\",\"ip\":\"string\",\"encryption\":\"string\"}"
					},
					"expectedResponse": {
						"x-allowExtraHeaders": true,
						"x-bodyMatchMode": "NONE",
						"x-arrayOrderedMatching": false,
						"x-arrayCheckCount": false,
						"x-matchResponseSchema": true,
						"headers": {}
					},
					"x-testShouldPass": true,
					"x-testEnabled": true,
					"x-testName": "Update a H.323/SIP Device",
					"x-testDescription": "Update a H.323/SIP Device on your Zoom account"
				}],
				"x-operation-settings": {
					"CollectParameters": false,
					"AllowDynamicQueryParameters": false,
					"AllowDynamicFormParameters": false,
					"IsMultiContentStreaming": false
				}
			}
		}
	},
	"definitions": {
		"CreateASubAccountrequest": {
			"title": "Create a sub accountRequest",
			"example": {
				"first_name": "string",
				"last_name": "string",
				"email": "string",
				"password": "string",
				"options": {
					"share_rc": "boolean",
					"room_connectors": "string",
					"share_mc": "boolean",
					"meeting_connectors": "string",
					"pay_mode": "string"
				}
			},
			"type": "object",
			"properties": {
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				},
				"options": {
					"title": "Options",
					"example": {
						"share_rc": "boolean",
						"room_connectors": "string",
						"share_mc": "boolean",
						"meeting_connectors": "string",
						"pay_mode": "string"
					},
					"type": "object",
					"properties": {
						"share_rc": {
							"description": "Enable Share Virtual Room Connector",
							"example": "boolean",
							"type": "string"
						},
						"room_connectors": {
							"description": "Virtual Room Connector, multiple value separated by comma",
							"example": "string",
							"type": "string"
						},
						"share_mc": {
							"description": "Enable Share Meeting Connector",
							"example": "boolean",
							"type": "string"
						},
						"meeting_connectors": {
							"description": "Meeting Connector, multiple values separated by comma",
							"example": "string",
							"type": "string"
						},
						"pay_mode": {
							"description": "Payee",
							"example": "string",
							"type": "string"
						}
					}
				}
			},
			"required": [
				"first_name",
				"last_name",
				"email",
				"password"
			]
		},
		"Options": {
			"title": "Options",
			"example": {
				"share_rc": "boolean",
				"room_connectors": "string",
				"share_mc": "boolean",
				"meeting_connectors": "string",
				"pay_mode": "string"
			},
			"type": "object",
			"properties": {
				"share_rc": {
					"description": "Enable Share Virtual Room Connector",
					"example": "boolean",
					"type": "string"
				},
				"room_connectors": {
					"description": "Virtual Room Connector, multiple value separated by comma",
					"example": "string",
					"type": "string"
				},
				"share_mc": {
					"description": "Enable Share Meeting Connector",
					"example": "boolean",
					"type": "string"
				},
				"meeting_connectors": {
					"description": "Meeting Connector, multiple values separated by comma",
					"example": "string",
					"type": "string"
				},
				"pay_mode": {
					"description": "Payee",
					"example": "string",
					"type": "string"
				}
			}
		},
		"UpdateASubAccount'sOptionsrequest": {
			"title": "Update a sub account's optionsRequest",
			"example": {
				"share_rc": "boolean",
				"room_connectors": "string",
				"share_mc": "boolean",
				"meeting_connectors": "string",
				"pay_mode": "string"
			},
			"type": "object",
			"properties": {
				"share_rc": {
					"description": "Enable Share Virtual Room Connector",
					"example": "boolean",
					"type": "string"
				},
				"room_connectors": {
					"description": "Virtual Room Connector, multiple value separated by comma",
					"example": "string",
					"type": "string"
				},
				"share_mc": {
					"description": "Enable Share Meeting Connector",
					"example": "boolean",
					"type": "string"
				},
				"meeting_connectors": {
					"description": "Meeting Connector, multiple values separated by comma",
					"example": "string",
					"type": "string"
				},
				"pay_mode": {
					"description": "Payee",
					"example": "string",
					"type": "string"
				}
			}
		},
		"UpdateASubAccount'sSettingsrequest": {
			"title": "Update a sub account's settingsRequest",
			"example": {
				"schedule_meting": {
					"host_video": "boolean",
					"participant_video": "boolean",
					"audio_type": "string",
					"join_before_host": "boolean",
					"enforce_login": "boolean",
					"enforce_login_with_domains": "boolean",
					"enforce_login_domains": "string",
					"not_store_meeting_topic": "boolean",
					"force_pmi_jbh_password": "boolean"
				},
				"in_meeting": {
					"e2e_encryption": "boolean",
					"chat": "boolean",
					"private_chat": "boolean",
					"auto_saving_chat": "boolean",
					"file_transfer": "boolean",
					"feedback": "boolean",
					"post_meeting_feedback": "boolean",
					"co_host": "boolean",
					"polling": "boolean",
					"attendee_on_hold": "boolean",
					"show_meeting_control_toolbar": "boolean",
					"allow_show_zoom_windows": "boolean",
					"annotation": "boolean",
					"whiteboard": "boolean",
					"webinar_question_answer": "boolean",
					"anonymous_question_answer": "boolean",
					"breakout_room": "boolean",
					"closed_caption": "boolean",
					"far_end_camera_control": "boolean",
					"group_hd": "boolean",
					"virtual_background": "boolean",
					"watermark": "boolean",
					"alert_guest_join": "boolean",
					"auto_answer": "boolean",
					"p2p_connetion": "boolean",
					"p2p_ports": "boolean",
					"ports_range": "string",
					"sending_default_email_invites": "boolean",
					"use_html_format_email": "boolean",
					"dscp_marking": "boolean",
					"dscp_audio": "integer",
					"dscp_video": "integer",
					"stereo_audio": "boolean",
					"original_audio": "boolean",
					"screen_sharing": "boolean",
					"remote_control": "boolean",
					"attention_tracking": "boolean"
				},
				"email_notification": {
					"cloud_recording_avaliable_reminder": "boolean",
					"jbh_reminder": "boolean",
					"cancel_meeting_reminder": "boolean",
					"low_host_count_reminder": "boolean",
					"alternative_host_reminder": "boolean"
				},
				"zoom_rooms": {
					"upcoming_meeting_alert": "boolean",
					"start_airplay_manually": "boolean",
					"weekly_system_restart": "boolean",
					"list_meetings_with_calendar": "boolean",
					"zr_post_meeting_feedback": "boolean",
					"ultrasonic": "boolean",
					"force_private_meeting": "boolean",
					"hide_host_information": "boolean",
					"cmr_for_instant_meeting": "boolean",
					"auto_start_stop_scheduled_meetings": "boolean"
				},
				"security": {
					"admin_change_name_pic": "boolean",
					"import_photos_from_devices": "boolean",
					"hide_billing_info": "boolean"
				},
				"recording": {
					"local_recording": "boolean",
					"cloud_recording": "boolean",
					"record_speaker_view": "boolean",
					"record_gallery_view": "boolean",
					"record_audio_file": "boolean",
					"save_chat_text": "boolean",
					"show_timestamp": "boolean",
					"recording_audio_transcript": "boolean",
					"auto_recording": "string",
					"cloud_recording_download": "boolean",
					"cloud_recording_download_host": "boolean",
					"account_user_access_recording": "boolean",
					"auto_delete_cmr": "boolean",
					"auto_delete_cmr_days": "integer"
				},
				"telephony": {
					"third_party_audio": "boolean",
					"audio_conference_info": "string"
				},
				"integration": {
					"google_calendar": "boolean",
					"google_drive": "boolean",
					"dropbox": "boolean",
					"box": "boolean",
					"microsoft_one_drive": "boolean",
					"kubi": "boolean"
				},
				"feature": {
					"meeting_capacity": "integer"
				}
			},
			"type": "object",
			"properties": {
				"schedule_meting": {
					"title": "ScheduleMeting",
					"example": {
						"host_video": "boolean",
						"participant_video": "boolean",
						"audio_type": "string",
						"join_before_host": "boolean",
						"enforce_login": "boolean",
						"enforce_login_with_domains": "boolean",
						"enforce_login_domains": "string",
						"not_store_meeting_topic": "boolean",
						"force_pmi_jbh_password": "boolean"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"participant_video": {
							"description": "Start meetings with participant video on. Participants can change this during the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"audio_type": {
							"description": "Determine how participants can join the audio portion of the meeting.",
							"example": "string",
							"type": "string"
						},
						"join_before_host": {
							"description": "Allow participants to join the meeting before the host arrives.",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login": {
							"description": "Only signed-in (Zoom users) users can join meetings",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_with_domains": {
							"description": "Only signed-in users with a specific domain can join meetings.",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_domains": {
							"description": "Only signed-in users with a specified domains.",
							"example": "string",
							"type": "string"
						},
						"not_store_meeting_topic": {
							"description": "Always display “Zoom Meeting” as the meeting topic.",
							"example": "boolean",
							"type": "string"
						},
						"force_pmi_jbh_password": {
							"description": "Require a password for Personal Meetings if attendees can join before host.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"in_meeting": {
					"title": "InMeeting",
					"example": {
						"e2e_encryption": "boolean",
						"chat": "boolean",
						"private_chat": "boolean",
						"auto_saving_chat": "boolean",
						"file_transfer": "boolean",
						"feedback": "boolean",
						"post_meeting_feedback": "boolean",
						"co_host": "boolean",
						"polling": "boolean",
						"attendee_on_hold": "boolean",
						"show_meeting_control_toolbar": "boolean",
						"allow_show_zoom_windows": "boolean",
						"annotation": "boolean",
						"whiteboard": "boolean",
						"webinar_question_answer": "boolean",
						"anonymous_question_answer": "boolean",
						"breakout_room": "boolean",
						"closed_caption": "boolean",
						"far_end_camera_control": "boolean",
						"group_hd": "boolean",
						"virtual_background": "boolean",
						"watermark": "boolean",
						"alert_guest_join": "boolean",
						"auto_answer": "boolean",
						"p2p_connetion": "boolean",
						"p2p_ports": "boolean",
						"ports_range": "string",
						"sending_default_email_invites": "boolean",
						"use_html_format_email": "boolean",
						"dscp_marking": "boolean",
						"dscp_audio": "integer",
						"dscp_video": "integer",
						"stereo_audio": "boolean",
						"original_audio": "boolean",
						"screen_sharing": "boolean",
						"remote_control": "boolean",
						"attention_tracking": "boolean"
					},
					"type": "object",
					"properties": {
						"e2e_encryption": {
							"description": "Require that all meetings are encrypted using AES.",
							"example": "boolean",
							"type": "string"
						},
						"chat": {
							"description": "Allow meeting participants to send a message visible to all participants.",
							"example": "boolean",
							"type": "string"
						},
						"private_chat": {
							"description": "Allow meeting participants to send a private 1:1 message to another participants.",
							"example": "boolean",
							"type": "string"
						},
						"auto_saving_chat": {
							"description": "Allow meeting participants to send a private 1:1 message to another participants.",
							"example": "boolean",
							"type": "string"
						},
						"file_transfer": {
							"description": "Hosts and participants can send files through the in-meeting chat.",
							"example": "boolean",
							"type": "string"
						},
						"feedback": {
							"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"post_meeting_feedback": {
							"description": "Display a thumbs up/down survey at the end of each meeting.",
							"example": "boolean",
							"type": "string"
						},
						"co_host": {
							"description": "Allow the host to add co-hosts.",
							"example": "boolean",
							"type": "string"
						},
						"polling": {
							"description": "Add ‘Polls’ to the meeting controls.",
							"example": "boolean",
							"type": "string"
						},
						"attendee_on_hold": {
							"description": "Allow hosts to temporarily remove an attendee from the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"show_meeting_control_toolbar": {
							"description": "Always show meeting control toolbar.",
							"example": "boolean",
							"type": "string"
						},
						"allow_show_zoom_windows": {
							"description": "Show Zoom Desktop application when sharing screen.",
							"example": "boolean",
							"type": "string"
						},
						"annotation": {
							"description": "Allow participants to use annotation tools to add information to shared screens.",
							"example": "boolean",
							"type": "string"
						},
						"whiteboard": {
							"description": "Allow participants to share a whiteboard that includes annotation tools.",
							"example": "boolean",
							"type": "string"
						},
						"webinar_question_answer": {
							"description": "Q&A in webinar.",
							"example": "boolean",
							"type": "string"
						},
						"anonymous_question_answer": {
							"description": "Allow Anonymous Q&A in Webinar.",
							"example": "boolean",
							"type": "string"
						},
						"breakout_room": {
							"description": "Allow host to split meeting participants into separate, smaller rooms.",
							"example": "boolean",
							"type": "string"
						},
						"closed_caption": {
							"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
							"example": "boolean",
							"type": "string"
						},
						"far_end_camera_control": {
							"description": "Allow another user to take control of your camera during a meeting.",
							"example": "boolean",
							"type": "string"
						},
						"group_hd": {
							"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
							"example": "boolean",
							"type": "string"
						},
						"virtual_background": {
							"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
							"example": "boolean",
							"type": "string"
						},
						"watermark": {
							"description": "Add watermark when viewing shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"alert_guest_join": {
							"description": "Identify guest participants in the meeting/webinar.",
							"example": "boolean",
							"type": "string"
						},
						"auto_answer": {
							"description": "Enable users to see and add contacts to ‘auto-answer group’ in the contact list on chat. Any call from members of this group will be automatically answered.",
							"example": "boolean",
							"type": "string"
						},
						"p2p_connetion": {
							"description": "Peer to Peer connection while only 2 people are in a meeting.",
							"example": "boolean",
							"type": "string"
						},
						"p2p_ports": {
							"description": "P2P listening ports range.",
							"example": "boolean",
							"type": "string"
						},
						"ports_range": {
							"description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
							"example": "string",
							"type": "string"
						},
						"sending_default_email_invites": {
							"description": "Only show default email when sending email invites.",
							"example": "boolean",
							"type": "string"
						},
						"use_html_format_email": {
							"description": "Use HTML format email for Outlook plugin.",
							"example": "boolean",
							"type": "string"
						},
						"dscp_marking": {
							"description": "DSCP marking",
							"example": "boolean",
							"type": "string"
						},
						"dscp_audio": {
							"description": "DSCP audio",
							"example": "integer",
							"type": "string"
						},
						"dscp_video": {
							"description": "DSCP video",
							"example": "integer",
							"type": "string"
						},
						"stereo_audio": {
							"description": "Allow users to select stereo audio in their client settings.",
							"example": "boolean",
							"type": "string"
						},
						"original_audio": {
							"description": "Allow users to select original sound in their client settings.",
							"example": "boolean",
							"type": "string"
						},
						"screen_sharing": {
							"description": "Allow screen sharing.",
							"example": "boolean",
							"type": "string"
						},
						"remote_control": {
							"description": "Allow users to request remote control.",
							"example": "boolean",
							"type": "string"
						},
						"attention_tracking": {
							"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"email_notification": {
					"title": "EmailNotification",
					"example": {
						"cloud_recording_avaliable_reminder": "boolean",
						"jbh_reminder": "boolean",
						"cancel_meeting_reminder": "boolean",
						"low_host_count_reminder": "boolean",
						"alternative_host_reminder": "boolean"
					},
					"type": "object",
					"properties": {
						"cloud_recording_avaliable_reminder": {
							"description": "Notify host when cloud recording is available.",
							"example": "boolean",
							"type": "string"
						},
						"jbh_reminder": {
							"description": "Notify host when participants join the meeting before them.",
							"example": "boolean",
							"type": "string"
						},
						"cancel_meeting_reminder": {
							"description": "Notify host and participants when the meeting is cancelled.",
							"example": "boolean",
							"type": "string"
						},
						"low_host_count_reminder": {
							"description": "Notify when host licenses are running low.",
							"example": "boolean",
							"type": "string"
						},
						"alternative_host_reminder": {
							"description": "Notify when an alternative host is set or removed from a meeting.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"zoom_rooms": {
					"title": "ZoomRooms",
					"example": {
						"upcoming_meeting_alert": "boolean",
						"start_airplay_manually": "boolean",
						"weekly_system_restart": "boolean",
						"list_meetings_with_calendar": "boolean",
						"zr_post_meeting_feedback": "boolean",
						"ultrasonic": "boolean",
						"force_private_meeting": "boolean",
						"hide_host_information": "boolean",
						"cmr_for_instant_meeting": "boolean",
						"auto_start_stop_scheduled_meetings": "boolean"
					},
					"type": "object",
					"properties": {
						"upcoming_meeting_alert": {
							"description": "Upcoming meeting alert.",
							"example": "boolean",
							"type": "string"
						},
						"start_airplay_manually": {
							"description": "Start AirPlay service manually.",
							"example": "boolean",
							"type": "string"
						},
						"weekly_system_restart": {
							"description": "Weekly system restart.",
							"example": "boolean",
							"type": "string"
						},
						"list_meetings_with_calendar": {
							"description": "Display meeting list with calendar integration.",
							"example": "boolean",
							"type": "string"
						},
						"zr_post_meeting_feedback": {
							"description": "Zoom Room post meeting feedback.",
							"example": "boolean",
							"type": "string"
						},
						"ultrasonic": {
							"description": "Automatic direct sharing using ultrasonic proximity signal.",
							"example": "boolean",
							"type": "string"
						},
						"force_private_meeting": {
							"description": "Transform all meetings to private.",
							"example": "boolean",
							"type": "string"
						},
						"hide_host_information": {
							"description": "Hide host and meeting ID from private meetings.",
							"example": "boolean",
							"type": "string"
						},
						"cmr_for_instant_meeting": {
							"description": "Cloud recording for instant meetings.",
							"example": "boolean",
							"type": "string"
						},
						"auto_start_stop_scheduled_meetings": {
							"description": "Automatic start/stop for scheduled meetings.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"security": {
					"title": "Security",
					"example": {
						"admin_change_name_pic": "boolean",
						"import_photos_from_devices": "boolean",
						"hide_billing_info": "boolean"
					},
					"type": "object",
					"properties": {
						"admin_change_name_pic": {
							"description": "Only account administrators can change user’s username and picture.",
							"example": "boolean",
							"type": "string"
						},
						"import_photos_from_devices": {
							"description": "Allow importing of photos from photo library on the user’s device.",
							"example": "boolean",
							"type": "string"
						},
						"hide_billing_info": {
							"description": "Hide billing information.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"recording": {
					"title": "Recording",
					"example": {
						"local_recording": "boolean",
						"cloud_recording": "boolean",
						"record_speaker_view": "boolean",
						"record_gallery_view": "boolean",
						"record_audio_file": "boolean",
						"save_chat_text": "boolean",
						"show_timestamp": "boolean",
						"recording_audio_transcript": "boolean",
						"auto_recording": "string",
						"cloud_recording_download": "boolean",
						"cloud_recording_download_host": "boolean",
						"account_user_access_recording": "boolean",
						"auto_delete_cmr": "boolean",
						"auto_delete_cmr_days": "integer"
					},
					"type": "object",
					"properties": {
						"local_recording": {
							"description": "Allow hosts and participants to record the meeting to a local file.",
							"example": "boolean",
							"type": "string"
						},
						"cloud_recording": {
							"description": "Allow hosts to record and save the meeting in the cloud.",
							"example": "boolean",
							"type": "string"
						},
						"record_speaker_view": {
							"description": "Record active speaker with shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"record_gallery_view": {
							"description": "Record gallery view with shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"record_audio_file": {
							"description": "Record an audio only file.",
							"example": "boolean",
							"type": "string"
						},
						"save_chat_text": {
							"description": "Save chat text from the meeting",
							"example": "boolean",
							"type": "string"
						},
						"show_timestamp": {
							"description": "Add a timestamp to the recording.",
							"example": "boolean",
							"type": "string"
						},
						"recording_audio_transcript": {
							"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
							"example": "boolean",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"cloud_recording_download": {
							"description": "Cloud Recording Downloads.",
							"example": "boolean",
							"type": "string"
						},
						"cloud_recording_download_host": {
							"description": "Only the host can download cloud recordings.",
							"example": "boolean",
							"type": "string"
						},
						"account_user_access_recording": {
							"description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
							"example": "boolean",
							"type": "string"
						},
						"auto_delete_cmr": {
							"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
							"example": "boolean",
							"type": "string"
						},
						"auto_delete_cmr_days": {
							"description": "This value will set the number of days before auto deletion of cloud recordings.",
							"example": "integer",
							"type": "string"
						}
					}
				},
				"telephony": {
					"title": "Telephony",
					"example": {
						"third_party_audio": "boolean",
						"audio_conference_info": "string"
					},
					"type": "object",
					"properties": {
						"third_party_audio": {
							"description": "Users can join the meeting using the existing 3rd party audio configuration.",
							"example": "boolean",
							"type": "string"
						},
						"audio_conference_info": {
							"description": "3rd party audio conference info.",
							"example": "string",
							"type": "string"
						}
					}
				},
				"integration": {
					"title": "Integration",
					"example": {
						"google_calendar": "boolean",
						"google_drive": "boolean",
						"dropbox": "boolean",
						"box": "boolean",
						"microsoft_one_drive": "boolean",
						"kubi": "boolean"
					},
					"type": "object",
					"properties": {
						"google_calendar": {
							"description": "Enables meetings to be scheduled using Google Calendars.",
							"example": "boolean",
							"type": "string"
						},
						"google_drive": {
							"description": "Enables users who join a meeting from their mobile device to share content from their Google Drive.",
							"example": "boolean",
							"type": "string"
						},
						"dropbox": {
							"description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account.",
							"example": "boolean",
							"type": "string"
						},
						"box": {
							"description": "Enables users who join a meeting from their mobile device to share content from their Box account.",
							"example": "boolean",
							"type": "string"
						},
						"microsoft_one_drive": {
							"description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.",
							"example": "boolean",
							"type": "string"
						},
						"kubi": {
							"description": "Enables users to control a connected Kubi device from within a Zoom meeting.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"feature": {
					"title": "Feature",
					"example": {
						"meeting_capacity": "integer"
					},
					"type": "object",
					"properties": {
						"meeting_capacity": {
							"description": "Set the maximum number of participants this user can have in a single meeting.",
							"example": "integer",
							"type": "string"
						}
					}
				}
			}
		},
		"ScheduleMeting": {
			"title": "ScheduleMeting",
			"example": {
				"host_video": "boolean",
				"participant_video": "boolean",
				"audio_type": "string",
				"join_before_host": "boolean",
				"enforce_login": "boolean",
				"enforce_login_with_domains": "boolean",
				"enforce_login_domains": "string",
				"not_store_meeting_topic": "boolean",
				"force_pmi_jbh_password": "boolean"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"participant_video": {
					"description": "Start meetings with participant video on. Participants can change this during the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"audio_type": {
					"description": "Determine how participants can join the audio portion of the meeting.",
					"example": "string",
					"type": "string"
				},
				"join_before_host": {
					"description": "Allow participants to join the meeting before the host arrives.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login": {
					"description": "Only signed-in (Zoom users) users can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_with_domains": {
					"description": "Only signed-in users with a specific domain can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_domains": {
					"description": "Only signed-in users with specified domains can join meetings.",
					"example": "string",
					"type": "string"
				},
				"not_store_meeting_topic": {
					"description": "Always display “Zoom Meeting” as the meeting topic.",
					"example": "boolean",
					"type": "string"
				},
				"force_pmi_jbh_password": {
					"description": "Require a password for Personal Meetings if attendees can join before host.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"InMeeting": {
			"title": "InMeeting",
			"example": {
				"e2e_encryption": "boolean",
				"chat": "boolean",
				"private_chat": "boolean",
				"auto_saving_chat": "boolean",
				"file_transfer": "boolean",
				"feedback": "boolean",
				"post_meeting_feedback": "boolean",
				"co_host": "boolean",
				"polling": "boolean",
				"attendee_on_hold": "boolean",
				"show_meeting_control_toolbar": "boolean",
				"allow_show_zoom_windows": "boolean",
				"annotation": "boolean",
				"whiteboard": "boolean",
				"webinar_question_answer": "boolean",
				"anonymous_question_answer": "boolean",
				"breakout_room": "boolean",
				"closed_caption": "boolean",
				"far_end_camera_control": "boolean",
				"group_hd": "boolean",
				"virtual_background": "boolean",
				"watermark": "boolean",
				"alert_guest_join": "boolean",
				"auto_answer": "boolean",
				"p2p_connetion": "boolean",
				"p2p_ports": "boolean",
				"ports_range": "string",
				"sending_default_email_invites": "boolean",
				"use_html_format_email": "boolean",
				"dscp_marking": "boolean",
				"dscp_audio": "integer",
				"dscp_video": "integer",
				"stereo_audio": "boolean",
				"original_audio": "boolean",
				"screen_sharing": "boolean",
				"remote_control": "boolean",
				"attention_tracking": "boolean"
			},
			"type": "object",
			"properties": {
				"e2e_encryption": {
					"description": "Require that all meetings are encrypted using AES.",
					"example": "boolean",
					"type": "string"
				},
				"chat": {
					"description": "Allow meeting participants to send a message visible to all participants.",
					"example": "boolean",
					"type": "string"
				},
				"private_chat": {
					"description": "Allow meeting participants to send a private 1:1 message to another participants.",
					"example": "boolean",
					"type": "string"
				},
				"auto_saving_chat": {
					"description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts.",
					"example": "boolean",
					"type": "string"
				},
				"file_transfer": {
					"description": "Hosts and participants can send files through the in-meeting chat.",
					"example": "boolean",
					"type": "string"
				},
				"feedback": {
					"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"post_meeting_feedback": {
					"description": "Display a thumbs up/down survey at the end of each meeting.",
					"example": "boolean",
					"type": "string"
				},
				"co_host": {
					"description": "Allow the host to add co-hosts.",
					"example": "boolean",
					"type": "string"
				},
				"polling": {
					"description": "Add ‘Polls’ to the meeting controls.",
					"example": "boolean",
					"type": "string"
				},
				"attendee_on_hold": {
					"description": "Allow hosts to temporarily remove an attendee from the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"show_meeting_control_toolbar": {
					"description": "Always show meeting control toolbar.",
					"example": "boolean",
					"type": "string"
				},
				"allow_show_zoom_windows": {
					"description": "Show Zoom Desktop application when sharing screen.",
					"example": "boolean",
					"type": "string"
				},
				"annotation": {
					"description": "Allow participants to use annotation tools to add information to shared screens.",
					"example": "boolean",
					"type": "string"
				},
				"whiteboard": {
					"description": "Allow participants to share a whiteboard that includes annotation tools.",
					"example": "boolean",
					"type": "string"
				},
				"webinar_question_answer": {
					"description": "Q&A in webinar.",
					"example": "boolean",
					"type": "string"
				},
				"anonymous_question_answer": {
					"description": "Allow Anonymous Q&A in Webinar.",
					"example": "boolean",
					"type": "string"
				},
				"breakout_room": {
					"description": "Allow host to split meeting participants into separate, smaller rooms.",
					"example": "boolean",
					"type": "string"
				},
				"closed_caption": {
					"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
					"example": "boolean",
					"type": "string"
				},
				"far_end_camera_control": {
					"description": "Allow another user to take control of your camera during a meeting.",
					"example": "boolean",
					"type": "string"
				},
				"group_hd": {
					"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
					"example": "boolean",
					"type": "string"
				},
				"virtual_background": {
					"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
					"example": "boolean",
					"type": "string"
				},
				"watermark": {
					"description": "Add watermark when viewing shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"alert_guest_join": {
					"description": "Identify guest participants in the meeting/webinar.",
					"example": "boolean",
					"type": "string"
				},
				"auto_answer": {
					"description": "Enable users to see and add contacts to ‘auto-answer group’ in the contact list on chat. Any call from members of this group will be automatically answered.",
					"example": "boolean",
					"type": "string"
				},
				"p2p_connetion": {
					"description": "Peer to Peer connection while only 2 people are in a meeting.",
					"example": "boolean",
					"type": "string"
				},
				"p2p_ports": {
					"description": "P2P listening ports range.",
					"example": "boolean",
					"type": "string"
				},
				"ports_range": {
					"description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
					"example": "string",
					"type": "string"
				},
				"sending_default_email_invites": {
					"description": "Only show default email when sending email invites.",
					"example": "boolean",
					"type": "string"
				},
				"use_html_format_email": {
					"description": "Use HTML format email for Outlook plugin.",
					"example": "boolean",
					"type": "string"
				},
				"dscp_marking": {
					"description": "DSCP Marking.",
					"example": "boolean",
					"type": "string"
				},
				"dscp_audio": {
					"description": "DSCP Audio",
					"example": "integer",
					"type": "string"
				},
				"dscp_video": {
					"description": "DSCP Video",
					"example": "integer",
					"type": "string"
				},
				"stereo_audio": {
					"description": "Allow users to select stereo audio in their client settings.",
					"example": "boolean",
					"type": "string"
				},
				"original_audio": {
					"description": "Allow users to select original sound in their client settings.",
					"example": "boolean",
					"type": "string"
				},
				"screen_sharing": {
					"description": "Allow screen sharing.",
					"example": "boolean",
					"type": "string"
				},
				"remote_control": {
					"description": "Allow users to request remote control.",
					"example": "boolean",
					"type": "string"
				},
				"attention_tracking": {
					"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"EmailNotification": {
			"title": "EmailNotification",
			"example": {
				"cloud_recording_avaliable_reminder": "boolean",
				"jbh_reminder": "boolean",
				"cancel_meeting_reminder": "boolean",
				"low_host_count_reminder": "boolean",
				"alternative_host_reminder": "boolean"
			},
			"type": "object",
			"properties": {
				"cloud_recording_avaliable_reminder": {
					"description": "Notify host when cloud recording is available.",
					"example": "boolean",
					"type": "string"
				},
				"jbh_reminder": {
					"description": "Notify host when participants join the meeting before them.",
					"example": "boolean",
					"type": "string"
				},
				"cancel_meeting_reminder": {
					"description": "Notify host and participants when the meeting is cancelled.",
					"example": "boolean",
					"type": "string"
				},
				"low_host_count_reminder": {
					"description": "Notify when host licenses are running low.",
					"example": "boolean",
					"type": "string"
				},
				"alternative_host_reminder": {
					"description": "Notify when an alternative host is set or removed from a meeting.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"ZoomRooms": {
			"title": "ZoomRooms",
			"example": {
				"upcoming_meeting_alert": "boolean",
				"start_airplay_manually": "boolean",
				"weekly_system_restart": "boolean",
				"list_meetings_with_calendar": "boolean",
				"zr_post_meeting_feedback": "boolean",
				"ultrasonic": "boolean",
				"force_private_meeting": "boolean",
				"hide_host_information": "boolean",
				"cmr_for_instant_meeting": "boolean",
				"auto_start_stop_scheduled_meetings": "boolean"
			},
			"type": "object",
			"properties": {
				"upcoming_meeting_alert": {
					"description": "Upcoming meeting alert.",
					"example": "boolean",
					"type": "string"
				},
				"start_airplay_manually": {
					"description": "Start AirPlay service manually.",
					"example": "boolean",
					"type": "string"
				},
				"weekly_system_restart": {
					"description": "Weekly system restart.",
					"example": "boolean",
					"type": "string"
				},
				"list_meetings_with_calendar": {
					"description": "Display meeting list with calendar integration.",
					"example": "boolean",
					"type": "string"
				},
				"zr_post_meeting_feedback": {
					"description": "Zoom Room post meeting feedback.",
					"example": "boolean",
					"type": "string"
				},
				"ultrasonic": {
					"description": "Automatic direct sharing using ultrasonic proximity signal.",
					"example": "boolean",
					"type": "string"
				},
				"force_private_meeting": {
					"description": "Transform all meetings to private.",
					"example": "boolean",
					"type": "string"
				},
				"hide_host_information": {
					"description": "Hide host and meeting ID from private meetings.",
					"example": "boolean",
					"type": "string"
				},
				"cmr_for_instant_meeting": {
					"description": "Cloud recording for instant meetings.",
					"example": "boolean",
					"type": "string"
				},
				"auto_start_stop_scheduled_meetings": {
					"description": "Automatic start/stop for scheduled meetings.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"Security": {
			"title": "Security",
			"example": {
				"admin_change_name_pic": "boolean",
				"import_photos_from_devices": "boolean",
				"hide_billing_info": "boolean"
			},
			"type": "object",
			"properties": {
				"admin_change_name_pic": {
					"description": "Only account administrators can change user’s username and picture.",
					"example": "boolean",
					"type": "string"
				},
				"import_photos_from_devices": {
					"description": "Allow importing of photos from photo library on the user’s device.",
					"example": "boolean",
					"type": "string"
				},
				"hide_billing_info": {
					"description": "Hide billing information.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"Recording": {
			"title": "Recording",
			"example": {
				"local_recording": "boolean",
				"cloud_recording": "boolean",
				"record_speaker_view": "boolean",
				"record_gallery_view": "boolean",
				"record_audio_file": "boolean",
				"save_chat_text": "boolean",
				"show_timestamp": "boolean",
				"recording_audio_transcript": "boolean",
				"auto_recording": "string",
				"cloud_recording_download": "boolean",
				"cloud_recording_download_host": "boolean",
				"account_user_access_recording": "boolean",
				"auto_delete_cmr": "boolean",
				"auto_delete_cmr_days": "integer"
			},
			"type": "object",
			"properties": {
				"local_recording": {
					"description": "Allow hosts and participants to record the meeting to a local file.",
					"example": "boolean",
					"type": "string"
				},
				"cloud_recording": {
					"description": "Allow hosts to record and save the meeting in the cloud.",
					"example": "boolean",
					"type": "string"
				},
				"record_speaker_view": {
					"description": "Record active speaker with shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"record_gallery_view": {
					"description": "Record gallery view with shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"record_audio_file": {
					"description": "Record an audio only file.",
					"example": "boolean",
					"type": "string"
				},
				"save_chat_text": {
					"description": "Save chat text from the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"show_timestamp": {
					"description": "Add a timestamp to the recording.",
					"example": "boolean",
					"type": "string"
				},
				"recording_audio_transcript": {
					"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
					"example": "boolean",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"cloud_recording_download": {
					"description": "Cloud Recording Downloads",
					"example": "boolean",
					"type": "string"
				},
				"cloud_recording_download_host": {
					"description": "Only the host can download cloud recordings.",
					"example": "boolean",
					"type": "string"
				},
				"account_user_access_recording": {
					"description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
					"example": "boolean",
					"type": "string"
				},
				"auto_delete_cmr": {
					"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
					"example": "boolean",
					"type": "string"
				},
				"auto_delete_cmr_days": {
					"description": "When `auto_delete_cmr is` ‘true’ this value will set the number of days before auto deletion of cloud recordings.",
					"example": "integer",
					"type": "string"
				}
			}
		},
		"Telephony": {
			"title": "Telephony",
			"example": {
				"third_party_audio": "boolean",
				"audio_conference_info": "string"
			},
			"type": "object",
			"properties": {
				"third_party_audio": {
					"description": "Users can join the meeting using the existing 3rd party audio configuration.",
					"example": "boolean",
					"type": "string"
				},
				"audio_conference_info": {
					"description": "3rd party audio conference info.",
					"example": "string",
					"type": "string"
				}
			}
		},
		"Integration": {
			"title": "Integration",
			"example": {
				"google_calendar": "boolean",
				"google_drive": "boolean",
				"dropbox": "boolean",
				"box": "boolean",
				"microsoft_one_drive": "boolean",
				"kubi": "boolean"
			},
			"type": "object",
			"properties": {
				"google_calendar": {
					"description": "Enables meetings to be scheduled using Google Calendars.",
					"example": "boolean",
					"type": "string"
				},
				"google_drive": {
					"description": "Enables users who join a meeting from their mobile device to share content from their Google Drive.",
					"example": "boolean",
					"type": "string"
				},
				"dropbox": {
					"description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account.",
					"example": "boolean",
					"type": "string"
				},
				"box": {
					"description": "",
					"example": "boolean",
					"type": "string"
				},
				"microsoft_one_drive": {
					"description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account.",
					"example": "boolean",
					"type": "string"
				},
				"kubi": {
					"description": "Enables users to control a connected Kubi device from within a Zoom meeting.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"Feature": {
			"title": "Feature",
			"example": {
				"meeting_capacity": "integer"
			},
			"type": "object",
			"properties": {
				"meeting_capacity": {
					"description": "Set the maximum number of participants this user can have in a single meeting.",
					"example": "integer",
					"type": "string"
				}
			}
		},
		"UpdateBillingInformationForASubAccountrequest": {
			"title": "Update billing information for a sub accountRequest",
			"example": {
				"first_name": "string",
				"last_name": "string",
				"email": "string",
				"phone_number": "string",
				"address": "string",
				"apt": "string",
				"city": "string",
				"state": "string",
				"zip": "string",
				"country": "string"
			},
			"type": "object",
			"properties": {
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				},
				"phone_number": {
					"description": "User's phone number. ",
					"example": "string",
					"type": "string"
				},
				"address": {
					"description": "User's address. ",
					"example": "string",
					"type": "string"
				},
				"apt": {
					"description": "User's apartment/suite. ",
					"example": "string",
					"type": "string"
				},
				"city": {
					"description": "User's city. ",
					"example": "string",
					"type": "string"
				},
				"state": {
					"description": "User's state. ",
					"example": "string",
					"type": "string"
				},
				"zip": {
					"description": "User's zip code. ",
					"example": "string",
					"type": "string"
				},
				"country": {
					"description": "User's country. ",
					"example": "string",
					"type": "string"
				}
			}
		},
		"UpdateABasePlanForASubAccountrequest": {
			"title": "Update a base plan for a sub accountRequest",
			"example": {
				"type": "string",
				"hosts": "integer"
			},
			"type": "object",
			"properties": {
				"type": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"hosts": {
					"description": "",
					"example": "integer",
					"type": "string"
				}
			},
			"required": [
				"type",
				"hosts"
			]
		},
		"AddAnAdditionalPlanForSubAccountrequest": {
			"title": "Add an additional plan for sub accountRequest",
			"example": {
				"type": "string",
				"hosts": "integer"
			},
			"type": "object",
			"properties": {
				"type": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"hosts": {
					"description": "",
					"example": "integer",
					"type": "string"
				}
			},
			"required": [
				"type",
				"hosts"
			]
		},
		"UpdateAnAdditionalPlanForSubAccountrequest": {
			"title": "Update an additional plan for sub accountRequest",
			"example": {
				"type": "string",
				"hosts": "integer"
			},
			"type": "object",
			"properties": {
				"type": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"hosts": {
					"description": "",
					"example": "integer",
					"type": "string"
				}
			},
			"required": [
				"type",
				"hosts"
			]
		},
		"CreateAUserrequest": {
			"title": "Create a userRequest",
			"example": {
				"action": "string",
				"user_info": {
					"email": "string",
					"type": "integer",
					"first_name": "string",
					"last_name": "string",
					"password": "string"
				}
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"user_info": {
					"title": "UserInfo",
					"example": {
						"email": "string",
						"type": "integer",
						"first_name": "string",
						"last_name": "string",
						"password": "string"
					},
					"type": "object",
					"properties": {
						"email": {
							"description": "User's email address.",
							"example": "string",
							"type": "string"
						},
						"type": {
							"description": "",
							"example": "integer",
							"type": "string"
						},
						"first_name": {
							"description": "User's first name.",
							"example": "string",
							"type": "string"
						},
						"last_name": {
							"description": "User's last name.",
							"example": "string",
							"type": "string"
						},
						"password": {
							"description": "Sets password.",
							"example": "string",
							"type": "string"
						}
					},
					"required": [
						"email",
						"type"
					]
				}
			},
			"required": [
				"action",
				"user_info"
			]
		},
		"UserInfo": {
			"title": "UserInfo",
			"example": {
				"email": "string",
				"type": "integer",
				"first_name": "string",
				"last_name": "string",
				"password": "string"
			},
			"type": "object",
			"properties": {
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"email",
				"type"
			]
		},
		"UpdateAUserrequest": {
			"title": "Update a userRequest",
			"example": {
				"first_name": "string",
				"last_name": "string",
				"type": "integer",
				"pmi": "string",
				"timezone": "string [date-time]",
				"dept": "string",
				"vanity_name": "string",
				"host_key": "string",
				"cms_user_id": "string"
			},
			"type": "object",
			"properties": {
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"pmi": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"timezone": {
					"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
					"example": "string [date-time]",
					"type": "string"
				},
				"dept": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"vanity_name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"host_key": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"cms_user_id": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			}
		},
		"AddAssistantsrequest": {
			"title": "Add assistantsRequest",
			"example": {
				"assistants": [{
					"id": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"assistants": {
					"description": "List of User’s assistants. ",
					"example": [{
						"id": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Assistant",
						"example": {
							"id": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"id": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"id",
							"email"
						]
					}
				}
			}
		},
		"Assistant": {
			"title": "Assistant",
			"example": {
				"id": "string",
				"email": "string"
			},
			"type": "object",
			"properties": {
				"id": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"id",
				"email"
			]
		},
		"UpdateAUser'sSettingsrequest": {
			"title": "Update a user's settingsRequest",
			"example": {
				"scheduled_meeting": {
					"host_video": "boolean",
					"participants_video": "boolean",
					"audio_type": "string",
					"join_before_host": "boolean",
					"force_pmi_jbh_password": "boolean",
					"pstn_password_protected": "boolean"
				},
				"in_meeting": {
					"e2e_encryption": "boolean",
					"chat": "boolean",
					"private_chat": "boolean",
					"auto_saving_chat": "boolean",
					"entry_exit_chime": "string",
					"record_play_voice": "boolean",
					"file_transfer": "boolean",
					"feedback": "boolean",
					"co_host": "boolean",
					"polling": "boolean",
					"attendee_on_hold": "boolean",
					"annotation": "boolean",
					"remote_control": "boolean",
					"non_verbal_feedback": "boolean",
					"breakout_room": "boolean",
					"remote_support": "boolean",
					"closed_caption": "boolean",
					"group_hd": "boolean",
					"virtual_background": "boolean",
					"far_end_camera_control": "boolean",
					"share_dual_camera": "boolean",
					"attention_tracking": "boolean",
					"waiting_room": "boolean"
				},
				"email_notification": {
					"jbh_reminder": "boolean",
					"cancel_meeting_reminder": "boolean",
					"alternative_host_reminder": "boolean"
				},
				"recording": {
					"local_recording": "boolean",
					"cloud_recording": "boolean",
					"record_speaker_view": "boolean",
					"record_gallery_view": "boolean",
					"record_audio_file": "boolean",
					"save_chat_text": "boolean",
					"show_timestamp": "boolean",
					"recording_audio_transcript": "boolean",
					"auto_recording": "string",
					"auto_delete_cmr": "boolean",
					"auto_delete_cmr_days": "integer"
				},
				"telephony": {
					"third_party_audio": "boolean",
					"audio_conference_info": "string",
					"show_international_numbers_link": "boolean"
				},
				"feature": {
					"meeting_capacity": "integer",
					"large_meeting": "boolean",
					"large_meeting_capacity": "integer",
					"webinar": "boolean",
					"webinar_capacity": "integer"
				}
			},
			"type": "object",
			"properties": {
				"scheduled_meeting": {
					"title": "ScheduledMeeting",
					"example": {
						"host_video": "boolean",
						"participants_video": "boolean",
						"audio_type": "string",
						"join_before_host": "boolean",
						"force_pmi_jbh_password": "boolean",
						"pstn_password_protected": "boolean"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"participants_video": {
							"description": "Participants video. ",
							"example": "boolean",
							"type": "string"
						},
						"audio_type": {
							"description": "Determine how participants can join the audio portion of the meeting.",
							"example": "string",
							"type": "string"
						},
						"join_before_host": {
							"description": "Allow participants to join the meeting before the host arrives.",
							"example": "boolean",
							"type": "string"
						},
						"force_pmi_jbh_password": {
							"description": "Require a password for Personal Meetings if attendees can join before host.",
							"example": "boolean",
							"type": "string"
						},
						"pstn_password_protected": {
							"description": "Generate and require password for participants joining by phone.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"in_meeting": {
					"title": "InMeeting24",
					"example": {
						"e2e_encryption": "boolean",
						"chat": "boolean",
						"private_chat": "boolean",
						"auto_saving_chat": "boolean",
						"entry_exit_chime": "string",
						"record_play_voice": "boolean",
						"file_transfer": "boolean",
						"feedback": "boolean",
						"co_host": "boolean",
						"polling": "boolean",
						"attendee_on_hold": "boolean",
						"annotation": "boolean",
						"remote_control": "boolean",
						"non_verbal_feedback": "boolean",
						"breakout_room": "boolean",
						"remote_support": "boolean",
						"closed_caption": "boolean",
						"group_hd": "boolean",
						"virtual_background": "boolean",
						"far_end_camera_control": "boolean",
						"share_dual_camera": "boolean",
						"attention_tracking": "boolean",
						"waiting_room": "boolean"
					},
					"type": "object",
					"properties": {
						"e2e_encryption": {
							"description": "Require that all meetings are encrypted using AES.",
							"example": "boolean",
							"type": "string"
						},
						"chat": {
							"description": "Allow meeting participants to send a message visible to all participants.",
							"example": "boolean",
							"type": "string"
						},
						"private_chat": {
							"description": "Allow meeting participants to send a private 1:1 message to another participants.",
							"example": "boolean",
							"type": "string"
						},
						"auto_saving_chat": {
							"description": "Allow meeting participants to send a private 1:1 message to another participants.",
							"example": "boolean",
							"type": "string"
						},
						"entry_exit_chime": {
							"description": "Play sound on join/leave 'host' when host joins/leaves 'all' when any participant joins/leaves 'none' no join/leave sound.",
							"example": "string",
							"type": "string"
						},
						"record_play_voice": {
							"description": "Record and play their own voice.",
							"example": "boolean",
							"type": "string"
						},
						"file_transfer": {
							"description": "Hosts and participants can send files through the in-meeting chat.",
							"example": "boolean",
							"type": "string"
						},
						"feedback": {
							"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"co_host": {
							"description": "Allow the host to add co-hosts.",
							"example": "boolean",
							"type": "string"
						},
						"polling": {
							"description": "Add ‘Polls’ to the meeting controls.",
							"example": "boolean",
							"type": "string"
						},
						"attendee_on_hold": {
							"description": "Allow hosts to temporarily remove an attendee from the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"annotation": {
							"description": "Allow participants to use annotation tools to add information to shared screens.",
							"example": "boolean",
							"type": "string"
						},
						"remote_control": {
							"description": "Allow users to request remote control.",
							"example": "boolean",
							"type": "string"
						},
						"non_verbal_feedback": {
							"description": "Non-verbal feedback.",
							"example": "boolean",
							"type": "string"
						},
						"breakout_room": {
							"description": "Allow host to split meeting participants into separate, smaller rooms.",
							"example": "boolean",
							"type": "string"
						},
						"remote_support": {
							"description": "Remote support.",
							"example": "boolean",
							"type": "string"
						},
						"closed_caption": {
							"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
							"example": "boolean",
							"type": "string"
						},
						"group_hd": {
							"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
							"example": "boolean",
							"type": "string"
						},
						"virtual_background": {
							"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
							"example": "boolean",
							"type": "string"
						},
						"far_end_camera_control": {
							"description": "Allow another user to take control of your camera during a meeting.",
							"example": "boolean",
							"type": "string"
						},
						"share_dual_camera": {
							"description": "Share dual camera. (Deprecated)",
							"example": "boolean",
							"type": "string"
						},
						"attention_tracking": {
							"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
							"example": "boolean",
							"type": "string"
						},
						"waiting_room": {
							"description": "Waiting room.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"email_notification": {
					"title": "EmailNotification25",
					"example": {
						"jbh_reminder": "boolean",
						"cancel_meeting_reminder": "boolean",
						"alternative_host_reminder": "boolean"
					},
					"type": "object",
					"properties": {
						"jbh_reminder": {
							"description": "Notify host when participants join the meeting before them.",
							"example": "boolean",
							"type": "string"
						},
						"cancel_meeting_reminder": {
							"description": "Notify host and participants when the meeting is cancelled.",
							"example": "boolean",
							"type": "string"
						},
						"alternative_host_reminder": {
							"description": "Notify when an alternative host is set or removed from a meeting.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"recording": {
					"title": "Recording26",
					"example": {
						"local_recording": "boolean",
						"cloud_recording": "boolean",
						"record_speaker_view": "boolean",
						"record_gallery_view": "boolean",
						"record_audio_file": "boolean",
						"save_chat_text": "boolean",
						"show_timestamp": "boolean",
						"recording_audio_transcript": "boolean",
						"auto_recording": "string",
						"auto_delete_cmr": "boolean",
						"auto_delete_cmr_days": "integer"
					},
					"type": "object",
					"properties": {
						"local_recording": {
							"description": "Allow hosts and participants to record the meeting to a local file.",
							"example": "boolean",
							"type": "string"
						},
						"cloud_recording": {
							"description": "Allow hosts to record and save the meeting in the cloud.",
							"example": "boolean",
							"type": "string"
						},
						"record_speaker_view": {
							"description": "Record active speaker with shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"record_gallery_view": {
							"description": "Record gallery view with shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"record_audio_file": {
							"description": "Record an audio only file.",
							"example": "boolean",
							"type": "string"
						},
						"save_chat_text": {
							"description": "Save chat text from the meeting",
							"example": "boolean",
							"type": "string"
						},
						"show_timestamp": {
							"description": "Add a timestamp to the recording.",
							"example": "boolean",
							"type": "string"
						},
						"recording_audio_transcript": {
							"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
							"example": "boolean",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"auto_delete_cmr": {
							"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
							"example": "boolean",
							"type": "string"
						},
						"auto_delete_cmr_days": {
							"description": "This value will set the number of days before auto deletion of cloud recordings.",
							"example": "integer",
							"type": "string"
						}
					}
				},
				"telephony": {
					"title": "Telephony27",
					"example": {
						"third_party_audio": "boolean",
						"audio_conference_info": "string",
						"show_international_numbers_link": "boolean"
					},
					"type": "object",
					"properties": {
						"third_party_audio": {
							"description": "Users can join the meeting using the existing 3rd party audio configuration.",
							"example": "boolean",
							"type": "string"
						},
						"audio_conference_info": {
							"description": "3rd party audio conference info.",
							"example": "string",
							"type": "string"
						},
						"show_international_numbers_link": {
							"description": "Show international numbers link on the invitation email.",
							"example": "boolean",
							"type": "string"
						}
					}
				},
				"feature": {
					"title": "Feature28",
					"example": {
						"meeting_capacity": "integer",
						"large_meeting": "boolean",
						"large_meeting_capacity": "integer",
						"webinar": "boolean",
						"webinar_capacity": "integer"
					},
					"type": "object",
					"properties": {
						"meeting_capacity": {
							"description": "Set the maximum number of participants this user can have in a single meeting.",
							"example": "integer",
							"type": "string"
						},
						"large_meeting": {
							"description": "Large meting feature.",
							"example": "boolean",
							"type": "string"
						},
						"large_meeting_capacity": {
							"description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not.",
							"example": "integer",
							"type": "string"
						},
						"webinar": {
							"description": "Webinar feature.",
							"example": "boolean",
							"type": "string"
						},
						"webinar_capacity": {
							"description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not.",
							"example": "integer",
							"type": "string"
						}
					}
				}
			}
		},
		"ScheduledMeeting": {
			"title": "ScheduledMeeting",
			"example": {
				"host_video": "boolean",
				"participants_video": "boolean",
				"audio_type": "string",
				"join_before_host": "boolean",
				"force_pmi_jbh_password": "boolean",
				"pstn_password_protected": "boolean"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"participants_video": {
					"description": "Participants video. ",
					"example": "boolean",
					"type": "string"
				},
				"audio_type": {
					"description": "Determine how participants can join the audio portion of the meeting.",
					"example": "string",
					"type": "string"
				},
				"join_before_host": {
					"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
					"example": "boolean",
					"type": "string"
				},
				"force_pmi_jbh_password": {
					"description": "Require a password for Personal Meetings if attendees can join before host.",
					"example": "boolean",
					"type": "string"
				},
				"pstn_password_protected": {
					"description": "Generate and require password for participants joining by phone.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"InMeeting24": {
			"title": "InMeeting24",
			"example": {
				"e2e_encryption": "boolean",
				"chat": "boolean",
				"private_chat": "boolean",
				"auto_saving_chat": "boolean",
				"entry_exit_chime": "string",
				"record_play_voice": "boolean",
				"file_transfer": "boolean",
				"feedback": "boolean",
				"co_host": "boolean",
				"polling": "boolean",
				"attendee_on_hold": "boolean",
				"annotation": "boolean",
				"remote_control": "boolean",
				"non_verbal_feedback": "boolean",
				"breakout_room": "boolean",
				"remote_support": "boolean",
				"closed_caption": "boolean",
				"group_hd": "boolean",
				"virtual_background": "boolean",
				"far_end_camera_control": "boolean",
				"share_dual_camera": "boolean",
				"attention_tracking": "boolean",
				"waiting_room": "boolean"
			},
			"type": "object",
			"properties": {
				"e2e_encryption": {
					"description": "Require that all meetings are encrypted using AES.",
					"example": "boolean",
					"type": "string"
				},
				"chat": {
					"description": "Allow meeting participants to send a message visible to all participants.",
					"example": "boolean",
					"type": "string"
				},
				"private_chat": {
					"description": "Allow meeting participants to send a private 1:1 message to another participants.",
					"example": "boolean",
					"type": "string"
				},
				"auto_saving_chat": {
					"description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts.",
					"example": "boolean",
					"type": "string"
				},
				"entry_exit_chime": {
					"description": "Play sound on join/leave 'host' when host joins/leaves 'all' when any participant joins/leaves 'none' no join/leave sound.",
					"example": "string",
					"type": "string"
				},
				"record_play_voice": {
					"description": "Record and play their own voice.",
					"example": "boolean",
					"type": "string"
				},
				"file_transfer": {
					"description": "Hosts and participants can send files through the in-meeting chat.",
					"example": "boolean",
					"type": "string"
				},
				"feedback": {
					"description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"co_host": {
					"description": "Allow the host to add co-hosts.",
					"example": "boolean",
					"type": "string"
				},
				"polling": {
					"description": "Add ‘Polls’ to the meeting controls.",
					"example": "boolean",
					"type": "string"
				},
				"attendee_on_hold": {
					"description": "Allow hosts to temporarily remove an attendee from the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"annotation": {
					"description": "Allow participants to use annotation tools to add information to shared screens.",
					"example": "boolean",
					"type": "string"
				},
				"remote_control": {
					"description": "Allow users to request remote control.",
					"example": "boolean",
					"type": "string"
				},
				"non_verbal_feedback": {
					"description": "Non-verbal feedback.",
					"example": "boolean",
					"type": "string"
				},
				"breakout_room": {
					"description": "Allow host to split meeting participants into separate, smaller rooms.",
					"example": "boolean",
					"type": "string"
				},
				"remote_support": {
					"description": "Remote support.",
					"example": "boolean",
					"type": "string"
				},
				"closed_caption": {
					"description": "Allow host to type closed captions or assign a participant/third party device to add closed captions.",
					"example": "boolean",
					"type": "string"
				},
				"group_hd": {
					"description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
					"example": "boolean",
					"type": "string"
				},
				"virtual_background": {
					"description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
					"example": "boolean",
					"type": "string"
				},
				"far_end_camera_control": {
					"description": "Allow another user to take control of your camera during a meeting.",
					"example": "boolean",
					"type": "string"
				},
				"share_dual_camera": {
					"description": "Share dual camera. (Deprecated)",
					"example": "boolean",
					"type": "string"
				},
				"attention_tracking": {
					"description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing.",
					"example": "boolean",
					"type": "string"
				},
				"waiting_room": {
					"description": "Waiting room.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"EmailNotification25": {
			"title": "EmailNotification25",
			"example": {
				"jbh_reminder": "boolean",
				"cancel_meeting_reminder": "boolean",
				"alternative_host_reminder": "boolean"
			},
			"type": "object",
			"properties": {
				"jbh_reminder": {
					"description": "Notify host when participants join the meeting before them.",
					"example": "boolean",
					"type": "string"
				},
				"cancel_meeting_reminder": {
					"description": "Notify host and participants when the meeting is cancelled.",
					"example": "boolean",
					"type": "string"
				},
				"alternative_host_reminder": {
					"description": "Notify when an alternative host is set or removed from a meeting.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"Recording26": {
			"title": "Recording26",
			"example": {
				"local_recording": "boolean",
				"cloud_recording": "boolean",
				"record_speaker_view": "boolean",
				"record_gallery_view": "boolean",
				"record_audio_file": "boolean",
				"save_chat_text": "boolean",
				"show_timestamp": "boolean",
				"recording_audio_transcript": "boolean",
				"auto_recording": "string",
				"auto_delete_cmr": "boolean",
				"auto_delete_cmr_days": "integer"
			},
			"type": "object",
			"properties": {
				"local_recording": {
					"description": "Allow hosts and participants to record the meeting to a local file.",
					"example": "boolean",
					"type": "string"
				},
				"cloud_recording": {
					"description": "Allow hosts to record and save the meeting in the cloud.",
					"example": "boolean",
					"type": "string"
				},
				"record_speaker_view": {
					"description": "Record active speaker with shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"record_gallery_view": {
					"description": "Record gallery view with shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"record_audio_file": {
					"description": "Record an audio only file.",
					"example": "boolean",
					"type": "string"
				},
				"save_chat_text": {
					"description": "Save chat text from the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"show_timestamp": {
					"description": "Add a timestamp to the recording.",
					"example": "boolean",
					"type": "string"
				},
				"recording_audio_transcript": {
					"description": "Automatically transcribe the audio of the meeting or webinar to the cloud.",
					"example": "boolean",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"auto_delete_cmr": {
					"description": "Allow Zoom to automatically delete recordings permanently after a specified number of days.",
					"example": "boolean",
					"type": "string"
				},
				"auto_delete_cmr_days": {
					"description": "When `auto_delete_cmr is` ‘true’ this value will set the number of days before auto deletion of cloud recordings.",
					"example": "integer",
					"type": "string"
				}
			}
		},
		"Telephony27": {
			"title": "Telephony27",
			"example": {
				"third_party_audio": "boolean",
				"audio_conference_info": "string",
				"show_international_numbers_link": "boolean"
			},
			"type": "object",
			"properties": {
				"third_party_audio": {
					"description": "Users can join the meeting using the existing 3rd party audio configuration.",
					"example": "boolean",
					"type": "string"
				},
				"audio_conference_info": {
					"description": "3rd party audio conference info.",
					"example": "string",
					"type": "string"
				},
				"show_international_numbers_link": {
					"description": "Show international numbers link on the invitation email.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"Feature28": {
			"title": "Feature28",
			"example": {
				"meeting_capacity": "integer",
				"large_meeting": "boolean",
				"large_meeting_capacity": "integer",
				"webinar": "boolean",
				"webinar_capacity": "integer"
			},
			"type": "object",
			"properties": {
				"meeting_capacity": {
					"description": "Set the maximum number of participants this user can have in a single meeting.",
					"example": "integer",
					"type": "string"
				},
				"large_meeting": {
					"description": "Large meting feature.",
					"example": "boolean",
					"type": "string"
				},
				"large_meeting_capacity": {
					"description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not.",
					"example": "integer",
					"type": "string"
				},
				"webinar": {
					"description": "Webinar feature.",
					"example": "boolean",
					"type": "string"
				},
				"webinar_capacity": {
					"description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not.",
					"example": "integer",
					"type": "string"
				}
			}
		},
		"UpdateAUser'sStatusrequest": {
			"title": "Update a user's statusRequest",
			"example": {
				"action": "string"
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"action"
			]
		},
		"UpdateAUser'sPasswordrequest": {
			"title": "Update a user's passwordRequest",
			"example": {
				"password": "string"
			},
			"type": "object",
			"properties": {
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"password"
			]
		},
		"CreateAMeetingrequest": {
			"title": "Create a meetingRequest",
			"example": {
				"topic": "string",
				"type": "integer",
				"start_time": "string [date-time]",
				"duration": "integer",
				"timezone": "string",
				"password": "string",
				"agenda": "string",
				"recurrence": {
					"type": "integer",
					"repeat_interval": "integer",
					"weekly_days": "integer",
					"monthly_day": "integer",
					"monthly_week": "integer",
					"monthly_week_day": "integer",
					"end_times": "integer",
					"end_date_time": "string [date-time]"
				},
				"settings": {
					"host_video": "boolean",
					"participant_video": "boolean",
					"cn_meeting": "boolean",
					"in_meeting": "boolean",
					"join_before_host": "boolean",
					"mute_upon_entry": "boolean",
					"watermark": "boolean",
					"use_pmi": "boolean",
					"approval_type": "integer",
					"registration_type": "integer",
					"audio": "string",
					"auto_recording": "string",
					"enforce_login": "boolean",
					"enforce_login_domains": "string",
					"alternative_hosts": "string"
				}
			},
			"type": "object",
			"properties": {
				"topic": {
					"description": "Topic",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"start_time": {
					"description": "Start time.",
					"example": "string [date-time]",
					"type": "string"
				},
				"duration": {
					"description": "Duration in minutes",
					"example": "integer",
					"type": "string"
				},
				"timezone": {
					"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				},
				"agenda": {
					"description": "Meeting description.",
					"example": "string",
					"type": "string"
				},
				"recurrence": {
					"title": "Recurrence",
					"example": {
						"type": "integer",
						"repeat_interval": "integer",
						"weekly_days": "integer",
						"monthly_day": "integer",
						"monthly_week": "integer",
						"monthly_week_day": "integer",
						"end_times": "integer",
						"end_date_time": "string [date-time]"
					},
					"type": "object",
					"properties": {
						"type": {
							"description": "",
							"example": "integer",
							"type": "string"
						},
						"repeat_interval": {
							"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
							"example": "integer",
							"type": "string"
						},
						"weekly_days": {
							"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
							"example": "integer",
							"type": "string"
						},
						"monthly_day": {
							"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week": {
							"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week_day": {
							"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
							"example": "integer",
							"type": "string"
						},
						"end_times": {
							"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
							"example": "integer",
							"type": "string"
						},
						"end_date_time": {
							"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
							"example": "string [date-time]",
							"type": "string"
						}
					}
				},
				"settings": {
					"title": "Settings",
					"example": {
						"host_video": "boolean",
						"participant_video": "boolean",
						"cn_meeting": "boolean",
						"in_meeting": "boolean",
						"join_before_host": "boolean",
						"mute_upon_entry": "boolean",
						"watermark": "boolean",
						"use_pmi": "boolean",
						"approval_type": "integer",
						"registration_type": "integer",
						"audio": "string",
						"auto_recording": "string",
						"enforce_login": "boolean",
						"enforce_login_domains": "string",
						"alternative_hosts": "string"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"participant_video": {
							"description": "Start meetings with participant video on. Participants can change this during the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"cn_meeting": {
							"description": "Host meeting in China.",
							"example": "boolean",
							"type": "string"
						},
						"in_meeting": {
							"description": "Host meeting in India.",
							"example": "boolean",
							"type": "string"
						},
						"join_before_host": {
							"description": "Allow participants to join the meeting before the host arrives.",
							"example": "boolean",
							"type": "string"
						},
						"mute_upon_entry": {
							"description": "Mute participants upon entry.",
							"example": "boolean",
							"type": "string"
						},
						"watermark": {
							"description": "Add watermark when viewing shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"use_pmi": {
							"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
							"example": "boolean",
							"type": "string"
						},
						"approval_type": {
							"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
							"example": "integer",
							"type": "string"
						},
						"registration_type": {
							"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
							"example": "integer",
							"type": "string"
						},
						"audio": {
							"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
							"example": "string",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"enforce_login": {
							"description": "Only signed-in (Zoom users) users can join meetings",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_domains": {
							"description": "Only signed-in users with a specified domains.",
							"example": "string",
							"type": "string"
						},
						"alternative_hosts": {
							"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
							"example": "string",
							"type": "string"
						}
					}
				}
			}
		},
		"Recurrence": {
			"title": "Recurrence",
			"example": {
				"type": "integer",
				"repeat_interval": "integer",
				"weekly_days": "integer",
				"monthly_day": "integer",
				"monthly_week": "integer",
				"monthly_week_day": "integer",
				"end_times": "integer",
				"end_date_time": "string [date-time]"
			},
			"type": "object",
			"properties": {
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"repeat_interval": {
					"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
					"example": "integer",
					"type": "string"
				},
				"weekly_days": {
					"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
					"example": "integer",
					"type": "string"
				},
				"monthly_day": {
					"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
					"example": "integer",
					"type": "string"
				},
				"monthly_week": {
					"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
					"example": "integer",
					"type": "string"
				},
				"monthly_week_day": {
					"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
					"example": "integer",
					"type": "string"
				},
				"end_times": {
					"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
					"example": "integer",
					"type": "string"
				},
				"end_date_time": {
					"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
					"example": "string [date-time]",
					"type": "string"
				}
			}
		},
		"Settings": {
			"title": "Settings",
			"example": {
				"host_video": "boolean",
				"participant_video": "boolean",
				"cn_meeting": "boolean",
				"in_meeting": "boolean",
				"join_before_host": "boolean",
				"mute_upon_entry": "boolean",
				"watermark": "boolean",
				"use_pmi": "boolean",
				"approval_type": "integer",
				"registration_type": "integer",
				"audio": "string",
				"auto_recording": "string",
				"enforce_login": "boolean",
				"enforce_login_domains": "string",
				"alternative_hosts": "string"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"participant_video": {
					"description": "Start meetings with participant video on. Participants can change this during the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"cn_meeting": {
					"description": "Host meeting in China.",
					"example": "boolean",
					"type": "string"
				},
				"in_meeting": {
					"description": "Host meeting in India.",
					"example": "boolean",
					"type": "string"
				},
				"join_before_host": {
					"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
					"example": "boolean",
					"type": "string"
				},
				"mute_upon_entry": {
					"description": "Mute participants upon entry.",
					"example": "boolean",
					"type": "string"
				},
				"watermark": {
					"description": "Add watermark when viewing shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"use_pmi": {
					"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
					"example": "boolean",
					"type": "string"
				},
				"approval_type": {
					"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
					"example": "integer",
					"type": "string"
				},
				"registration_type": {
					"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
					"example": "integer",
					"type": "string"
				},
				"audio": {
					"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
					"example": "string",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"enforce_login": {
					"description": "Only signed-in (Zoom users) users can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_domains": {
					"description": "Only signed-in users with specified domains can join meetings.",
					"example": "string",
					"type": "string"
				},
				"alternative_hosts": {
					"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
					"example": "string",
					"type": "string"
				}
			}
		},
		"UpdateAMeetingrequest": {
			"title": "Update a meetingRequest",
			"example": {
				"topic": "string",
				"type": "integer",
				"start_time": "string [date-time]",
				"duration": "integer",
				"timezone": "string",
				"password": "string",
				"agenda": "string",
				"recurrence": {
					"type": "integer",
					"repeat_interval": "integer",
					"weekly_days": "integer",
					"monthly_day": "integer",
					"monthly_week": "integer",
					"monthly_week_day": "integer",
					"end_times": "integer",
					"end_date_time": "string [date-time]"
				},
				"settings": {
					"host_video": "boolean",
					"participant_video": "boolean",
					"cn_meeting": "boolean",
					"in_meeting": "boolean",
					"join_before_host": "boolean",
					"mute_upon_entry": "boolean",
					"watermark": "boolean",
					"use_pmi": "boolean",
					"approval_type": "integer",
					"registration_type": "integer",
					"audio": "string",
					"auto_recording": "string",
					"enforce_login": "boolean",
					"enforce_login_domains": "string",
					"alternative_hosts": "string",
					"registrants_confirmation_email": "boolean"
				}
			},
			"type": "object",
			"properties": {
				"topic": {
					"description": "Topic",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"start_time": {
					"description": "Start time.",
					"example": "string [date-time]",
					"type": "string"
				},
				"duration": {
					"description": "Duration in minutes",
					"example": "integer",
					"type": "string"
				},
				"timezone": {
					"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				},
				"agenda": {
					"description": "Meeting description.",
					"example": "string",
					"type": "string"
				},
				"recurrence": {
					"title": "Recurrence",
					"example": {
						"type": "integer",
						"repeat_interval": "integer",
						"weekly_days": "integer",
						"monthly_day": "integer",
						"monthly_week": "integer",
						"monthly_week_day": "integer",
						"end_times": "integer",
						"end_date_time": "string [date-time]"
					},
					"type": "object",
					"properties": {
						"type": {
							"description": "",
							"example": "integer",
							"type": "string"
						},
						"repeat_interval": {
							"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
							"example": "integer",
							"type": "string"
						},
						"weekly_days": {
							"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
							"example": "integer",
							"type": "string"
						},
						"monthly_day": {
							"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week": {
							"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week_day": {
							"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
							"example": "integer",
							"type": "string"
						},
						"end_times": {
							"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
							"example": "integer",
							"type": "string"
						},
						"end_date_time": {
							"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
							"example": "string [date-time]",
							"type": "string"
						}
					}
				},
				"settings": {
					"title": "Settings36",
					"example": {
						"host_video": "boolean",
						"participant_video": "boolean",
						"cn_meeting": "boolean",
						"in_meeting": "boolean",
						"join_before_host": "boolean",
						"mute_upon_entry": "boolean",
						"watermark": "boolean",
						"use_pmi": "boolean",
						"approval_type": "integer",
						"registration_type": "integer",
						"audio": "string",
						"auto_recording": "string",
						"enforce_login": "boolean",
						"enforce_login_domains": "string",
						"alternative_hosts": "string",
						"registrants_confirmation_email": "boolean"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"participant_video": {
							"description": "Start meetings with participant video on. Participants can change this during the meeting.",
							"example": "boolean",
							"type": "string"
						},
						"cn_meeting": {
							"description": "Host meeting in China.",
							"example": "boolean",
							"type": "string"
						},
						"in_meeting": {
							"description": "Host meeting in India.",
							"example": "boolean",
							"type": "string"
						},
						"join_before_host": {
							"description": "Allow participants to join the meeting before the host arrives.",
							"example": "boolean",
							"type": "string"
						},
						"mute_upon_entry": {
							"description": "Mute participants upon entry.",
							"example": "boolean",
							"type": "string"
						},
						"watermark": {
							"description": "Add watermark when viewing shared screen.",
							"example": "boolean",
							"type": "string"
						},
						"use_pmi": {
							"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
							"example": "boolean",
							"type": "string"
						},
						"approval_type": {
							"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
							"example": "integer",
							"type": "string"
						},
						"registration_type": {
							"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
							"example": "integer",
							"type": "string"
						},
						"audio": {
							"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
							"example": "string",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"enforce_login": {
							"description": "Only signed-in (Zoom users) users can join meetings",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_domains": {
							"description": "Only signed-in users with a specified domains.",
							"example": "string",
							"type": "string"
						},
						"alternative_hosts": {
							"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
							"example": "string",
							"type": "string"
						},
						"registrants_confirmation_email": {
							"description": "Send confirmation Email to Registrants.",
							"example": "boolean",
							"type": "string"
						}
					}
				}
			}
		},
		"Settings36": {
			"title": "Settings36",
			"example": {
				"host_video": "boolean",
				"participant_video": "boolean",
				"cn_meeting": "boolean",
				"in_meeting": "boolean",
				"join_before_host": "boolean",
				"mute_upon_entry": "boolean",
				"watermark": "boolean",
				"use_pmi": "boolean",
				"approval_type": "integer",
				"registration_type": "integer",
				"audio": "string",
				"auto_recording": "string",
				"enforce_login": "boolean",
				"enforce_login_domains": "string",
				"alternative_hosts": "string",
				"registrants_confirmation_email": "boolean"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"participant_video": {
					"description": "Start meetings with participant video on. Participants can change this during the meeting.",
					"example": "boolean",
					"type": "string"
				},
				"cn_meeting": {
					"description": "Host meeting in China.",
					"example": "boolean",
					"type": "string"
				},
				"in_meeting": {
					"description": "Host meeting in India.",
					"example": "boolean",
					"type": "string"
				},
				"join_before_host": {
					"description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
					"example": "boolean",
					"type": "string"
				},
				"mute_upon_entry": {
					"description": "Mute participants upon entry.",
					"example": "boolean",
					"type": "string"
				},
				"watermark": {
					"description": "Add watermark when viewing shared screen.",
					"example": "boolean",
					"type": "string"
				},
				"use_pmi": {
					"description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
					"example": "boolean",
					"type": "string"
				},
				"approval_type": {
					"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
					"example": "integer",
					"type": "string"
				},
				"registration_type": {
					"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
					"example": "integer",
					"type": "string"
				},
				"audio": {
					"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
					"example": "string",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"enforce_login": {
					"description": "Only signed-in (Zoom users) users can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_domains": {
					"description": "Only signed-in users with specified domains can join meetings.",
					"example": "string",
					"type": "string"
				},
				"alternative_hosts": {
					"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
					"example": "string",
					"type": "string"
				},
				"registrants_confirmation_email": {
					"description": "Send confirmation Email to Registrants.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"UpdateAMeeting'sStatusrequest": {
			"title": "Update a meeting's statusRequest",
			"example": {
				"action": "string"
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			}
		},
		"AddAMeetingRegistrantrequest": {
			"title": "Add a meeting registrantRequest",
			"example": {
				"email": "string",
				"first_name": "string",
				"last_name": "string",
				"address": "string",
				"city": "string",
				"country": "string",
				"zip": "string",
				"state": "string",
				"phone": "string",
				"industry": "string",
				"org": "string",
				"job_title": "string",
				"purchasing_time_frame": "string",
				"role_in_purchase_process": "string",
				"no_of_employees": "string",
				"comments": "string",
				"custom_questions": [{
					"title": "string",
					"value": "string"
				}]
			},
			"type": "object",
			"properties": {
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				},
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"address": {
					"description": "User's address. ",
					"example": "string",
					"type": "string"
				},
				"city": {
					"description": "User's city. ",
					"example": "string",
					"type": "string"
				},
				"country": {
					"description": "User's country. ",
					"example": "string",
					"type": "string"
				},
				"zip": {
					"description": "User's zip code. ",
					"example": "string",
					"type": "string"
				},
				"state": {
					"description": "User's state. ",
					"example": "string",
					"type": "string"
				},
				"phone": {
					"description": "Phone",
					"example": "string",
					"type": "string"
				},
				"industry": {
					"description": "Industry",
					"example": "string",
					"type": "string"
				},
				"org": {
					"description": "Organization",
					"example": "string",
					"type": "string"
				},
				"job_title": {
					"description": "Job Title",
					"example": "string",
					"type": "string"
				},
				"purchasing_time_frame": {
					"description": "Purchasing Time Frame `Within a month` `1-3 months`  `4-6 months`  `More than 6 months` `No timeframe` ",
					"example": "string",
					"type": "string"
				},
				"role_in_purchase_process": {
					"description": "Role in Purchase Process `Decision Maker` `Evaluator/Recommender`  `Influencer` `Not involved` ",
					"example": "string",
					"type": "string"
				},
				"no_of_employees": {
					"description": "Number of Employees `1-20` `21-50` `51-100` `101-500` `500-1,000` `1,001-5,000` `5,001-10,000` `More than 10,000` ",
					"example": "string",
					"type": "string"
				},
				"comments": {
					"description": "Questions & Comments.",
					"example": "string",
					"type": "string"
				},
				"custom_questions": {
					"description": "Custom Questions.",
					"example": [{
						"title": "string",
						"value": "string"
					}],
					"type": "array",
					"items": {
						"title": "CustomQuestion",
						"example": {
							"title": "string",
							"value": "string"
						},
						"type": "object",
						"properties": {
							"title": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"value": {
								"description": "",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"title",
							"value"
						]
					}
				}
			},
			"required": [
				"email",
				"first_name",
				"last_name"
			]
		},
		"CustomQuestion": {
			"title": "CustomQuestion",
			"example": {
				"title": "string",
				"value": "string"
			},
			"type": "object",
			"properties": {
				"title": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"value": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"title",
				"value"
			]
		},
		"UpdateAMeetingRegistrant'sStatusrequest": {
			"title": "Update a meeting registrant's statusRequest",
			"example": {
				"action": "string",
				"registrants": [{
					"id": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"registrants": {
					"description": "",
					"example": [{
						"id": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Registrant",
						"example": {
							"id": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"id": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"id",
							"email"
						]
					}
				}
			},
			"required": [
				"action"
			]
		},
		"Registrant": {
			"title": "Registrant",
			"example": {
				"id": "string",
				"email": "string"
			},
			"type": "object",
			"properties": {
				"id": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"id",
				"email"
			]
		},
		"CreateAWebinarrequest": {
			"title": "Create a webinarRequest",
			"example": {
				"topic": "string",
				"type": "integer",
				"start_time": "string [date-time]",
				"duration": "integer",
				"timezone": "string",
				"password": "string",
				"agenda": "string",
				"recurrence": {
					"type": "integer",
					"repeat_interval": "integer",
					"weekly_days": "integer",
					"monthly_day": "integer",
					"monthly_week": "integer",
					"monthly_week_day": "integer",
					"end_times": "integer",
					"end_date_time": "string [date-time]"
				},
				"settings": {
					"host_video": "boolean",
					"panelists_video": "boolean",
					"practice_session": "boolean",
					"hd_video": "boolean",
					"approval_type": "integer",
					"registration_type": "integer",
					"audio": "string",
					"auto_recording": "string",
					"enforce_login": "boolean",
					"enforce_login_domains": "string",
					"alternative_hosts": "string",
					"close_registration": "boolean",
					"show_share_button": "boolean",
					"allow_multiple_devices": "boolean"
				}
			},
			"type": "object",
			"properties": {
				"topic": {
					"description": "Topic",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"start_time": {
					"description": "Start time.",
					"example": "string [date-time]",
					"type": "string"
				},
				"duration": {
					"description": "Duration in minutes",
					"example": "integer",
					"type": "string"
				},
				"timezone": {
					"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				},
				"agenda": {
					"description": "Meeting description.",
					"example": "string",
					"type": "string"
				},
				"recurrence": {
					"title": "Recurrence",
					"example": {
						"type": "integer",
						"repeat_interval": "integer",
						"weekly_days": "integer",
						"monthly_day": "integer",
						"monthly_week": "integer",
						"monthly_week_day": "integer",
						"end_times": "integer",
						"end_date_time": "string [date-time]"
					},
					"type": "object",
					"properties": {
						"type": {
							"description": "",
							"example": "integer",
							"type": "string"
						},
						"repeat_interval": {
							"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
							"example": "integer",
							"type": "string"
						},
						"weekly_days": {
							"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
							"example": "integer",
							"type": "string"
						},
						"monthly_day": {
							"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week": {
							"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week_day": {
							"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
							"example": "integer",
							"type": "string"
						},
						"end_times": {
							"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
							"example": "integer",
							"type": "string"
						},
						"end_date_time": {
							"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
							"example": "string [date-time]",
							"type": "string"
						}
					}
				},
				"settings": {
					"title": "Settings44",
					"example": {
						"host_video": "boolean",
						"panelists_video": "boolean",
						"practice_session": "boolean",
						"hd_video": "boolean",
						"approval_type": "integer",
						"registration_type": "integer",
						"audio": "string",
						"auto_recording": "string",
						"enforce_login": "boolean",
						"enforce_login_domains": "string",
						"alternative_hosts": "string",
						"close_registration": "boolean",
						"show_share_button": "boolean",
						"allow_multiple_devices": "boolean"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"panelists_video": {
							"description": "Start video when panelists join webinar.",
							"example": "boolean",
							"type": "string"
						},
						"practice_session": {
							"description": "Enable Practice Session.",
							"example": "boolean",
							"type": "string"
						},
						"hd_video": {
							"description": "Default to HD Video.",
							"example": "boolean",
							"type": "string"
						},
						"approval_type": {
							"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
							"example": "integer",
							"type": "string"
						},
						"registration_type": {
							"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
							"example": "integer",
							"type": "string"
						},
						"audio": {
							"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
							"example": "string",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"enforce_login": {
							"description": "Only signed-in (Zoom users) users can join meetings",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_domains": {
							"description": "Only signed-in users with a specified domains.",
							"example": "string",
							"type": "string"
						},
						"alternative_hosts": {
							"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
							"example": "string",
							"type": "string"
						},
						"close_registration": {
							"description": "Close registration after event date.",
							"example": "boolean",
							"type": "string"
						},
						"show_share_button": {
							"description": "Show social share buttons on registration page.",
							"example": "boolean",
							"type": "string"
						},
						"allow_multiple_devices": {
							"description": "Allow attendees to join from multiple devices.",
							"example": "boolean",
							"type": "string"
						}
					}
				}
			}
		},
		"Settings44": {
			"title": "Settings44",
			"example": {
				"host_video": "boolean",
				"panelists_video": "boolean",
				"practice_session": "boolean",
				"hd_video": "boolean",
				"approval_type": "integer",
				"registration_type": "integer",
				"audio": "string",
				"auto_recording": "string",
				"enforce_login": "boolean",
				"enforce_login_domains": "string",
				"alternative_hosts": "string",
				"close_registration": "boolean",
				"show_share_button": "boolean",
				"allow_multiple_devices": "boolean"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"panelists_video": {
					"description": "Start video when panelists join webinar.",
					"example": "boolean",
					"type": "string"
				},
				"practice_session": {
					"description": "Enable Practice Session.",
					"example": "boolean",
					"type": "string"
				},
				"hd_video": {
					"description": "Default to HD Video.",
					"example": "boolean",
					"type": "string"
				},
				"approval_type": {
					"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
					"example": "integer",
					"type": "string"
				},
				"registration_type": {
					"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
					"example": "integer",
					"type": "string"
				},
				"audio": {
					"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
					"example": "string",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"enforce_login": {
					"description": "Only signed-in (Zoom users) users can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_domains": {
					"description": "Only signed-in users with specified domains can join meetings.",
					"example": "string",
					"type": "string"
				},
				"alternative_hosts": {
					"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
					"example": "string",
					"type": "string"
				},
				"close_registration": {
					"description": "Close registration after event date.",
					"example": "boolean",
					"type": "string"
				},
				"show_share_button": {
					"description": "Show social share buttons on registration page.",
					"example": "boolean",
					"type": "string"
				},
				"allow_multiple_devices": {
					"description": "Allow attendees to join from multiple devices.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"UpdateAWebinarrequest": {
			"title": "Update a webinarRequest",
			"example": {
				"topic": "string",
				"type": "integer",
				"start_time": "string [date-time]",
				"duration": "integer",
				"timezone": "string",
				"password": "string",
				"agenda": "string",
				"recurrence": {
					"type": "integer",
					"repeat_interval": "integer",
					"weekly_days": "integer",
					"monthly_day": "integer",
					"monthly_week": "integer",
					"monthly_week_day": "integer",
					"end_times": "integer",
					"end_date_time": "string [date-time]"
				},
				"settings": {
					"host_video": "boolean",
					"panelists_video": "boolean",
					"practice_session": "boolean",
					"hd_video": "boolean",
					"approval_type": "integer",
					"registration_type": "integer",
					"audio": "string",
					"auto_recording": "string",
					"enforce_login": "boolean",
					"enforce_login_domains": "string",
					"alternative_hosts": "string",
					"close_registration": "boolean",
					"show_share_button": "boolean",
					"allow_multiple_devices": "boolean",
					"registrants_confirmation_email": "boolean"
				}
			},
			"type": "object",
			"properties": {
				"topic": {
					"description": "Topic",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "integer",
					"type": "string"
				},
				"start_time": {
					"description": "Start time.",
					"example": "string [date-time]",
					"type": "string"
				},
				"duration": {
					"description": "Duration in minutes",
					"example": "integer",
					"type": "string"
				},
				"timezone": {
					"description": "Timezone to format start_time. For example, “America/Los_Angeles”. For scheduled meetings only. Please reference our timezone list for supported timezones and their formats.",
					"example": "string",
					"type": "string"
				},
				"password": {
					"description": "Sets password.",
					"example": "string",
					"type": "string"
				},
				"agenda": {
					"description": "Meeting description.",
					"example": "string",
					"type": "string"
				},
				"recurrence": {
					"title": "Recurrence",
					"example": {
						"type": "integer",
						"repeat_interval": "integer",
						"weekly_days": "integer",
						"monthly_day": "integer",
						"monthly_week": "integer",
						"monthly_week_day": "integer",
						"end_times": "integer",
						"end_date_time": "string [date-time]"
					},
					"type": "object",
					"properties": {
						"type": {
							"description": "",
							"example": "integer",
							"type": "string"
						},
						"repeat_interval": {
							"description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
							"example": "integer",
							"type": "string"
						},
						"weekly_days": {
							"description": "Days of the week the meeting should repeat, multiple values separated by comma '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday",
							"example": "integer",
							"type": "string"
						},
						"monthly_day": {
							"description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week": {
							"description": "Week for which the meeting should recur each month, '-1' Last week '1' First week '2' Second week '3' Third week '4' Fourth week.",
							"example": "integer",
							"type": "string"
						},
						"monthly_week_day": {
							"description": "Day for which the meeting should recur each month '1' Sunday '2' Monday '3' Tuesday '4' Wednesday '5' Thursday '6' Friday '7' Saturday.",
							"example": "integer",
							"type": "string"
						},
						"end_times": {
							"description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with “end_date_time”.)",
							"example": "integer",
							"type": "string"
						},
						"end_date_time": {
							"description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with “end_times”.)",
							"example": "string [date-time]",
							"type": "string"
						}
					}
				},
				"settings": {
					"title": "Settings47",
					"example": {
						"host_video": "boolean",
						"panelists_video": "boolean",
						"practice_session": "boolean",
						"hd_video": "boolean",
						"approval_type": "integer",
						"registration_type": "integer",
						"audio": "string",
						"auto_recording": "string",
						"enforce_login": "boolean",
						"enforce_login_domains": "string",
						"alternative_hosts": "string",
						"close_registration": "boolean",
						"show_share_button": "boolean",
						"allow_multiple_devices": "boolean",
						"registrants_confirmation_email": "boolean"
					},
					"type": "object",
					"properties": {
						"host_video": {
							"description": "Start meetings with host video on",
							"example": "boolean",
							"type": "string"
						},
						"panelists_video": {
							"description": "Start video when panelists join webinar.",
							"example": "boolean",
							"type": "string"
						},
						"practice_session": {
							"description": "Enable Practice Session.",
							"example": "boolean",
							"type": "string"
						},
						"hd_video": {
							"description": "Default to HD Video.",
							"example": "boolean",
							"type": "string"
						},
						"approval_type": {
							"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
							"example": "integer",
							"type": "string"
						},
						"registration_type": {
							"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
							"example": "integer",
							"type": "string"
						},
						"audio": {
							"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
							"example": "string",
							"type": "string"
						},
						"auto_recording": {
							"description": "Record meetings automatically as they start.",
							"example": "string",
							"type": "string"
						},
						"enforce_login": {
							"description": "Only signed-in (Zoom users) users can join meetings",
							"example": "boolean",
							"type": "string"
						},
						"enforce_login_domains": {
							"description": "Only signed-in users with a specified domains.",
							"example": "string",
							"type": "string"
						},
						"alternative_hosts": {
							"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
							"example": "string",
							"type": "string"
						},
						"close_registration": {
							"description": "Close registration after event date.",
							"example": "boolean",
							"type": "string"
						},
						"show_share_button": {
							"description": "Show social share buttons on registration page.",
							"example": "boolean",
							"type": "string"
						},
						"allow_multiple_devices": {
							"description": "Allow attendees to join from multiple devices.",
							"example": "boolean",
							"type": "string"
						},
						"registrants_confirmation_email": {
							"description": "Send confirmation Email to Registrants.",
							"example": "boolean",
							"type": "string"
						}
					}
				}
			}
		},
		"Settings47": {
			"title": "Settings47",
			"example": {
				"host_video": "boolean",
				"panelists_video": "boolean",
				"practice_session": "boolean",
				"hd_video": "boolean",
				"approval_type": "integer",
				"registration_type": "integer",
				"audio": "string",
				"auto_recording": "string",
				"enforce_login": "boolean",
				"enforce_login_domains": "string",
				"alternative_hosts": "string",
				"close_registration": "boolean",
				"show_share_button": "boolean",
				"allow_multiple_devices": "boolean",
				"registrants_confirmation_email": "boolean"
			},
			"type": "object",
			"properties": {
				"host_video": {
					"description": "Start meetings with host video on.",
					"example": "boolean",
					"type": "string"
				},
				"panelists_video": {
					"description": "Start video when panelists join webinar.",
					"example": "boolean",
					"type": "string"
				},
				"practice_session": {
					"description": "Enable Practice Session.",
					"example": "boolean",
					"type": "string"
				},
				"hd_video": {
					"description": "Default to HD Video.",
					"example": "boolean",
					"type": "string"
				},
				"approval_type": {
					"description": "'0' Automatically Approve '1' Manually Approve '2' No Registration Required ",
					"example": "integer",
					"type": "string"
				},
				"registration_type": {
					"description": "Registration type. Used for recurring meeting with fixed time only. `1` Attendees register once and can attend any of the occurrences `2` Attendees need to register for each occurrence to attend `3` Attendees register once and can choose one or more occurrences to attend",
					"example": "integer",
					"type": "string"
				},
				"audio": {
					"description": "Determine how participants can join the audio portion of the meeting `both` Both Telephony and VoIP `telephony` Telephony only `voip` VoIP only",
					"example": "string",
					"type": "string"
				},
				"auto_recording": {
					"description": "Record meetings automatically as they start 'local' Record on local 'cloud' Record on cloud 'none' Disabled.",
					"example": "string",
					"type": "string"
				},
				"enforce_login": {
					"description": "Only signed-in (Zoom users) users can join meetings.",
					"example": "boolean",
					"type": "string"
				},
				"enforce_login_domains": {
					"description": "Only signed-in users with specified domains can join meetings.",
					"example": "string",
					"type": "string"
				},
				"alternative_hosts": {
					"description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
					"example": "string",
					"type": "string"
				},
				"close_registration": {
					"description": "Close registration after event date.",
					"example": "boolean",
					"type": "string"
				},
				"show_share_button": {
					"description": "Show social share buttons on registration page.",
					"example": "boolean",
					"type": "string"
				},
				"allow_multiple_devices": {
					"description": "Allow attendees to join from multiple devices.",
					"example": "boolean",
					"type": "string"
				},
				"registrants_confirmation_email": {
					"description": "Send confirmation Email to Registrants.",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"UpdateAWebinar'sStatusrequest": {
			"title": "Update a webinar's statusRequest",
			"example": {
				"status": "string"
			},
			"type": "object",
			"properties": {
				"status": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			}
		},
		"AddAWebinarPanelistrequest": {
			"title": "Add a webinar panelistRequest",
			"example": {
				"panelists": [{
					"name": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"panelists": {
					"description": "",
					"example": [{
						"name": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Panelist",
						"example": {
							"name": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"name": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"name",
							"email"
						]
					}
				}
			}
		},
		"Panelist": {
			"title": "Panelist",
			"example": {
				"name": "string",
				"email": "string"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"name",
				"email"
			]
		},
		"AddAWebinarRegistrantrequest": {
			"title": "Add a webinar registrantRequest",
			"example": {
				"email": "string",
				"first_name": "string",
				"last_name": "string",
				"address": "string",
				"city": "string",
				"country": "string",
				"zip": "string",
				"state": "string",
				"phone": "string",
				"industry": "string",
				"org": "string",
				"job_title": "string",
				"purchasing_time_frame": "string",
				"role_in_purchase_process": "string",
				"no_of_employees": "string",
				"comments": "string",
				"custom_questions": [{
					"title": "string",
					"value": "string"
				}]
			},
			"type": "object",
			"properties": {
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				},
				"first_name": {
					"description": "User's first name.",
					"example": "string",
					"type": "string"
				},
				"last_name": {
					"description": "User's last name.",
					"example": "string",
					"type": "string"
				},
				"address": {
					"description": "User's address. ",
					"example": "string",
					"type": "string"
				},
				"city": {
					"description": "User's city. ",
					"example": "string",
					"type": "string"
				},
				"country": {
					"description": "User's country. ",
					"example": "string",
					"type": "string"
				},
				"zip": {
					"description": "User's zip code. ",
					"example": "string",
					"type": "string"
				},
				"state": {
					"description": "User's state. ",
					"example": "string",
					"type": "string"
				},
				"phone": {
					"description": "Phone",
					"example": "string",
					"type": "string"
				},
				"industry": {
					"description": "Industry",
					"example": "string",
					"type": "string"
				},
				"org": {
					"description": "Organization",
					"example": "string",
					"type": "string"
				},
				"job_title": {
					"description": "Job Title",
					"example": "string",
					"type": "string"
				},
				"purchasing_time_frame": {
					"description": "Purchasing Time Frame `Within a month` `1-3 months`  `4-6 months`  `More than 6 months` `No timeframe` ",
					"example": "string",
					"type": "string"
				},
				"role_in_purchase_process": {
					"description": "Role in Purchase Process `Decision Maker` `Evaluator/Recommender`  `Influencer` `Not involved` ",
					"example": "string",
					"type": "string"
				},
				"no_of_employees": {
					"description": "Number of Employees `1-20` `21-50` `51-100` `101-500` `500-1,000` `1,001-5,000` `5,001-10,000` `More than 10,000` ",
					"example": "string",
					"type": "string"
				},
				"comments": {
					"description": "Questions & Comments.",
					"example": "string",
					"type": "string"
				},
				"custom_questions": {
					"description": "Custom Questions.",
					"example": [{
						"title": "string",
						"value": "string"
					}],
					"type": "array",
					"items": {
						"title": "CustomQuestion",
						"example": {
							"title": "string",
							"value": "string"
						},
						"type": "object",
						"properties": {
							"title": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"value": {
								"description": "",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"title",
							"value"
						]
					}
				}
			},
			"required": [
				"email",
				"first_name",
				"last_name"
			]
		},
		"UpdateAWebinarRegistrant'sStatusrequest": {
			"title": "Update a webinar registrant's statusRequest",
			"example": {
				"action": "string",
				"registrants": [{
					"id": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"registrants": {
					"description": "",
					"example": [{
						"id": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Registrant",
						"example": {
							"id": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"id": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"id",
							"email"
						]
					}
				}
			},
			"required": [
				"action"
			]
		},
		"CreateAGrouprequest": {
			"title": "Create a groupRequest",
			"example": {
				"name": "string"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"name"
			]
		},
		"UpdateAGrouprequest": {
			"title": "Update a groupRequest",
			"example": {
				"name": "string"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"name"
			]
		},
		"AddGroupMembersrequest": {
			"title": "Add group membersRequest",
			"example": {
				"members": [{
					"id": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"members": {
					"description": "",
					"example": [{
						"id": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Member",
						"example": {
							"id": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"id": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"id",
							"email"
						]
					}
				}
			}
		},
		"Member": {
			"title": "Member",
			"example": {
				"id": "string",
				"email": "string"
			},
			"type": "object",
			"properties": {
				"id": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"email": {
					"description": "User's email address.",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"id",
				"email"
			]
		},
		"CreateAnImGrouprequest": {
			"title": "Create an IM GroupRequest",
			"example": {
				"name": "string",
				"type": "string",
				"search_by_domain": "boolean",
				"search_by_account": "boolean",
				"search_by_ma_account": "boolean"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"search_by_domain": {
					"description": "",
					"example": "boolean",
					"type": "string"
				},
				"search_by_account": {
					"description": "",
					"example": "boolean",
					"type": "string"
				},
				"search_by_ma_account": {
					"description": "",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"UpdateAnImGrouprequest": {
			"title": "Update an IM GroupRequest",
			"example": {
				"name": "string",
				"type": "string",
				"search_by_domain": "boolean",
				"search_by_account": "boolean",
				"search_by_ma_account": "boolean"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"type": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"search_by_domain": {
					"description": "",
					"example": "boolean",
					"type": "string"
				},
				"search_by_account": {
					"description": "",
					"example": "boolean",
					"type": "string"
				},
				"search_by_ma_account": {
					"description": "",
					"example": "boolean",
					"type": "string"
				}
			}
		},
		"AddImGroupMembersrequest": {
			"title": "Add IM Group membersRequest",
			"example": {
				"members": [{
					"id": "string",
					"email": "string"
				}]
			},
			"type": "object",
			"properties": {
				"members": {
					"description": "",
					"example": [{
						"id": "string",
						"email": "string"
					}],
					"type": "array",
					"items": {
						"title": "Member",
						"example": {
							"id": "string",
							"email": "string"
						},
						"type": "object",
						"properties": {
							"id": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"email": {
								"description": "User's email address.",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"id",
							"email"
						]
					}
				}
			}
		},
		"RecoverAMeeting'sRecordingsrequest": {
			"title": "Recover a meeting's recordingsRequest",
			"example": {
				"action": "string"
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			}
		},
		"RecoverASingleRecordingrequest": {
			"title": "Recover a single recordingRequest",
			"example": {
				"action": "string"
			},
			"type": "object",
			"properties": {
				"action": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			}
		},
		"SwitchWebhookVersionrequest": {
			"title": "Switch webhook versionRequest",
			"example": {
				"version": "string"
			},
			"type": "object",
			"properties": {
				"version": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"version"
			]
		},
		"CreateAWebhookrequest": {
			"title": "Create a webhookRequest",
			"example": {
				"url": "string",
				"auth_user": "string",
				"auth_password": "string",
				"events": [
					"string"
				]
			},
			"type": "object",
			"properties": {
				"url": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"auth_user": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"auth_password": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"events": {
					"description": "",
					"example": [
						"string"
					],
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			},
			"required": [
				"url",
				"auth_user",
				"auth_password",
				"events"
			]
		},
		"UpdateAWebhookrequest": {
			"title": "Update a webhookRequest",
			"example": {
				"url": "string",
				"auth_user": "string",
				"auth_password": "string",
				"events": [
					"string"
				]
			},
			"type": "object",
			"properties": {
				"url": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"auth_user": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"auth_password": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"events": {
					"description": "",
					"example": [
						"string"
					],
					"type": "array",
					"items": {
						"type": "string"
					}
				}
			}
		},
		"AddAUser'sTspAccountrequest": {
			"title": "Add a user's TSP accountRequest",
			"example": {
				"conference_code": "string",
				"leader_pin": "string",
				"media_number": {
					"code": "string",
					"number": "string"
				},
				"dial_in_numbers": [{
					"code": "string",
					"number": "string"
				}]
			},
			"type": "object",
			"properties": {
				"conference_code": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"leader_pin": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"media_number": {
					"title": "MediaNumber",
					"example": {
						"code": "string",
						"number": "string"
					},
					"type": "object",
					"properties": {
						"code": {
							"description": "",
							"example": "string",
							"type": "string"
						},
						"number": {
							"description": "",
							"example": "string",
							"type": "string"
						}
					},
					"required": [
						"code",
						"number"
					]
				},
				"dial_in_numbers": {
					"description": "",
					"example": [{
						"code": "string",
						"number": "string"
					}],
					"type": "array",
					"items": {
						"title": "DialInNumber",
						"example": {
							"code": "string",
							"number": "string"
						},
						"type": "object",
						"properties": {
							"code": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"number": {
								"description": "",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"code",
							"number"
						]
					}
				}
			},
			"required": [
				"conference_code",
				"leader_pin",
				"media_number",
				"dial_in_numbers"
			]
		},
		"MediaNumber": {
			"title": "MediaNumber",
			"example": {
				"code": "string",
				"number": "string"
			},
			"type": "object",
			"properties": {
				"code": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"number": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"code",
				"number"
			]
		},
		"DialInNumber": {
			"title": "DialInNumber",
			"example": {
				"code": "string",
				"number": "string"
			},
			"type": "object",
			"properties": {
				"code": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"number": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"code",
				"number"
			]
		},
		"UpdateATspAccountrequest": {
			"title": "Update a TSP accountRequest",
			"example": {
				"conference_code": "string",
				"leader_pin": "string",
				"media_number": {
					"code": "string",
					"number": "string"
				},
				"dial_in_numbers": [{
					"code": "string",
					"number": "string"
				}]
			},
			"type": "object",
			"properties": {
				"conference_code": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"leader_pin": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"media_number": {
					"title": "MediaNumber",
					"example": {
						"code": "string",
						"number": "string"
					},
					"type": "object",
					"properties": {
						"code": {
							"description": "",
							"example": "string",
							"type": "string"
						},
						"number": {
							"description": "",
							"example": "string",
							"type": "string"
						}
					},
					"required": [
						"code",
						"number"
					]
				},
				"dial_in_numbers": {
					"description": "",
					"example": [{
						"code": "string",
						"number": "string"
					}],
					"type": "array",
					"items": {
						"title": "DialInNumber",
						"example": {
							"code": "string",
							"number": "string"
						},
						"type": "object",
						"properties": {
							"code": {
								"description": "",
								"example": "string",
								"type": "string"
							},
							"number": {
								"description": "",
								"example": "string",
								"type": "string"
							}
						},
						"required": [
							"code",
							"number"
						]
					}
				}
			},
			"required": [
				"conference_code",
				"leader_pin",
				"media_number",
				"dial_in_numbers"
			]
		},
		"CreateAH.323/sipDevicerequest": {
			"title": "Create a H.323/SIP DeviceRequest",
			"example": {
				"name": "string",
				"protocol": "string",
				"ip": "string",
				"encryption": "string"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"protocol": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"ip": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"encryption": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"name",
				"protocol",
				"ip",
				"encryption"
			]
		},
		"UpdateAH.323/sipDevicerequest": {
			"title": "Update a H.323/SIP DeviceRequest",
			"example": {
				"name": "string",
				"protocol": "string",
				"ip": "string",
				"encryption": "string"
			},
			"type": "object",
			"properties": {
				"name": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"protocol": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"ip": {
					"description": "",
					"example": "string",
					"type": "string"
				},
				"encryption": {
					"description": "",
					"example": "string",
					"type": "string"
				}
			},
			"required": [
				"name",
				"protocol",
				"ip",
				"encryption"
			]
		}
	}
}
