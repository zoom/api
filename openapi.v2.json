{
  "swagger": "2.0",
  "x-explorer-enabled": false,
  "info": {
    "title": "Zoom API",
    "description": "API Description",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/",
      "email": "developer@zoom.us"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "2.0.0"
  },
  "host": "api.zoom.us",
  "basePath": "/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "multipart/form-data"
  ],
  "produces": [
    "application/json",
    "application/xml"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "summary": "List sub accounts",
        "description": "List all the sub accounts under the master account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accounts",
        "parameters": [
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Account list returned",
            "schema": {
              "$ref": "#/definitions/AccountList"
            },
            "examples": {
              "application/json": {
                "page_count": -93046708,
                "page_number": 94460466,
                "page_size": -2501617,
                "total_records": -16713896,
                "accounts": [
                  {
                    "id": "elit anim ad incididunt",
                    "account_name": "dolore proident commodo",
                    "owner_email": "culpa",
                    "account_type": "enim aliquip in culpa ut",
                    "seats": -97639348,
                    "subscription_start_time": "1955-10-06T14:08:41.687Z",
                    "subscription_end_time": "1982-10-24T20:18:10.716Z",
                    "created_at": "1989-11-14T16:25:36.877Z"
                  },
                  {
                    "id": "proident eiusmod",
                    "account_name": "Excepteur voluptate id do",
                    "owner_email": "sint deserunt",
                    "account_type": "aute mollit",
                    "seats": -30524846,
                    "subscription_start_time": "2002-05-10T21:20:34.856Z",
                    "subscription_end_time": "1983-05-09T16:57:26.935Z",
                    "created_at": "1993-02-24T00:47:47.164Z"
                  },
                  {
                    "id": "et nostrud Excepteur adipisicing occaecat",
                    "account_name": "cupidatat consectetur",
                    "owner_email": "ipsum in dolor consectetur consequat",
                    "account_type": "do aute",
                    "seats": -95724256,
                    "subscription_start_time": "1988-07-10T02:27:17.277Z",
                    "subscription_end_time": "1994-08-24T22:40:31.279Z",
                    "created_at": "1945-08-08T22:14:19.667Z"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a sub account",
        "description": "Create a sub account under the master account. <aside>Your account must be a master account and have this privilege to create sub account. Zoom only assigns this privilege to trusted partners. The created user will not receive a confirmation email.</aside>.",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Account",
            "schema": {
              "$ref": "#/definitions/Account"
            },
            "x-examples": {
              "application/json": {
                "email": "elit in pariatur culpa ea",
                "first_name": "sint et d",
                "last_name": "ex dolore deserunt nulla",
                "password": "qui Lorem in est",
                "options": {
                  "share_rc": true,
                  "room_connectors": "Duis ex l",
                  "share_mc": true,
                  "meeting_connectors": "aliqua amet in mollit",
                  "pay_mode": "sub"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Account",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Account ID"
                },
                "owner_id": {
                  "type": "string",
                  "description": "Account Owner ID"
                },
                "owner_email": {
                  "type": "string",
                  "description": "Account owner email"
                },
                "created_at": {
                  "type": "string",
                  "description": "Account created date time"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "Duis",
                "owner_id": "culpa cillum dolore",
                "owner_email": "fugiat dolor elit dolore",
                "created_at": "fugiat commodo incididunt irure ipsum"
              }
            }
          },
          "409": {
            "description": "Account with that email already exists"
          }
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "summary": "Retrieve a sub account",
        "description": "Retrieve a sub account under the master account. <aside>Your account must be a master account and have this privilege to read sub accounts. Zoom only assigns this privilege to trusted partners</aside>.",
        "tags": [
          "Accounts"
        ],
        "operationId": "account",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account object returned",
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Account ID"
                },
                "owner_id": {
                  "type": "string",
                  "description": "Account Owner ID"
                },
                "owner_email": {
                  "type": "string",
                  "description": "Account Owner email"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Account creation date/time"
                },
                "options": {
                  "$ref": "#/definitions/AccountOptions"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "exercitation",
                "owner_id": "dolor volupt",
                "owner_email": "veniam",
                "created_at": "2008-03-25T16:24:02.297Z",
                "options": {
                  "share_rc": true,
                  "room_connectors": "incididunt adipisicing",
                  "share_mc": false,
                  "meeting_connectors": "exercitation Lorem sed cupidatat",
                  "pay_mode": "sub"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Disassociate an account",
        "description": "Disassociate a sub account from the master account. This will leave the account intact but the sub account will not longer be associated with the master account.",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountDisassociate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted",
            "examples": {}
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/options": {
      "patch": {
        "summary": "Update a sub account's options",
        "description": "Update a sub account's options under the master account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountOptionsUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountOptions"
            },
            "x-examples": {
              "application/json": {
                "share_rc": false,
                "room_connectors": "proident consequat",
                "share_mc": false,
                "meeting_connectors": "sunt qui officia aliquip",
                "pay_mode": "master"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account options updated"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "summary": "Retrieve a sub account's settings",
        "description": "Retrieve a sub account's settings under the master account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettings",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account settings returned",
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            },
            "examples": {
              "application/json": {
                "schedule_meting": {
                  "host_video": false,
                  "participant_video": true,
                  "audio_type": "both",
                  "join_before_host": false,
                  "enforce_login": false,
                  "enforce_login_with_domains": false,
                  "enforce_login_domains": "consectetur sed",
                  "not_store_meeting_topic": true,
                  "force_pmi_jbh_password": false
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": false,
                  "private_chat": false,
                  "auto_saving_chat": true,
                  "file_transfer": true,
                  "feedback": false,
                  "post_meeting_feedback": false,
                  "co_host": true,
                  "polling": false,
                  "attendee_on_hold": false,
                  "show_meeting_control_toolbar": true,
                  "allow_show_zoom_windows": true,
                  "annotation": false,
                  "whiteboard": true,
                  "webinar_question_answer": false,
                  "anonymous_question_answer": false,
                  "breakout_room": true,
                  "closed_caption": false,
                  "far_end_camera_control": true,
                  "group_hd": false,
                  "virtual_background": false,
                  "watermark": false,
                  "alert_guest_join": false,
                  "auto_answer": true,
                  "p2p_connetion": true,
                  "p2p_ports": true,
                  "ports_range": "ad",
                  "sending_default_email_invites": true,
                  "use_html_format_email": false,
                  "dscp_marking": false,
                  "dscp_audio": 37,
                  "dscp_video": 55,
                  "stereo_audio": false,
                  "original_audio": true,
                  "screen_sharing": true,
                  "remote_control": true,
                  "attention_tracking": true
                },
                "email_notification": {
                  "cloud_recording_avaliable_reminder": false,
                  "jbh_reminder": false,
                  "cancel_meeting_reminder": true,
                  "low_host_count_reminder": false,
                  "alternative_host_reminder": true
                },
                "zoom_rooms": {
                  "upcoming_meeting_alert": true,
                  "start_airplay_manually": false,
                  "weekly_system_restart": false,
                  "list_meetings_with_calendar": true,
                  "zr_post_meeting_feedback": true,
                  "ultrasonic": true,
                  "force_private_meeting": true,
                  "hide_host_information": true,
                  "cmr_for_instant_meeting": true,
                  "auto_start_stop_scheduled_meetings": false
                },
                "security": {
                  "admin_change_name_pic": true,
                  "import_photos_from_devices": false,
                  "hide_billing_info": true
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": true,
                  "record_speaker_view": false,
                  "record_gallery_view": false,
                  "record_audio_file": true,
                  "save_chat_text": false,
                  "show_timestamp": false,
                  "recording_audio_transcript": true,
                  "auto_recording": "cloud",
                  "cloud_recording_download": false,
                  "cloud_recording_download_host": false,
                  "account_user_access_recording": true,
                  "auto_delete_cmr": true,
                  "auto_delete_cmr_days": -54702733
                },
                "telephony": {
                  "third_party_audio": false,
                  "audio_conference_info": "ame"
                },
                "integration": {
                  "google_calendar": true,
                  "google_drive": false,
                  "dropbox": true,
                  "box": false,
                  "microsoft_one_drive": true,
                  "kubi": false
                },
                "feature": {
                  "meeting_capacity": 42137664
                }
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "patch": {
        "summary": "Update a sub account's settings",
        "description": "Update a sub account's settings under the master account",
        "tags": [
          "Accounts"
        ],
        "operationId": "accountSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountSettings"
            },
            "x-examples": {
              "application/json": {
                "schedule_meting": {
                  "host_video": true,
                  "participant_video": true,
                  "audio_type": "thirdParty",
                  "join_before_host": true,
                  "enforce_login": false,
                  "enforce_login_with_domains": false,
                  "enforce_login_domains": "dolor consectetur aute",
                  "not_store_meeting_topic": true,
                  "force_pmi_jbh_password": true
                },
                "in_meeting": {
                  "e2e_encryption": false,
                  "chat": true,
                  "private_chat": false,
                  "auto_saving_chat": false,
                  "file_transfer": true,
                  "feedback": false,
                  "post_meeting_feedback": false,
                  "co_host": false,
                  "polling": true,
                  "attendee_on_hold": false,
                  "show_meeting_control_toolbar": false,
                  "allow_show_zoom_windows": false,
                  "annotation": false,
                  "whiteboard": false,
                  "webinar_question_answer": true,
                  "anonymous_question_answer": false,
                  "breakout_room": false,
                  "closed_caption": true,
                  "far_end_camera_control": false,
                  "group_hd": true,
                  "virtual_background": true,
                  "watermark": true,
                  "alert_guest_join": true,
                  "auto_answer": true,
                  "p2p_connetion": false,
                  "p2p_ports": true,
                  "ports_range": "exercitation",
                  "sending_default_email_invites": false,
                  "use_html_format_email": true,
                  "dscp_marking": true,
                  "dscp_audio": 12,
                  "dscp_video": 1,
                  "stereo_audio": false,
                  "original_audio": false,
                  "screen_sharing": false,
                  "remote_control": true,
                  "attention_tracking": true
                },
                "email_notification": {
                  "cloud_recording_avaliable_reminder": false,
                  "jbh_reminder": false,
                  "cancel_meeting_reminder": false,
                  "low_host_count_reminder": false,
                  "alternative_host_reminder": false
                },
                "zoom_rooms": {
                  "upcoming_meeting_alert": false,
                  "start_airplay_manually": false,
                  "weekly_system_restart": true,
                  "list_meetings_with_calendar": true,
                  "zr_post_meeting_feedback": true,
                  "ultrasonic": true,
                  "force_private_meeting": true,
                  "hide_host_information": true,
                  "cmr_for_instant_meeting": false,
                  "auto_start_stop_scheduled_meetings": true
                },
                "security": {
                  "admin_change_name_pic": false,
                  "import_photos_from_devices": true,
                  "hide_billing_info": true
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": false,
                  "record_speaker_view": true,
                  "record_gallery_view": true,
                  "record_audio_file": true,
                  "save_chat_text": true,
                  "show_timestamp": true,
                  "recording_audio_transcript": true,
                  "auto_recording": "cloud",
                  "cloud_recording_download": false,
                  "cloud_recording_download_host": true,
                  "account_user_access_recording": true,
                  "auto_delete_cmr": true,
                  "auto_delete_cmr_days": -54181489
                },
                "telephony": {
                  "third_party_audio": true,
                  "audio_conference_info": "labore"
                },
                "integration": {
                  "google_calendar": false,
                  "google_drive": false,
                  "dropbox": true,
                  "box": true,
                  "microsoft_one_drive": false,
                  "kubi": false
                },
                "feature": {
                  "meeting_capacity": 41472357
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account settings updated",
            "examples": {}
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/billing": {
      "get": {
        "summary": "Retrieve billing information for a sub account",
        "description": "Retrieve billing information for a sub account under the master account",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBilling",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account billing contact information returned",
            "schema": {
              "$ref": "#/definitions/BillingContactRequired"
            },
            "examples": {
              "application/json": {
                "first_name": "ipsum enim est incididunt",
                "last_name": "ad ut ex magna labore",
                "email": "elit anim",
                "phone_number": "sunt culpa consectetur laboris",
                "address": "mollit",
                "city": "veniam in aliqua occaecat mollit",
                "state": "in m",
                "zip": "do in",
                "country": "Duis id eu aliqua",
                "apt": "culpa in eu aliquip"
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      },
      "patch": {
        "summary": "Update billing information for a sub account",
        "description": "Update billing information for a sub account under the master account <aside>Only for the sub account which is a paid account and paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountBillingUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BillingContact"
            },
            "x-examples": {
              "application/json": {
                "first_name": "est Excepteur sed dolor",
                "last_name": "amet ad elit proident",
                "email": "tempor ut",
                "phone_number": "ut cillum",
                "address": "dolore",
                "apt": "mollit dolor",
                "city": "in Ut exercitation",
                "state": "et voluptate ex dolor",
                "zip": "labore pariatur dolore adipisicing Excepteur",
                "country": "eiusmod Lorem do"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account billing contact information updated"
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/accounts/{accountId}/plans": {
      "get": {
        "summary": "Retrieve plan information for a sub account",
        "description": "Retrieve plan information for a sub account under the master account  <aside>Only for the sub account which is paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlans",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          }
        ],
        "responses": {
          "200": {
            "description": "Account plans returned",
            "schema": {
              "$ref": "#/definitions/AccountPlans"
            },
            "examples": {
              "application/json": {
                "plan_base": {
                  "type": "Ut eu in",
                  "hosts": 20763963
                },
                "plan_zoom_rooms": {
                  "type": "aliquip ",
                  "hosts": -83471480
                },
                "plan_room_connector": {
                  "type": "voluptate non",
                  "hosts": -2807577
                },
                "plan_large_meeting": [
                  {
                    "type": "tempor amet velit cupidatat elit",
                    "hosts": 33985339
                  },
                  {
                    "type": "occaecat non",
                    "hosts": -20544412
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "incididunt eu officia culpa",
                    "hosts": 13854896
                  }
                ],
                "plan_recording": "consequat exercitation consectetur eu",
                "plan_audio": {
                  "type": "officia sint non qui voluptate",
                  "tollfree_countries": "ex consectetur",
                  "premium_countries": "esse do",
                  "callout_countries": "deserunt Ut ex dolor",
                  "ddi_numbers": -50545266
                }
              }
            }
          },
          "404": {
            "description": "Account not fond"
          }
        }
      },
      "post": {
        "summary": "Subscribe plans for a sub account",
        "description": "Subscribe plans for a sub account of the master account <aside>Can only subscribe plans for the sub account which is a free account and paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanCreate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "contact": {
                      "$ref": "#/definitions/BillingContactRequired"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/AccountPlans"
                }
              ]
            },
            "x-examples": {
              "application/json": {
                "contact": {
                  "first_name": "qui ullamco elit",
                  "last_name": "irure dolore sint",
                  "email": "id eu",
                  "phone_number": "est ipsum commodo",
                  "address": "in nostrud",
                  "city": "elit anim eiusmod incididunt aliquip",
                  "state": "exercitation nostrud ipsum irure",
                  "zip": "in adipisicing nulla Duis",
                  "country": "aliqua qui et quis",
                  "apt": "dolo"
                },
                "plan_base": {
                  "type": "dolor ut sed",
                  "hosts": -5507573
                },
                "plan_zoom_rooms": {
                  "type": "dolore",
                  "hosts": -37006553
                },
                "plan_room_connector": {
                  "type": "ex do nisi",
                  "hosts": 14340181
                },
                "plan_large_meeting": [
                  {
                    "type": "dolore irure ipsum",
                    "hosts": -81823525
                  },
                  {
                    "type": "dolore",
                    "hosts": 87724237
                  },
                  {
                    "type": "est in Excepteur enim esse",
                    "hosts": -23535424
                  },
                  {
                    "type": "enim id",
                    "hosts": 69186472
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "ad",
                    "hosts": 9585275
                  },
                  {
                    "type": "dolore deserunt e",
                    "hosts": 79444902
                  },
                  {
                    "type": "vel",
                    "hosts": 83124431
                  },
                  {
                    "type": "cupidatat non sed ad",
                    "hosts": -93744577
                  }
                ],
                "plan_recording": "ex Excepteur esse adipisicing",
                "plan_audio": {
                  "type": "veniam aute",
                  "tollfree_countries": "Ut magna proident cillum",
                  "premium_countries": "qui eiusmod in consequat dolor",
                  "callout_countries": "eiusmod sed",
                  "ddi_numbers": -80206946
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account plans updated",
            "schema": {
              "$ref": "#/definitions/AccountPlans"
            },
            "examples": {
              "application/json": {
                "plan_base": {
                  "type": "commodo esse in",
                  "hosts": 94174687
                },
                "plan_zoom_rooms": {
                  "type": "exercitation ullamco Lorem ea magna",
                  "hosts": 66124465
                },
                "plan_room_connector": {
                  "type": "minim laboris qui",
                  "hosts": 96267499
                },
                "plan_large_meeting": [
                  {
                    "type": "dolor",
                    "hosts": -21921144
                  },
                  {
                    "type": "culpa sint ut",
                    "hosts": 47164081
                  },
                  {
                    "type": "voluptate",
                    "hosts": 3734179
                  }
                ],
                "plan_webinar": [
                  {
                    "type": "irure et ipsum",
                    "hosts": -56852933
                  }
                ],
                "plan_recording": "magna sed",
                "plan_audio": {
                  "type": "laborum esse quis",
                  "tollfree_countries": "reprehenderit",
                  "premium_countries": "cillum officia dolor",
                  "callout_countries": "enim aliqua culpa cillum",
                  "ddi_numbers": 17219247
                }
              }
            }
          }
        }
      }
    },
    "/accounts/{accountId}/plans/base": {
      "put": {
        "summary": "Update a base plan for a sub account",
        "description": "Update a base plan for a sub account <aside>Can only update a base plan for the sub account which is a paid account and paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanBaseUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPlanBaseRequired"
            },
            "x-examples": {
              "application/json": {
                "type": "qui culpa ut",
                "hosts": -96755088
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account plans updated",
            "examples": {}
          }
        }
      }
    },
    "/accounts/{accountId}/plans/addons": {
      "post": {
        "summary": "Add an additional plan for sub account",
        "description": "Add an additional plan for sub account <aside>Can only add an Additional plan for the sub account which is a paid account and paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanAddonCreate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPlanRequired"
            },
            "x-examples": {
              "application/json": {
                "type": "velit proident amet consequat eiusmod",
                "hosts": 32097830
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account plans updated"
          }
        }
      },
      "put": {
        "summary": "Update an additional plan for sub account",
        "description": "Update an additional plan for sub account<aside>Can only update an Additional plan for the sub account which is a paid account and paid by master account</aside>",
        "tags": [
          "Billing"
        ],
        "operationId": "accountPlanAddonUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/AccountId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountPlanRequired"
            },
            "x-examples": {
              "application/json": {
                "type": "in voluptate sint Lorem",
                "hosts": -26739786
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account plans updated"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "List groups",
        "description": "List groups under your account",
        "tags": [
          "Groups"
        ],
        "parameters": [],
        "operationId": "groups",
        "responses": {
          "200": {
            "description": "List of groups returned",
            "schema": {
              "$ref": "#/definitions/GroupList"
            },
            "examples": {
              "application/json": {
                "total_records": -21752738,
                "groups": [
                  {
                    "id": "dolor laboris",
                    "name": "proident in reprehenderit dolore",
                    "total_members": 43130642
                  },
                  {
                    "id": "enim",
                    "name": "nostrud cillum dolor",
                    "total_members": -42410938
                  },
                  {
                    "id": "eiusmod ",
                    "name": "dolore id ipsum",
                    "total_members": -42149709
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a group",
        "description": "Create a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "est culpa"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Group created",
            "headers": {
              "Content-Location": {
                "description": "Location of created group",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID"
                },
                "name": {
                  "type": "string",
                  "description": "Group name"
                },
                "total_members": {
                  "type": "integer",
                  "description": "Group member count"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "ea nisi quis",
                "name": "dolore dolor",
                "total_members": -95096463
              }
            }
          }
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "summary": "Retrieve a group",
        "description": "Retrieve a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "group",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "Group object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Group ID"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Group"
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "dolor veniam",
                "name": "voluptate consectetur nulla est",
                "total_members": 14786006
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "patch": {
        "summary": "Update a group",
        "description": "Update a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name. Must be unique in one account. Character length is less than 128."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "adipisicing proident ex"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Group updated"
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a group",
        "description": "Delete a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupDelete",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          }
        ],
        "responses": {
          "204": {
            "description": "Group deleted"
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/groups/{groupId}/members": {
      "get": {
        "summary": "List a group's members",
        "description": "List a group's members under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembers",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Group member list returned",
            "schema": {
              "$ref": "#/definitions/GroupMemberList"
            },
            "examples": {
              "application/json": {
                "page_count": 99294686,
                "page_number": -18275866,
                "page_size": -31425900,
                "total_records": 5090316,
                "members": [
                  {
                    "id": "occaecat proident",
                    "email": "aute quis ullamco in ipsum",
                    "first_name": "qui non",
                    "last_name": "enim esse",
                    "type": 85330872
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      },
      "post": {
        "summary": "Add group members",
        "description": "Add members to a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembersCreate",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "type": "array",
                  "description": "List of Group members",
                  "maximum": 30,
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email. If ID given, email is ignored."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "members": [
                  {
                    "id": "laboris dolor pariatur",
                    "email": "adipisicing"
                  },
                  {
                    "id": "exercitation id sit",
                    "email": "aliqua qui amet"
                  },
                  {
                    "id": "ipsum enim Duis tempor",
                    "email": "mo"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Member added",
            "schema": {
              "properties": {
                "ids": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "magna id Excepteur Lorem reprehenderit",
                "added_at": "1943-07-13T05:26:09.929Z"
              }
            }
          },
          "404": {
            "description": "Group not found"
          }
        }
      }
    },
    "/groups/{groupId}/members/{memberId}": {
      "delete": {
        "summary": "Delete a group member",
        "description": "Delete a member from a group under your account",
        "tags": [
          "Groups"
        ],
        "operationId": "groupMembersDelete",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "$ref": "#/parameters/MemberId"
          }
        ],
        "responses": {
          "204": {
            "description": "Group member deleted"
          },
          "404": {
            "description": "Group or Group member not found"
          }
        }
      }
    },
    "/h323/devices": {
      "get": {
        "summary": "List H.323/SIP Devices.",
        "description": "List H.323/SIP Devices on your Zoom account.",
        "tags": [
          "Devices"
        ],
        "parameters": [],
        "operationId": "deviceList",
        "responses": {
          "200": {
            "description": "List of H.323/SIP Devices returned.",
            "schema": {
              "$ref": "#/definitions/DeviceList"
            },
            "examples": {
              "application/json": {
                "page_count": 42177902,
                "page_number": -77819774,
                "page_size": -68828285,
                "total_records": -76682326,
                "devices": [
                  {
                    "name": "consectet",
                    "protocol": "SIP",
                    "ip": "mollit",
                    "encryption": "auto",
                    "id": "sint tempor Lorem"
                  },
                  {
                    "name": "magna",
                    "protocol": "SIP",
                    "ip": "aliquip cupidatat ea",
                    "encryption": "auto",
                    "id": "commodo qui"
                  },
                  {
                    "name": "non moll",
                    "protocol": "SIP",
                    "ip": "eu in in",
                    "encryption": "no",
                    "id": "nisi quis cillum adipisicing"
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a H.323/SIP Device",
        "description": "Create a H.323/SIP Device on your Zoom account",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "H.323/SIP Device",
            "schema": {
              "$ref": "#/definitions/Device"
            },
            "x-examples": {
              "application/json": {
                "name": "cupidata",
                "protocol": "H.323",
                "ip": "minim",
                "encryption": "no"
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "H.323/SIP Device created",
            "headers": {
              "Content-Location": {
                "description": "Location of created device",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Device ID"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Device"
                }
              ]
            },
            "examples": {
              "application/json": {
                "name": "pari",
                "protocol": "H.323",
                "ip": "est",
                "encryption": "auto",
                "id": "cillum ad"
              }
            }
          }
        }
      }
    },
    "/h323/devices/{deviceId}": {
      "patch": {
        "summary": "Update a H.323/SIP Device",
        "description": "Update a H.323/SIP Device on your Zoom account",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Device"
            },
            "x-examples": {
              "application/json": {
                "name": "in sed ",
                "protocol": "SIP",
                "ip": "quis laboris elit occaecat",
                "encryption": "yes"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "H.323/SIP Device updated"
          },
          "404": {
            "description": "H.323/SIP Device not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a H.323/SIP Device",
        "description": "Delete a H.323/SIP Device on your Zoom account",
        "tags": [
          "Devices"
        ],
        "operationId": "deviceDelete",
        "parameters": [
          {
            "$ref": "#/parameters/DeviceId"
          }
        ],
        "responses": {
          "204": {
            "description": "H.323/SIP Device deleted"
          },
          "404": {
            "description": "H.323/SIP Device not found"
          }
        }
      }
    },
    "/im/groups": {
      "get": {
        "summary": "List IM Groups",
        "description": "List IM groups under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroups",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of IM Groups returned",
            "schema": {
              "$ref": "#/definitions/IMGroupList"
            }
          }
        }
      },
      "post": {
        "summary": "Create an IM Group",
        "description": "Create a IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name, must be unique in one account",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "description": "IM Group type",
                  "default": "normal",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ],
                  "x-enum-descriptions": [
                    "Only members can see the group automatically. Other people can search members in the group.",
                    "All people in the account can see the group and members automatically",
                    "Nobody can see the group or search members except the members in the group"
                  ]
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search others in the same email domain"
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search others under same account"
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search others under same master account, including all sub accounts"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "dolor",
                "type": "normal",
                "search_by_domain": true,
                "search_by_account": true,
                "search_by_ma_account": true
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "IM Group created",
            "headers": {
              "Content-Location": {
                "description": "Location of created IM Group",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Group ID"
                },
                "name": {
                  "type": "string",
                  "description": "Group name"
                },
                "total_members": {
                  "type": "integer",
                  "description": "Group member count"
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search others in the same email domain"
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search others under same account"
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search others under same master account, including all sub accounts"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "dolore id nulla",
                "name": "exercitation culpa",
                "total_members": 91318391,
                "search_by_domain": false,
                "search_by_account": true,
                "search_by_ma_account": true
              }
            }
          }
        }
      }
    },
    "/im/groups/{groupId}": {
      "get": {
        "summary": "Retrieve an IM Group",
        "description": "Retrieve an IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroup",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          }
        ],
        "responses": {
          "200": {
            "description": "IM Group object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Group ID"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/IMGroup"
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "non eiusmod",
                "name": "Lorem qui co",
                "total_members": -20728271,
                "type": "shared",
                "search_by_domain": true,
                "search_by_account": false,
                "search_by_ma_account": false
              }
            }
          },
          "404": {
            "description": "IM Group not found"
          }
        }
      },
      "patch": {
        "summary": "Update an IM Group",
        "description": "Update an IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Group name, must be unique in one account",
                  "maxLength": 128
                },
                "type": {
                  "type": "string",
                  "description": "IM Group type",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ],
                  "x-enum-descriptions": [
                    "Only members can see the group automatically. Other people can search members in the group.",
                    "All people in the account can see the group and members automatically",
                    "Nobody can see the group or search members except the members in the group"
                  ]
                },
                "search_by_domain": {
                  "type": "boolean",
                  "description": "Members can search others in the same email domain"
                },
                "search_by_account": {
                  "type": "boolean",
                  "description": "Members can search others under same account"
                },
                "search_by_ma_account": {
                  "type": "boolean",
                  "description": "Members can search others under same master account, including all sub accounts"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "name": "nu",
                "type": "normal",
                "search_by_domain": false,
                "search_by_account": true,
                "search_by_ma_account": true
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group updated",
            "examples": {}
          },
          "404": {
            "description": "IM Group not found"
          }
        }
      },
      "delete": {
        "summary": "Delete an IM Group",
        "description": "Delete an IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupDelete",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group deleted",
            "examples": {}
          },
          "404": {
            "description": "IM Group not found"
          }
        }
      }
    },
    "/im/groups/{groupId}/members": {
      "get": {
        "summary": "List an IM Group's members",
        "description": "List an IM Group's members under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembers",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "IM Group member list returned",
            "schema": {
              "$ref": "#/definitions/GroupMemberList"
            },
            "examples": {
              "application/json": {
                "page_count": -18482039,
                "page_number": -61003872,
                "page_size": -56972584,
                "total_records": -77846001,
                "members": [
                  {
                    "id": "aliquip esse",
                    "email": "Ut dolor cupidatat culpa ",
                    "first_name": "exercitation la",
                    "last_name": "Duis",
                    "type": -57640300
                  },
                  {
                    "id": "nisi aliqua",
                    "email": "eu irure sint ut",
                    "first_name": "ut nostrud",
                    "last_name": "mollit cillum",
                    "type": 28435740
                  },
                  {
                    "id": "adipisicing consequat e",
                    "email": "Lorem esse",
                    "first_name": "et e",
                    "last_name": "no",
                    "type": -71850203
                  }
                ]
              }
            }
          },
          "404": {
            "description": "IM Group not found"
          }
        }
      },
      "post": {
        "summary": "Add IM Group members",
        "description": "Add members to an IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembersCreate",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "members": {
                  "type": "array",
                  "description": "List of IM Group members",
                  "maximum": 10,
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID"
                      },
                      "email": {
                        "type": "string",
                        "description": "User email. If ID given, email is ignored."
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "members": [
                  {
                    "id": "dolor magna ad id",
                    "email": "reprehenderit sit consequat sint"
                  },
                  {
                    "id": "esse non adipisicing",
                    "email": "aliquip culpa irure"
                  },
                  {
                    "id": "nostrud et ipsum",
                    "email": "do ut proident"
                  },
                  {
                    "id": "qui",
                    "email": "ad ea reprehenderit eiusmod"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Member added",
            "schema": {
              "properties": {
                "ids": {
                  "type": "string"
                },
                "added_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "commodo id sint",
                "added_at": "2003-02-01T02:22:06.910Z"
              }
            }
          },
          "404": {
            "description": "IM Group not found"
          }
        }
      }
    },
    "/im/groups/{groupId}/members/{memberId}": {
      "delete": {
        "summary": "Delete an IM Group member",
        "description": "Delete a member from an IM Group under your account",
        "tags": [
          "IM Groups"
        ],
        "operationId": "imGroupMembersDelete",
        "parameters": [
          {
            "$ref": "#/parameters/GroupId"
          },
          {
            "$ref": "#/parameters/MemberId"
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group member deleted"
          },
          "404": {
            "description": "IM Group or IM Group member not found"
          }
        }
      }
    },
    "/im/chat/sessions": {
      "get": {
        "summary": "Retrieve IM Chat sessions",
        "description": "Retrieve IM Chat sessions for a specified period <aside>This API only supports oauth2.</aside>",
        "tags": [
          "IM Chat"
        ],
        "operationId": "imChatSessions",
        "parameters": [
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Archived IM Chat sessions Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken4IMChat"
                },
                {
                  "properties": {
                    "sessions": {
                      "type": "array",
                      "description": "Array of session objects",
                      "items": {
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "description": "IM Chat session ID"
                          },
                          "type": {
                            "type": "string",
                            "description": "IM Chat session type"
                          },
                          "name": {
                            "type": "string",
                            "description": "Meeting topic"
                          },
                          "last_message_sent_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last message sent time"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "2002-07-24",
                "to": "2003-09-03",
                "page_size": -32569498,
                "next_page_token": "officia est",
                "sessions": [
                  {
                    "session_id": "sit enim ut ipsum velit",
                    "type": "dolor sunt",
                    "name": "dolor dolore",
                    "last_message_sent_time": "1973-05-21T08:02:12.855Z"
                  },
                  {
                    "session_id": "nisi culpa Lorem",
                    "type": "minim voluptate",
                    "name": "aute",
                    "last_message_sent_time": "1942-09-13T03:24:31.637Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/im/chat/sessions/{sessionId}": {
      "get": {
        "summary": "Retrieve IM Chat messages",
        "description": "Retrieve IM Chat messages for a specified period <aside>This API only supports oauth2.</aside>",
        "tags": [
          "IM Chat"
        ],
        "operationId": "imChatMessages",
        "parameters": [
          {
            "$ref": "#/parameters/SessionId"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Archived IM Chat messages Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "session_id": {
                      "type": "string",
                      "description": "IM Chat session ID"
                    },
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken4IMChat"
                },
                {
                  "properties": {
                    "messages": {
                      "type": "array",
                      "description": "Array of session objects",
                      "items": {
                        "properties": {
                          "message": {
                            "type": "string",
                            "description": "IM Chat message content"
                          },
                          "sender": {
                            "type": "string",
                            "description": "IM Chat message sender"
                          },
                          "date_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "IM Chat message sent time"
                          },
                          "action": {
                            "type": "string",
                            "description": "IM Chat message action"
                          },
                          "action_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Action time"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "session_id": "qui dolor officia",
                "from": "2000-04-18",
                "to": "1944-09-03",
                "page_size": -35216805,
                "next_page_token": "tempor Duis",
                "messages": [
                  {
                    "message": "esse enim in culpa",
                    "sender": "qui consequat vel",
                    "date_time": "1982-11-12T09:04:27.908Z",
                    "action": "nisi deserunt",
                    "action_time": "1940-05-15T06:30:07.511Z"
                  },
                  {
                    "message": "eiusmod",
                    "sender": "ex et consectetur",
                    "date_time": "2013-01-15T04:06:13.376Z",
                    "action": "laborum magna",
                    "action_time": "1966-02-18T03:09:31.056Z"
                  },
                  {
                    "message": "aute do non",
                    "sender": "qui tempor id",
                    "date_time": "2011-11-20T23:27:35.079Z",
                    "action": "reprehenderit adipisicing laboris fugiat",
                    "action_time": "1977-08-05T06:01:47.940Z"
                  },
                  {
                    "message": "incididunt tempor",
                    "sender": "incididunt non",
                    "date_time": "1974-08-13T02:45:05.584Z",
                    "action": "Excepteur ad dolore amet",
                    "action_time": "1963-10-06T08:41:44.010Z"
                  },
                  {
                    "message": "laboris commod",
                    "sender": "dolor voluptate amet laborum",
                    "date_time": "1970-04-04T04:28:13.992Z",
                    "action": "fugiat enim",
                    "action_time": "1994-01-03T09:21:54.755Z"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "summary": "List meetings",
        "description": "List meetings for a user",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/MeetingType"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Meeting objects returned",
            "schema": {
              "$ref": "#/definitions/MeetingList"
            },
            "examples": {
              "application/json": {
                "page_count": -31141430,
                "page_number": -94423665,
                "page_size": -10616618,
                "total_records": 94143551,
                "meetings": [
                  {
                    "uuid": "cupidatat",
                    "id": "nulla do ut laboris Excepteur",
                    "host_id": "cillum aliqua",
                    "topic": "ea incididunt dolor irure",
                    "type": 8,
                    "start_time": "1983-10-21T14:27:57.950Z",
                    "duration": 66420134,
                    "timezone": "voluptate dolor",
                    "created_at": "1990-05-27T18:43:55.169Z",
                    "join_url": "irure deserunt culpa ea"
                  },
                  {
                    "uuid": "tempor s",
                    "id": "eu sint",
                    "host_id": "amet dolor ad nisi",
                    "topic": "enim sed ea commodo fugiat",
                    "type": 8,
                    "start_time": "1973-02-16T12:44:54.308Z",
                    "duration": -45948299,
                    "timezone": "sed commodo in",
                    "created_at": "2007-06-29T10:08:14.983Z",
                    "join_url": "ut eu reprehenderit ani"
                  },
                  {
                    "uuid": "incididunt",
                    "id": "do adipisicing ex",
                    "host_id": "non Lorem",
                    "topic": "dolore ex est",
                    "type": 1,
                    "start_time": "1959-06-02T19:36:35.962Z",
                    "duration": -29813398,
                    "timezone": "Ut",
                    "created_at": "1991-09-18T02:29:32.088Z",
                    "join_url": "Duis adipisicing"
                  },
                  {
                    "uuid": "ve",
                    "id": "culpa do in adipis",
                    "host_id": "reprehenderit in pariatur ex fugiat",
                    "topic": "velit mollit ut",
                    "type": 8,
                    "start_time": "1982-04-20T07:37:21.711Z",
                    "duration": -45028465,
                    "timezone": "aliqua consectetur commodo",
                    "created_at": "1995-10-16T02:24:29.726Z",
                    "join_url": "veniam"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "summary": "Create a meeting",
        "description": "Create a meeting for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingCreate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting object",
            "schema": {
              "$ref": "#/definitions/Meeting"
            },
            "x-examples": {
              "application/json": {
                "topic": "ea exercitation sunt non",
                "type": 8,
                "start_time": "1997-12-09T17:40:15.552Z",
                "duration": 70543262,
                "timezone": "anim ipsum",
                "password": "aute sed fugiat",
                "agenda": "ut",
                "recurrence": {
                  "type": 3,
                  "repeat_interval": 30390622,
                  "weekly_days": 6,
                  "monthly_day": 50792742,
                  "monthly_week": 3,
                  "monthly_week_day": 7,
                  "end_times": -48105477,
                  "end_date_time": "1963-03-17T05:07:00.905Z"
                },
                "settings": {
                  "host_video": false,
                  "participant_video": true,
                  "cn_meeting": false,
                  "in_meeting": false,
                  "join_before_host": false,
                  "mute_upon_entry": false,
                  "watermark": false,
                  "use_pmi": false,
                  "approval_type": 0,
                  "registration_type": 2,
                  "audio": "voip",
                  "auto_recording": "none",
                  "enforce_login": false,
                  "enforce_login_domains": "officia reprehenderit occaecat",
                  "alternative_hosts": "ea in"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meeting Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Meeting",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Meeting unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Meeting ID, also known as meeting number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of meeting"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/MeetingInfo"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "eiusmod ex",
                "id": "adipisicing in enim proident est",
                "host_id": "exercitation tempor irure culpa",
                "topic": "laboris",
                "type": 1,
                "start_time": "1975-11-14T22:58:03.672Z",
                "duration": -34937925,
                "timezone": "dolor nisi",
                "created_at": "1981-05-24T11:15:47.161Z",
                "agenda": "consectetur ut sunt",
                "start_url": "magna eu pariatur",
                "join_url": "enim incididunt Duis",
                "password": "Excepteur sint sunt",
                "h323_password": "ut pariatur labore",
                "occurrences": [
                  {
                    "occurrence_id": -26337736,
                    "start_time": "1940-08-08T10:58:18.689Z",
                    "duration": 66221627,
                    "status": "in nisi est"
                  },
                  {
                    "occurrence_id": -41142006,
                    "start_time": "1976-07-25T06:48:11.268Z",
                    "duration": 32892661,
                    "status": "dolore exercitation elit deserunt"
                  },
                  {
                    "occurrence_id": -18140404,
                    "start_time": "1957-05-04T00:31:47.280Z",
                    "duration": -4606436,
                    "status": "veniam consequat consectetur"
                  },
                  {
                    "occurrence_id": 89554950,
                    "start_time": "1993-09-11T09:19:09.920Z",
                    "duration": 82182759,
                    "status": "eiusmod aute ipsum cupidatat velit"
                  },
                  {
                    "occurrence_id": -75221507,
                    "start_time": "1942-07-19T06:43:43.667Z",
                    "duration": 77661563,
                    "status": "Duis ullamco dolor irure"
                  }
                ],
                "settings": {
                  "host_video": true,
                  "participant_video": false,
                  "cn_meeting": true,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": false,
                  "watermark": true,
                  "use_pmi": false,
                  "approval_type": 2,
                  "registration_type": 1,
                  "audio": "both",
                  "auto_recording": "cloud",
                  "enforce_login": true,
                  "enforce_login_domains": "non consectetur magna minim",
                  "alternative_hosts": "reprehenderit magna enim"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/meetings/{meetingId}": {
      "get": {
        "summary": "Retrieve a meeting",
        "description": "Retrieve a meeting's details",
        "tags": [
          "Meetings"
        ],
        "operationId": "meeting",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Meeting unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Meeting ID, also know as meeting number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of meeting"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/MeetingInfo"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "eu elit",
                "id": "in pariatur",
                "host_id": "eiusmod est consectetur",
                "topic": "nisi",
                "type": 2,
                "start_time": "1940-11-22T23:39:43.664Z",
                "duration": -59464063,
                "timezone": "dolor in sit esse do",
                "created_at": "1955-07-29T07:01:25.335Z",
                "agenda": "eiusmod veniam pariatur",
                "start_url": "aliqua occaecat cupidatat sint ullamco",
                "join_url": "in sit",
                "password": "dolor dolore sit commodo",
                "h323_password": "id adipisic",
                "occurrences": [
                  {
                    "occurrence_id": 97835394,
                    "start_time": "1956-11-14T05:43:56.392Z",
                    "duration": 67085601,
                    "status": "labore dolor Duis "
                  },
                  {
                    "occurrence_id": -33556873,
                    "start_time": "1999-03-30T05:00:24.016Z",
                    "duration": -32133732,
                    "status": "quis irure Ut do"
                  }
                ],
                "settings": {
                  "host_video": true,
                  "participant_video": false,
                  "cn_meeting": true,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": true,
                  "watermark": true,
                  "use_pmi": true,
                  "approval_type": 2,
                  "registration_type": 2,
                  "audio": "both",
                  "auto_recording": "local",
                  "enforce_login": true,
                  "enforce_login_domains": "elit incididunt cupidatat id magna",
                  "alternative_hosts": "voluptate adipisicing"
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "patch": {
        "summary": "Update a meeting",
        "description": "Update a meeting's details",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "$ref": "#/definitions/MeetingUpdate"
            },
            "x-examples": {
              "application/json": {
                "topic": "proident ut",
                "type": 2,
                "start_time": "1950-12-20T15:59:13.523Z",
                "duration": 98873635,
                "timezone": "et irure",
                "password": "exercitation ",
                "agenda": "deserunt anim dolore",
                "recurrence": {
                  "type": 2,
                  "repeat_interval": 2757627,
                  "weekly_days": 2,
                  "monthly_day": -50987495,
                  "monthly_week": 1,
                  "monthly_week_day": 3,
                  "end_times": -21115567,
                  "end_date_time": "2003-11-11T02:19:15.389Z"
                },
                "settings": {
                  "host_video": true,
                  "participant_video": true,
                  "cn_meeting": false,
                  "in_meeting": false,
                  "join_before_host": true,
                  "mute_upon_entry": false,
                  "watermark": false,
                  "use_pmi": true,
                  "approval_type": 1,
                  "registration_type": 3,
                  "audio": "voip",
                  "auto_recording": "none",
                  "enforce_login": true,
                  "enforce_login_domains": "aliqua id pariatur do",
                  "alternative_hosts": "dolor adipisicing minim Lorem",
                  "registrants_confirmation_email": false
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting Updated"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a meeting",
        "description": "Delete a meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingDelete",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting deleted"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/status": {
      "put": {
        "summary": "Update a meeting's status",
        "description": "Update a meeting's status",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingStatus",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "end"
                  ],
                  "x-enum-descriptions": [
                    "end a meeting"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "end"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting updated"
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants": {
      "get": {
        "summary": "List a meeting's registrants",
        "description": "List registrants of a meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrants",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          },
          {
            "$ref": "#/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/MeetingRegistrantList"
            },
            "examples": {
              "application/json": {
                "page_count": -93267536,
                "page_size": -1526752,
                "total_records": -92551308,
                "next_page_token": "",
                "registrants": [
                  {
                    "email": "elit do",
                    "first_name": "est incididunt proident",
                    "last_name": "fugiat aliqua dolore eiusmod",
                    "id": "non irure qui ut",
                    "address": "ea ipsum deserunt proident sed",
                    "city": "commodo sed",
                    "country": "in ullamco nisi",
                    "zip": "ea dolor",
                    "state": "ut Duis",
                    "phone": "nostrud",
                    "industry": "nisi magna in qui",
                    "org": "proident adipisicing esse",
                    "job_title": "Ut",
                    "purchasing_time_frame": "More than 6 months",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "1-20",
                    "comments": "officia amet",
                    "custom_questions": [
                      {
                        "title": "amet deserunt ut",
                        "value": "nisi aliquip"
                      },
                      {
                        "title": "nisi ipsum",
                        "value": "commodo eiusmod minim non"
                      },
                      {
                        "title": "dolore",
                        "value": "sunt veniam"
                      },
                      {
                        "title": "eu ven",
                        "value": "Duis"
                      }
                    ],
                    "status": "cupidatat",
                    "create_time": "1940-05-12T23:27:16.214Z",
                    "join_url": "deserunt elit"
                  },
                  {
                    "email": "reprehenderit magna",
                    "first_name": "ipsum sunt tempor",
                    "last_name": "cillum culpa",
                    "id": "occaecat sunt aliqua",
                    "address": "quis anim",
                    "city": "sit dolor qui",
                    "country": "mollit",
                    "zip": "nulla Duis exercitation",
                    "state": "reprehenderit",
                    "phone": "id incididunt",
                    "industry": "laboris",
                    "org": "laborum consequat veniam officia incididunt",
                    "job_title": "cillum aliquip dolor",
                    "purchasing_time_frame": "4-6 months",
                    "role_in_purchase_process": "Not involved",
                    "no_of_employees": "21-50",
                    "comments": "si",
                    "custom_questions": [
                      {
                        "title": "dolor Lorem",
                        "value": "reprehenderit eiusmod ullamco sunt"
                      },
                      {
                        "title": "in qui consequat culpa eu",
                        "value": "adipisicing nulla"
                      }
                    ],
                    "status": "occaecat ipsum Duis quis",
                    "create_time": "2011-01-01T08:51:55.196Z",
                    "join_url": "sunt nisi"
                  },
                  {
                    "email": "tempor Lorem nulla occaecat",
                    "first_name": "consequat i",
                    "last_name": "in mollit eu",
                    "id": "officia ea eiusmod",
                    "address": "id aute ut",
                    "city": "amet deserunt dolor proident",
                    "country": "ea dolor",
                    "zip": "ex sunt enim",
                    "state": "labore sunt",
                    "phone": "ut deserunt reprehenderit",
                    "industry": "amet elit esse dolore",
                    "org": "anim culpa laborum",
                    "job_title": "cillum occaecat",
                    "purchasing_time_frame": "1-3 months",
                    "role_in_purchase_process": "Influencer",
                    "no_of_employees": "500-1,000",
                    "comments": "nulla in",
                    "custom_questions": [
                      {
                        "title": "no",
                        "value": "in nulla do pariatur aliqua"
                      },
                      {
                        "title": "ex Lorem sed nostrud aliquip",
                        "value": "aliqua non do in"
                      },
                      {
                        "title": "eu voluptate ex",
                        "value": "sit velit"
                      },
                      {
                        "title": "occaecat cillum proident",
                        "value": "esse Duis velit aliquip"
                      }
                    ],
                    "status": "officia mollit dolore non ipsum",
                    "create_time": "1998-07-17T02:50:52.209Z",
                    "join_url": "culpa labore consequat"
                  },
                  {
                    "email": "dolor dolore",
                    "first_name": "est ad officia",
                    "last_name": "et sed tempor",
                    "id": "ut pariatur labore",
                    "address": "laboris consequat veniam commodo",
                    "city": "in est irure",
                    "country": "laboris dolor reprehenderit dolore sunt",
                    "zip": "tempor voluptate",
                    "state": "dolor eu ex Excepteur",
                    "phone": "ullamco magna anim fugiat dolore",
                    "industry": "nulla deserunt",
                    "org": "laborum sed",
                    "job_title": "irure in esse",
                    "purchasing_time_frame": "More than 6 months",
                    "role_in_purchase_process": "Not involved",
                    "no_of_employees": "21-50",
                    "comments": "elit ullamco non",
                    "custom_questions": [
                      {
                        "title": "veniam magna cillum occaecat ipsum",
                        "value": "mollit"
                      },
                      {
                        "title": "consectetur incididunt sint ut mollit",
                        "value": "sed dolore"
                      }
                    ],
                    "status": "proident anim",
                    "create_time": "2010-03-11T00:09:22.605Z",
                    "join_url": "proi"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      },
      "post": {
        "summary": "Add a meeting registrant",
        "description": "Register a participant for a meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantCreate",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "in": "query",
            "name": "occurrence_ids",
            "type": "string",
            "description": "Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MeetingRegistrant"
            },
            "x-examples": {
              "application/json": {
                "email": "dolor",
                "first_name": "fugiat Ut minim",
                "last_name": "sed et ut",
                "address": "sit voluptate laborum",
                "city": "Lorem tempor laborum pariatur irure",
                "country": "non elit minim",
                "zip": "qui anim reprehenderit",
                "state": "Lorem quis",
                "phone": "velit voluptate esse",
                "industry": "adipisicing officia aliqua",
                "org": "enim et",
                "job_title": "reprehenderit do sed labore",
                "purchasing_time_frame": "4-6 months",
                "role_in_purchase_process": "Influencer",
                "no_of_employees": "51-100",
                "comments": "Duis aute anim ipsum Ut",
                "custom_questions": [
                  {
                    "title": "in consectetur Lorem consequat",
                    "value": "culpa"
                  },
                  {
                    "title": "mollit",
                    "value": "Ut"
                  },
                  {
                    "title": "est aliqua",
                    "value": "ullamco qui"
                  },
                  {
                    "title": "ut",
                    "value": "anim nisi ullamco id"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "type": "object",
              "properties": {
                "registrant_id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "topic": {
                  "type": "string",
                  "description": "Topic"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this registrant"
                }
              }
            },
            "examples": {
              "application/json": {
                "registrant_id": "sit aliquip",
                "id": "dolor",
                "topic": "est aliquip si",
                "start_time": "1985-07-03T18:39:25.573Z",
                "join_url": "amet labore occaecat cupidatat"
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/registrants/status": {
      "put": {
        "summary": "Update a meeting registrant's status",
        "description": "Update a meeting registrant's status",
        "tags": [
          "Meetings"
        ],
        "operationId": "meetingRegistrantStatus",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegistrantStatus"
            },
            "x-examples": {
              "application/json": {
                "action": "approve",
                "registrants": [
                  {
                    "id": "anim laborum qui mollit",
                    "email": "dolor velit"
                  },
                  {
                    "id": "esse aliqua commodo",
                    "email": "Excepteur fugiat proident qui laboris"
                  },
                  {
                    "id": "enim anim consequat deserunt",
                    "email": "ea Excepteur adipisicing"
                  },
                  {
                    "id": "dolore adipisicing",
                    "email": "proident sed fugia"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Meeting or Registrant not found"
          }
        }
      }
    },
    "/past_meetings/{meetingUUID}": {
      "get": {
        "summary": "Retrieve past meeting details",
        "description": "Retrieve ended meeting details",
        "tags": [
          "Meetings"
        ],
        "operationId": "pastMeetingDetails",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingUUID"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting detail Returned",
            "schema": {
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID"
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "host_id": {
                  "type": "integer",
                  "description": "Host ID"
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type"
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic"
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name"
                },
                "user_email": {
                  "type": "string",
                  "description": "User email"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time"
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time"
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration"
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Number of meeting minutes"
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants"
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "pariatur",
                "id": 50302897,
                "host_id": -82813465,
                "type": 49600783,
                "topic": "aliqua sit et minim",
                "user_name": "labore commodo quis veniam",
                "user_email": "consequat incididunt dolor",
                "start_time": "1983-11-09T04:12:54.460Z",
                "end_time": "1975-02-05T22:44:51.700Z",
                "duration": -63857886,
                "total_minutes": 49695843,
                "participants_count": 70948862
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/past_meetings/{meetingUUID}/participants": {
      "get": {
        "summary": "Retrieve past meeting participants",
        "description": "Retrieve ended meeting participants",
        "tags": [
          "Meetings"
        ],
        "operationId": "pastMeetingParticipants",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingUUID"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of meeting participant objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": -63178312,
                "page_size": -94329188,
                "total_records": -2988550,
                "next_page_token": "velit id sunt aute",
                "participants": [
                  {
                    "id": "culpa est",
                    "name": "pariatur aliquip consectetur"
                  },
                  {
                    "id": "sed eiusmod minim nostrud",
                    "name": "sunt non"
                  },
                  {
                    "id": "in et voluptate",
                    "name": "fugiat dolore ut"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/users/{userId}/recordings": {
      "get": {
        "summary": "List all the recordings",
        "description": "List all the recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingsList",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          },
          {
            "$ref": "#/parameters/Mc"
          },
          {
            "$ref": "#/parameters/Trash"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Recording objects returned",
            "schema": {
              "$ref": "#/definitions/RecordingMeetingList"
            },
            "examples": {
              "application/json": {
                "from": "2014-01-30",
                "to": "1957-06-12",
                "page_count": 42357587,
                "page_size": -60828507,
                "total_records": 31942550,
                "next_page_token": "proident Ut ad",
                "meetings": [
                  {
                    "uuid": "occaecat aute",
                    "id": "sint exercitation nostrud aut",
                    "account_id": "cupidatat incididunt",
                    "host_id": "ea in",
                    "topic": "aliqua et ea eiusmod",
                    "start_time": "2005-10-23T14:48:27.683Z",
                    "duration": -75510487,
                    "total_size": "e",
                    "recording_count": "labore sint culpa",
                    "recording_files": [
                      {
                        "id": "veniam sed laborum",
                        "meeting_id": "dolore sunt in aute dolore",
                        "recording_start": "qui in nostrud",
                        "recording_end": "aute amet commodo",
                        "file_type": "et esse",
                        "file_size": -18575824.08637868,
                        "play_url": "ci",
                        "download_url": "cu",
                        "status": "incididu",
                        "deleted_time": "ipsum do id",
                        "recording_type": "ad"
                      },
                      {
                        "id": "cupidatat eu exercitation aute",
                        "meeting_id": "cupidatat",
                        "recording_start": "dolor",
                        "recording_end": "mollit",
                        "file_type": "in est Lorem",
                        "file_size": -27295143.180355057,
                        "play_url": "do ea",
                        "download_url": "aliquip ea laborum",
                        "status": "culpa nisi in",
                        "deleted_time": "qui incididunt",
                        "recording_type": "ex in"
                      }
                    ]
                  },
                  {
                    "uuid": "exercitation aliquip deserunt",
                    "id": "exercitation fugiat ut aliquip",
                    "account_id": "Lorem in nostrud",
                    "host_id": "amet et pariatur in voluptate",
                    "topic": "nulla voluptate ex",
                    "start_time": "1987-07-07T19:42:51.063Z",
                    "duration": 32268429,
                    "total_size": "est",
                    "recording_count": "dolor irure",
                    "recording_files": [
                      {
                        "id": "commodo do qui",
                        "meeting_id": "ullamco ad in ea nulla",
                        "recording_start": "aute enim",
                        "recording_end": "in cillum fugiat Ut",
                        "file_type": "sed officia",
                        "file_size": -47703131.8084042,
                        "play_url": "irure magna veniam cupidatat",
                        "download_url": "Ut amet anim",
                        "status": "labore",
                        "deleted_time": "",
                        "recording_type": "amet in ad"
                      }
                    ]
                  },
                  {
                    "uuid": "adipisic",
                    "id": "ut aliquip nisi",
                    "account_id": "esse",
                    "host_id": "tempor qui nulla",
                    "topic": "id nostrud ipsum",
                    "start_time": "1949-06-24T02:58:37.520Z",
                    "duration": -73669573,
                    "total_size": "sint minim",
                    "recording_count": "pariatur in velit ea elit",
                    "recording_files": [
                      {
                        "id": "et sint ipsum minim",
                        "meeting_id": "anim sed",
                        "recording_start": "culpa veniam velit",
                        "recording_end": "dolor non Ut",
                        "file_type": "Excepteur nisi sunt adipisicing in",
                        "file_size": -54192136.897972554,
                        "play_url": "officia eu est",
                        "download_url": "commodo adipisicing sit consectetur",
                        "status": "commodo laboris consectetur anim",
                        "deleted_time": "voluptate proident reprehend",
                        "recording_type": "adipisicing velit veniam "
                      },
                      {
                        "id": "sit quis",
                        "meeting_id": "reprehenderit mollit",
                        "recording_start": "aliquip",
                        "recording_end": "sint mollit deserunt",
                        "file_type": "cillum quis in",
                        "file_size": -81466770.96594448,
                        "play_url": "sint ad cillum",
                        "download_url": "E",
                        "status": "veniam sunt",
                        "deleted_time": "deserunt commodo ullamco",
                        "recording_type": "cupidatat et ut sit"
                      },
                      {
                        "id": "ad reprehenderit dolor commodo",
                        "meeting_id": "dolore dolor nisi",
                        "recording_start": "dolore Lorem laboris Duis",
                        "recording_end": "aliquip mollit cillum eiusmod",
                        "file_type": "consectetur do exercitation",
                        "file_size": -14292938.694867477,
                        "play_url": "sit exercitation ipsum anim laborum",
                        "download_url": "consectetur deserunt anim",
                        "status": "esse commodo",
                        "deleted_time": "aliqua do",
                        "recording_type": "mollit veniam voluptate"
                      },
                      {
                        "id": "adipisicing anim",
                        "meeting_id": "tempor mollit ut laboris magna",
                        "recording_start": "reprehenderit e",
                        "recording_end": "nisi ut",
                        "file_type": "ipsum elit in ex velit",
                        "file_size": 81064611.7633537,
                        "play_url": "proident occaecat cu",
                        "download_url": "Lorem est nisi",
                        "status": "esse laborum",
                        "deleted_time": "ea pariatur exercitation",
                        "recording_type": "eu magna proident Duis"
                      },
                      {
                        "id": "occaecat anim fugiat velit eu",
                        "meeting_id": "ipsum",
                        "recording_start": "id aliqua eiusmod",
                        "recording_end": "irure sunt",
                        "file_type": "enim laboris laborum",
                        "file_size": -88915706.84329219,
                        "play_url": "anim amet",
                        "download_url": "commodo",
                        "status": "reprehenderit sint in",
                        "deleted_time": "esse",
                        "recording_type": "aliqua nisi"
                      }
                    ]
                  },
                  {
                    "uuid": "laborum velit irure minim",
                    "id": "velit Excepteur reprehenderit officia",
                    "account_id": "Duis ipsum qui",
                    "host_id": "cupidatat",
                    "topic": "d",
                    "start_time": "1999-11-15T01:59:07.373Z",
                    "duration": 91650157,
                    "total_size": "quis commodo dolore",
                    "recording_count": "eu exercitation laboris",
                    "recording_files": [
                      {
                        "id": "laborum ipsum pa",
                        "meeting_id": "qui id sunt ea",
                        "recording_start": "ut nostrud",
                        "recording_end": "minim eu labore",
                        "file_type": "laboris reprehenderit",
                        "file_size": -33333272.587708198,
                        "play_url": "enim",
                        "download_url": "in esse culpa occaecat",
                        "status": "enim ex cu",
                        "deleted_time": "eiusmod do occaecat est",
                        "recording_type": "Duis cillum culpa do"
                      },
                      {
                        "id": "esse nostrud enim labore occaecat",
                        "meeting_id": "incididunt veniam sint ea",
                        "recording_start": "elit amet aute tempor",
                        "recording_end": "sint eu",
                        "file_type": "tempor fugiat ullamco",
                        "file_size": -98344370.92109005,
                        "play_url": "ipsum officia",
                        "download_url": "nulla exerci",
                        "status": "labori",
                        "deleted_time": "eu id laborum",
                        "recording_type": "laboris incididunt minim pariatur sed"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/recordings": {
      "get": {
        "summary": "Retrieve a meeting’s all recordings",
        "description": "Retrieve a meeting’s all recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingGet",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Recording"
          }
        ],
        "responses": {
          "200": {
            "description": "Recording object returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/RecordingMeeting"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "sint minim sit dolor fugiat",
                "id": "sint ipsum",
                "account_id": "elit dolor non",
                "host_id": "cillum reprehenderit proident",
                "topic": "aliquip aute ",
                "start_time": "1944-05-05T11:25:36.712Z",
                "duration": 19784598,
                "total_size": "cillum",
                "recording_count": "consectetur dolor",
                "recording_files": [
                  {
                    "id": "Duis in dolore consecte",
                    "meeting_id": "Excepteur consequat adipisicing",
                    "recording_start": "culpa consectetur ullamco deserunt ad",
                    "recording_end": "Ut in minim",
                    "file_type": "minim dolore veniam",
                    "file_size": 16806727.07497856,
                    "play_url": "laboris cupidatat nisi proident iru",
                    "download_url": "laboris irure sed tempor",
                    "status": "eu do",
                    "deleted_time": "et culpa",
                    "recording_type": "amet eu officia esse"
                  },
                  {
                    "id": "officia culpa dolor tempor Duis",
                    "meeting_id": "magna nisi aliqua",
                    "recording_start": "culpa quis",
                    "recording_end": "et laboris nisi aliquip",
                    "file_type": "ullamco esse consequat",
                    "file_size": 47298021.441847324,
                    "play_url": "tempor sed ullamco mollit",
                    "download_url": "esse pariatur dolore",
                    "status": "aliqua in",
                    "deleted_time": "enim commodo ad ut est",
                    "recording_type": "sed et eiusmod amet"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Meeting recording not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a meeting's recordings",
        "description": "Delete a meeting's recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDelete",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording deleted"
          },
          "404": {
            "description": "Meeting recording not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}": {
      "delete": {
        "summary": "Delete one meeting recording file",
        "description": "Delete one meeting recording file",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingDeleteOne",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/parameters/RecordingId"
          },
          {
            "$ref": "#/parameters/RecordingDeleteAction"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording file deleted"
          },
          "404": {
            "description": "Meeting recording file not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/recordings/status": {
      "put": {
        "summary": "Recover a meeting's recordings",
        "description": "Recover a meeting's recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Recording"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "recover"
                  ],
                  "x-enum-descriptions": [
                    "recover meeting recording"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "recover"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording recover",
            "examples": {}
          },
          "404": {
            "description": "Meeting recording not found"
          }
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}/status": {
      "put": {
        "summary": "Recover a single recording",
        "description": "Recover a single recording",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "recordingStatusUpdateOne",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Recording"
          },
          {
            "$ref": "#/parameters/RecordingId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "recover"
                  ],
                  "x-enum-descriptions": [
                    "recover meeting recording"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "recover"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording recover"
          },
          "404": {
            "description": "Meeting recording not found"
          }
        }
      }
    },
    "/metrics/meetings": {
      "get": {
        "summary": "List meetings",
        "description": "List live meetings or past meetings for a specified period",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetings",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingTypePast"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meetings Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "Array of meeting objects",
                      "items": {
                        "$ref": "#/definitions/MeetingMetric"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1963-06-29",
                "to": "1978-06-28",
                "page_count": 89358457,
                "page_size": -55651943,
                "total_records": 58600971,
                "next_page_token": "ipsum sunt",
                "meetings": [
                  {
                    "uuid": "aliqua",
                    "id": -20217742,
                    "topic": "laboris",
                    "host": "ut sunt",
                    "email": "culpa cillum",
                    "user_type": "commodo nostrud",
                    "start_time": "1983-02-07T03:53:47.253Z",
                    "end_time": "1940-08-19T14:12:05.375Z",
                    "duration": "non sit dolor",
                    "participants": -75214832,
                    "has_pstn": true,
                    "has_voip": true,
                    "has_3rd_party_audio": false,
                    "has_video": false,
                    "has_screen_share": true,
                    "has_recording": false,
                    "has_sip": true
                  },
                  {
                    "uuid": "Lorem sunt commodo est labore",
                    "id": 61065933,
                    "topic": "aute ven",
                    "host": "aliqua cillum",
                    "email": "dolore eu in",
                    "user_type": "sit",
                    "start_time": "1971-09-26T18:45:04.824Z",
                    "end_time": "1954-03-17T18:07:24.963Z",
                    "duration": "sed commodo aliquip sit",
                    "participants": -42063218,
                    "has_pstn": false,
                    "has_voip": true,
                    "has_3rd_party_audio": true,
                    "has_video": true,
                    "has_screen_share": true,
                    "has_recording": true,
                    "has_sip": true
                  },
                  {
                    "uuid": "et incididunt a",
                    "id": 25594710,
                    "topic": "id laboru",
                    "host": "exercitation Excepteur",
                    "email": "Lorem",
                    "user_type": "incididunt qui enim nisi in",
                    "start_time": "2015-11-24T07:26:43.845Z",
                    "end_time": "1963-01-27T02:26:11.023Z",
                    "duration": "adipisicing sit",
                    "participants": -10686166,
                    "has_pstn": false,
                    "has_voip": false,
                    "has_3rd_party_audio": true,
                    "has_video": false,
                    "has_screen_share": true,
                    "has_recording": true,
                    "has_sip": false
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}": {
      "get": {
        "summary": "Retrieve meeting detail",
        "description": "Retrieve live or past meetings detail",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingDetail",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/MeetingTypePast3"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Returned",
            "schema": {
              "$ref": "#/definitions/MeetingMetric"
            },
            "examples": {
              "application/json": {
                "uuid": "culpa",
                "id": 27768125,
                "topic": "Ut labore",
                "host": "sit eiusmod tempor do dolor",
                "email": "sed in ull",
                "user_type": "culpa exercitation eiusmod",
                "start_time": "1991-11-02T21:28:39.925Z",
                "end_time": "1996-04-05T07:12:33.722Z",
                "duration": "ut irure mollit ex",
                "participants": 54357108,
                "has_pstn": true,
                "has_voip": false,
                "has_3rd_party_audio": true,
                "has_video": false,
                "has_screen_share": false,
                "has_recording": true,
                "has_sip": true
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants": {
      "get": {
        "summary": "Retrieve meeting participants",
        "description": "Retrieve live or past meetings participants",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipants",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/MeetingTypePast3"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "device": {
                            "type": "string",
                            "description": "Participant device"
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant IP Address"
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant location"
                          },
                          "network_type": {
                            "type": "string",
                            "description": "Participant network type"
                          },
                          "microphone": {
                            "type": "string",
                            "description": "Participant microphone"
                          },
                          "speaker": {
                            "type": "string",
                            "description": "Participant speaker"
                          },
                          "data_center": {
                            "type": "string",
                            "description": "Participant data center"
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "Participant connection type"
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time"
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time"
                          },
                          "share_application": {
                            "type": "boolean",
                            "description": "Did participant share application"
                          },
                          "share_desktop": {
                            "type": "boolean",
                            "description": "Did participant share desktop"
                          },
                          "share_whiteboard": {
                            "type": "boolean",
                            "description": "Did participant share whiteboard"
                          },
                          "recording": {
                            "type": "boolean",
                            "description": "Participant record"
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Participant PC name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant domain"
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant MAC Address"
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant hard disk id"
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant version"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": -91903223,
                "page_size": -18830945,
                "total_records": -76059905,
                "next_page_token": "sunt cil",
                "participants": [
                  {
                    "id": "Excepteur",
                    "user_id": "id amet",
                    "user_name": "ex voluptate sed fugiat",
                    "device": "laborum minim",
                    "ip_address": "sint et incididunt mollit",
                    "location": "consectetur exercitation",
                    "network_type": "non laboris nulla Duis",
                    "microphone": "Duis aliqua cupidatat eu ullamco",
                    "speaker": "cillum amet",
                    "data_center": "proident aliqua",
                    "connection_type": "elit anim laborum sit oc",
                    "join_time": "1959-02-17T21:21:43.942Z",
                    "leave_time": "1983-09-02T18:53:19.056Z",
                    "share_application": true,
                    "share_desktop": false,
                    "share_whiteboard": false,
                    "recording": false,
                    "pc_name": "in ipsum mollit",
                    "domain": "consequat",
                    "mac_addr": "reprehenderit ea ut deserunt esse",
                    "harddisk_id": "irure anim",
                    "version": "in laborum cupidatat"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/{participantId}/qos": {
      "get": {
        "summary": "Retrieve meeting participant QOS",
        "description": "Retrieve live or past meetings participant quality of service",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantQOS",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/ParticipantId"
          },
          {
            "$ref": "#/parameters/MeetingTypePast2"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participant QOS Returned",
            "schema": {
              "$ref": "#/definitions/QOSParticipant"
            },
            "examples": {
              "application/json": {
                "user_id": "nisi ea",
                "user_name": "eu Excepteur officia enim",
                "device": "adipisicing irure consect",
                "ip_address": "deserunt esse anim",
                "location": "repr",
                "join_time": "1951-06-01T10:58:12.001Z",
                "leave_time": "2007-03-12T15:01:20.093Z",
                "pc_name": "fugiat ullamco sit",
                "domain": "sed elit irure mollit",
                "mac_addr": "commodo sunt",
                "harddisk_id": "voluptate elit ex irure",
                "version": "cupidatat reprehenderi",
                "user_qos": {
                  "date_time": "1953-12-22T04:27:08.148Z",
                  "audio_input": {
                    "bitrate": "aute elit officia nisi",
                    "latency": "non enim",
                    "jitter": "amet in Excepteur",
                    "avg_loss": "eiusmod ullamco sint magna in",
                    "max_loss": "deserunt nisi irure non"
                  },
                  "audio_output": {
                    "bitrate": "elit labore",
                    "latency": "n",
                    "jitter": "est dolore",
                    "avg_loss": "exercitation Ut",
                    "max_loss": "sunt eiu"
                  },
                  "video_input": {
                    "bitrate": "irure minim occaecat",
                    "latency": "quis sint nulla aliqua Excepteur",
                    "jitter": "elit aute proident sunt",
                    "avg_loss": "cillum eu sed officia",
                    "max_loss": "ut in ea nulla",
                    "resolution": "laborum quis aliquip",
                    "frame_rate": "qui mollit s"
                  },
                  "video_output": {
                    "bitrate": "eiusmod nostrud aliqua",
                    "latency": "nulla Excepteur",
                    "jitter": "reprehenderit dolore do",
                    "avg_loss": "tempor dolore reprehenderit consequat",
                    "max_loss": "irure et sunt eu ea",
                    "resolution": "ani",
                    "frame_rate": "elit amet et dolor"
                  },
                  "as_input": {
                    "bitrate": "nisi incididunt id nulla",
                    "latency": "dolor labore",
                    "jitter": "id esse Duis ei",
                    "avg_loss": "deserunt commodo incididunt Excepteur et",
                    "max_loss": "eu quis dolor do fugiat",
                    "resolution": "consequat ut amet",
                    "frame_rate": "reprehenderit"
                  },
                  "as_output": {
                    "bitrate": "mollit veniam est",
                    "latency": "ad aliquip nisi esse",
                    "jitter": "dolor enim Lorem aute ut",
                    "avg_loss": "in esse aliquip sunt",
                    "max_loss": "dolor labore",
                    "resolution": "Excepteur nisi est",
                    "frame_rate": "cillum magna"
                  },
                  "cpu_usage": {
                    "zoom_min_cpu_usage": "in ad aute",
                    "zoom_avg_cpu_usage": "id",
                    "zoom_max_cpu_usage": "commodo exercitation eu",
                    "system_max_cpu_usage": "eu culpa"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/qos": {
      "get": {
        "summary": "List meeting participants QOS",
        "description": "Retrieve list of live or past meetings participants quality of service",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantsQOS",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/MeetingTypePast2"
          },
          {
            "$ref": "#/parameters/PageSize4Qos"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "$ref": "#/definitions/QOSParticipantList"
            },
            "examples": {
              "application/json": {
                "page_count": 3653052,
                "page_size": -93978268,
                "total_records": -51668457,
                "next_page_token": "aliqua officia",
                "participants": [
                  {
                    "user_id": "velit cupidatat fugiat magna",
                    "user_name": "velit consequat voluptate",
                    "device": "aliquip minim",
                    "ip_address": "proident inc",
                    "location": "minim reprehenderit anim elit",
                    "join_time": "1949-07-10T21:40:39.816Z",
                    "leave_time": "1975-09-26T05:49:04.406Z",
                    "pc_name": "ad consectetur amet esse magna",
                    "domain": "reprehenderit laborum nostrud quis",
                    "mac_addr": "aute dolor offic",
                    "harddisk_id": "quis",
                    "version": "magna voluptate",
                    "user_qos": {
                      "date_time": "1941-03-10T14:21:24.622Z",
                      "audio_input": {
                        "bitrate": "incididunt fugiat et ipsum",
                        "latency": "anim",
                        "jitter": "velit in consequat",
                        "avg_loss": "eiusmod",
                        "max_loss": "Duis nisi enim qui"
                      },
                      "audio_output": {
                        "bitrate": "voluptate",
                        "latency": "officia minim aliqua",
                        "jitter": "commodo dolore do",
                        "avg_loss": "esse qui dolore sit",
                        "max_loss": "ipsum Lorem incididunt amet"
                      },
                      "video_input": {
                        "bitrate": "eiusmod irure ea nostrud",
                        "latency": "reprehenderit ipsum ad",
                        "jitter": "in",
                        "avg_loss": "volup",
                        "max_loss": "occaecat",
                        "resolution": "ipsum irure do",
                        "frame_rate": "labore commodo nulla elit cupidatat"
                      },
                      "video_output": {
                        "bitrate": "ullamco ad sint aliquip",
                        "latency": "pariatur dolore consequat ipsum",
                        "jitter": "sint adipisicing",
                        "avg_loss": "Ut nisi culpa consectetur",
                        "max_loss": "Ut non null",
                        "resolution": "officia aliquip",
                        "frame_rate": "in minim"
                      },
                      "as_input": {
                        "bitrate": "enim cupidatat",
                        "latency": "sint",
                        "jitter": "magna e",
                        "avg_loss": "sed pariatur irure veniam aliqua",
                        "max_loss": "occaecat id ad",
                        "resolution": "ea consequat ut incididunt",
                        "frame_rate": "en"
                      },
                      "as_output": {
                        "bitrate": "aliquip",
                        "latency": "in esse",
                        "jitter": "laboris velit",
                        "avg_loss": "enim consectetur",
                        "max_loss": "nisi incididunt nulla",
                        "resolution": "tempor commodo qui est reprehenderit",
                        "frame_rate": "est nulla in aliqua Excepteur"
                      },
                      "cpu_usage": {
                        "zoom_min_cpu_usage": "nulla est",
                        "zoom_avg_cpu_usage": "minim sunt dolore non",
                        "zoom_max_cpu_usage": "nostrud commodo ea sed",
                        "system_max_cpu_usage": "commodo est ut Duis"
                      }
                    }
                  },
                  {
                    "user_id": "occaecat ut non nostrud est",
                    "user_name": "mollit est nostrud id",
                    "device": "laboris pariatur aliquip reprehenderit Lorem",
                    "ip_address": "et dolor Excepteur",
                    "location": "proident irure",
                    "join_time": "1944-11-06T15:01:32.375Z",
                    "leave_time": "1993-05-13T14:14:52.284Z",
                    "pc_name": "dolore voluptate reprehenderit",
                    "domain": "aliqua labore enim non pariatur",
                    "mac_addr": "proident elit adipisicing dolore",
                    "harddisk_id": "irure labore nostrud elit voluptate",
                    "version": "voluptate proident ",
                    "user_qos": {
                      "date_time": "1988-04-05T16:43:31.494Z",
                      "audio_input": {
                        "bitrate": "magna",
                        "latency": "ut in",
                        "jitter": "id labore ut laborum",
                        "avg_loss": "Lorem aute do",
                        "max_loss": "culpa mollit dolor Duis"
                      },
                      "audio_output": {
                        "bitrate": "reprehenderit eu",
                        "latency": "proident cillum ut dolore",
                        "jitter": "elit minim",
                        "avg_loss": "ad cup",
                        "max_loss": "ut consectetur qui commodo"
                      },
                      "video_input": {
                        "bitrate": "ut enim sint",
                        "latency": "incididunt pariatur",
                        "jitter": "ullamco sit ea elit",
                        "avg_loss": "ullamco dolore mollit eiusmod Lorem",
                        "max_loss": "ea cupidatat culpa cillum",
                        "resolution": "culpa nisi aliquip",
                        "frame_rate": "nulla"
                      },
                      "video_output": {
                        "bitrate": "nulla minim",
                        "latency": "de",
                        "jitter": "velit id sed incididunt",
                        "avg_loss": "ea ipsum in",
                        "max_loss": "adipisicing deserunt eiusmod",
                        "resolution": "sint proident in su",
                        "frame_rate": "Except"
                      },
                      "as_input": {
                        "bitrate": "ea reprehenderit Duis commodo",
                        "latency": "et magna minim",
                        "jitter": "ea sint anim Lorem",
                        "avg_loss": "enim Duis ea anim",
                        "max_loss": "cupidatat esse ea deser",
                        "resolution": "ad dolore",
                        "frame_rate": "dolore amet eiusmod d"
                      },
                      "as_output": {
                        "bitrate": "enim in dolore",
                        "latency": "ipsum reprehenderit aute",
                        "jitter": "ut cupidatat ",
                        "avg_loss": "aliqua esse nulla laborum dolore",
                        "max_loss": "laboris laborum culpa",
                        "resolution": "mollit consequat qui laboris",
                        "frame_rate": "labore cillum ea ut"
                      },
                      "cpu_usage": {
                        "zoom_min_cpu_usage": "voluptate nostrud Lorem",
                        "zoom_avg_cpu_usage": "consequat dolore culpa deserunt",
                        "zoom_max_cpu_usage": "aliquip nulla dolore",
                        "system_max_cpu_usage": "reprehenderit in velit nostrud"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/sharing": {
      "get": {
        "summary": "Retrieve sharing/recording details of meeting participant",
        "description": "Retrieve sharing/recording details of live or past meetings participant",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardMeetingParticipantShare",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/MeetingTypePast2"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of participants",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "details": {
                            "type": "array",
                            "description": "Array of sharing and recording details",
                            "items": {
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "description": "Type of content shared"
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Start time of sharing"
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "End time of sharing"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 63749386,
                "page_size": -19946363,
                "total_records": 11640828,
                "next_page_token": "velit qui",
                "participants": [
                  {
                    "id": "tempor",
                    "user_id": "amet nostrud",
                    "user_name": "consectetur quis nulla",
                    "details": [
                      {
                        "content": "non pariatur nulla proident",
                        "start_time": "Duis non exercitat",
                        "end_time": "qui proident occaecat"
                      }
                    ]
                  },
                  {
                    "id": "e",
                    "user_id": "dolore Excepteur quis dolor",
                    "user_name": "magna proident s",
                    "details": [
                      {
                        "content": "ipsum quis ad",
                        "start_time": "elit incididunt",
                        "end_time": "ad amet dolor Lorem"
                      },
                      {
                        "content": "occaecat nulla veniam dolore",
                        "start_time": "eu voluptate",
                        "end_time": "cillum aliqua aute nisi eiusmod"
                      }
                    ]
                  },
                  {
                    "id": "exercitation quis",
                    "user_id": "ipsum non dolore ad",
                    "user_name": "fugiat culpa tempor Excepteur ut",
                    "details": [
                      {
                        "content": "exercitation laboris ullamco",
                        "start_time": "aliqua Excepteur commodo",
                        "end_time": "proident enim aliqua"
                      },
                      {
                        "content": "quis culpa",
                        "start_time": "reprehenderit irure deseru",
                        "end_time": "do aliqua"
                      },
                      {
                        "content": "quis",
                        "start_time": "sunt culpa",
                        "end_time": "et esse anim"
                      }
                    ]
                  },
                  {
                    "id": "dolor dolore",
                    "user_id": "sunt reprehenderit",
                    "user_name": "cillum",
                    "details": [
                      {
                        "content": "cillum in",
                        "start_time": "Ex",
                        "end_time": "exercitation ut occaecat"
                      },
                      {
                        "content": "Excepteur",
                        "start_time": "fugiat eu labore id",
                        "end_time": "et voluptate sit veniam"
                      },
                      {
                        "content": "cillum",
                        "start_time": "culpa dolor ",
                        "end_time": "aliqua"
                      },
                      {
                        "content": "reprehenderit quis ut ut",
                        "start_time": "minim sint nulla",
                        "end_time": "laboris"
                      }
                    ]
                  },
                  {
                    "id": "nisi laborum",
                    "user_id": "pariatur in incididu",
                    "user_name": "eu reprehenderit sunt dolor",
                    "details": [
                      {
                        "content": "quis deserunt consectetur do",
                        "start_time": "ex deserunt dolore esse",
                        "end_time": "quis minim"
                      },
                      {
                        "content": "enim in",
                        "start_time": "est ullamco Lorem",
                        "end_time": "mollit exercitation"
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/webinars": {
      "get": {
        "summary": "List webinars",
        "description": "List live webinars or past webinars for a specified period",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinars",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarTypePast"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meetings Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "webinars": {
                      "type": "array",
                      "description": "Array of webinar objects",
                      "items": {
                        "$ref": "#/definitions/WebinarMetric"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1979-01-27",
                "to": "2003-11-21",
                "page_count": -23289325,
                "page_size": -31208129,
                "total_records": -70392162,
                "next_page_token": "nulla voluptate ad",
                "webinars": [
                  {
                    "uuid": "est veniam in",
                    "id": -75148010,
                    "topic": "laboris nisi sed ea in",
                    "host": "labore in ipsum",
                    "email": "in Excepteur ex officia",
                    "user_type": "dolor",
                    "start_time": "2003-06-29T04:58:05.023Z",
                    "end_time": "2003-09-25T15:06:51.074Z",
                    "duration": "sit in id",
                    "participants": 3503096,
                    "has_pstn": false,
                    "has_voip": false,
                    "has_3rd_party_audio": false,
                    "has_video": false,
                    "has_screen_share": true,
                    "has_recording": true,
                    "has_sip": true
                  },
                  {
                    "uuid": "ad Excepteur ullamco",
                    "id": -74025730,
                    "topic": "cupidatat",
                    "host": "sint",
                    "email": "qui sit nisi dolore aliquip",
                    "user_type": "anim esse",
                    "start_time": "1989-08-01T15:21:50.809Z",
                    "end_time": "1994-08-18T14:44:11.135Z",
                    "duration": "minim",
                    "participants": 79615105,
                    "has_pstn": false,
                    "has_voip": false,
                    "has_3rd_party_audio": true,
                    "has_video": false,
                    "has_screen_share": true,
                    "has_recording": false,
                    "has_sip": false
                  },
                  {
                    "uuid": "aute reprehenderit magna veniam esse",
                    "id": -67327630,
                    "topic": "sint sed",
                    "host": "cupidatat ",
                    "email": "aliquip",
                    "user_type": "quis in proident",
                    "start_time": "2001-06-09T06:27:16.151Z",
                    "end_time": "2006-05-24T20:34:49.731Z",
                    "duration": "nulla do",
                    "participants": 99821541,
                    "has_pstn": false,
                    "has_voip": true,
                    "has_3rd_party_audio": false,
                    "has_video": true,
                    "has_screen_share": true,
                    "has_recording": false,
                    "has_sip": true
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}": {
      "get": {
        "summary": "Retrieve webinar detail",
        "description": "Retrieve live  or past webinars detail",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarDetail",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/WebinarTypePast2"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Returned",
            "schema": {
              "$ref": "#/definitions/WebinarMetric"
            },
            "examples": {
              "application/json": {
                "uuid": "aliqua irure voluptate",
                "id": 54414928,
                "topic": "incididunt sunt",
                "host": "dolore ex tempor",
                "email": "Ut ipsum consequat",
                "user_type": "ea sunt dolore laborum",
                "start_time": "2014-07-30T03:52:58.612Z",
                "end_time": "1996-11-04T03:08:13.796Z",
                "duration": "amet aute eiusmod esse",
                "participants": -44768622,
                "has_pstn": false,
                "has_voip": true,
                "has_3rd_party_audio": true,
                "has_video": false,
                "has_screen_share": true,
                "has_recording": false,
                "has_sip": false
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants": {
      "get": {
        "summary": "Retrieve webinar participants",
        "description": "Retrieve live or past webinar participants",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipants",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of user objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "device": {
                            "type": "string",
                            "description": "Participant device"
                          },
                          "ip_address": {
                            "type": "string",
                            "description": "Participant IP Address"
                          },
                          "location": {
                            "type": "string",
                            "description": "Participant location"
                          },
                          "network_type": {
                            "type": "string",
                            "description": "Participant network type"
                          },
                          "microphone": {
                            "type": "string",
                            "description": "Participant microphone"
                          },
                          "speaker": {
                            "type": "string",
                            "description": "Participant speaker"
                          },
                          "data_center": {
                            "type": "string",
                            "description": "Participant data center"
                          },
                          "connection_type": {
                            "type": "string",
                            "description": "Participant connection type"
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time"
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time"
                          },
                          "share_application": {
                            "type": "boolean",
                            "description": "Did participant share application"
                          },
                          "share_desktop": {
                            "type": "boolean",
                            "description": "Did participant share desktop"
                          },
                          "share_whiteboard": {
                            "type": "boolean",
                            "description": "Did participant share whiteboard"
                          },
                          "recording": {
                            "type": "boolean",
                            "description": "Participant record"
                          },
                          "pc_name": {
                            "type": "string",
                            "description": "Participant PC name"
                          },
                          "domain": {
                            "type": "string",
                            "description": "Participant domain"
                          },
                          "mac_addr": {
                            "type": "string",
                            "description": "Participant MAC Address"
                          },
                          "harddisk_id": {
                            "type": "string",
                            "description": "Participant hard disk id"
                          },
                          "version": {
                            "type": "string",
                            "description": "Participant version"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": -7703537,
                "page_size": -10406683,
                "total_records": -46271182,
                "next_page_token": "elit aliqua dolo",
                "participants": [
                  {
                    "id": "voluptate dolor ad dolore Duis",
                    "user_id": "dolor",
                    "user_name": "voluptate reprehenderit dolor",
                    "device": "sunt in ullamco voluptate",
                    "ip_address": "mollit aliqua reprehenderit nisi",
                    "location": "officia",
                    "network_type": "ad Ut aliqua",
                    "microphone": "qui eu",
                    "speaker": "laboris",
                    "data_center": "ea velit dolore",
                    "connection_type": "ullamco nostrud",
                    "join_time": "1971-04-16T21:44:39.518Z",
                    "leave_time": "1973-08-24T20:44:52.600Z",
                    "share_application": true,
                    "share_desktop": true,
                    "share_whiteboard": true,
                    "recording": true,
                    "pc_name": "dolor ipsum",
                    "domain": "sit dolor",
                    "mac_addr": "dolor ut est",
                    "harddisk_id": "dolor",
                    "version": "laboris cillum"
                  },
                  {
                    "id": "sed magna adipisicing mi",
                    "user_id": "id in sit sunt ex",
                    "user_name": "elit nostrud labore",
                    "device": "sed Excepteur in non eiusmod",
                    "ip_address": "esse sunt ullamco aute sint",
                    "location": "esse deserunt do nulla enim",
                    "network_type": "sunt voluptate",
                    "microphone": "anim",
                    "speaker": "anim consectetur veniam eiusmod",
                    "data_center": "exercitation commodo aute officia do",
                    "connection_type": "adipisicing aute mollit qui",
                    "join_time": "1944-01-24T10:51:29.322Z",
                    "leave_time": "1992-08-22T02:56:40.808Z",
                    "share_application": true,
                    "share_desktop": false,
                    "share_whiteboard": false,
                    "recording": false,
                    "pc_name": "eu enim",
                    "domain": "reprehenderit",
                    "mac_addr": "est Duis",
                    "harddisk_id": "enim ad cillum",
                    "version": "aute tempor"
                  },
                  {
                    "id": "nisi incididunt et",
                    "user_id": "Ut aliqua ",
                    "user_name": "mollit nisi proident q",
                    "device": "Duis ex reprehenderit sunt est",
                    "ip_address": "Lorem sint in",
                    "location": "amet in",
                    "network_type": "ut",
                    "microphone": "quis veniam",
                    "speaker": "elit proident dolor Ut",
                    "data_center": "in ut deserunt in",
                    "connection_type": "Lorem",
                    "join_time": "1981-07-30T05:53:00.911Z",
                    "leave_time": "1984-03-01T18:11:54.813Z",
                    "share_application": false,
                    "share_desktop": false,
                    "share_whiteboard": true,
                    "recording": false,
                    "pc_name": "qui cupidatat ad sed",
                    "domain": "dolore dolore",
                    "mac_addr": "dolor",
                    "harddisk_id": "consectetur laborum",
                    "version": "dolor aliquip id Ut et"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/{participantId}/qos": {
      "get": {
        "summary": "Retrieve webinar participant QOS",
        "description": "Retrieve live or past webinar participant quality of service",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantQOS",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/ParticipantId"
          },
          {
            "$ref": "#/parameters/WebinarTypePast2"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participant QOS Returned",
            "schema": {
              "$ref": "#/definitions/QOSParticipant"
            },
            "examples": {
              "application/json": {
                "user_id": "et laborum",
                "user_name": "aute",
                "device": "sit labore Duis et",
                "ip_address": "eu aliqua",
                "location": "ipsum laboris",
                "join_time": "2016-02-12T00:42:27.310Z",
                "leave_time": "1967-01-31T19:52:35.870Z",
                "pc_name": "est nulla eu aliqua",
                "domain": "ipsum sed ani",
                "mac_addr": "magna nostrud fugiat",
                "harddisk_id": "qui esse id proident",
                "version": "officia tempor elit",
                "user_qos": {
                  "date_time": "1970-08-22T02:55:44.565Z",
                  "audio_input": {
                    "bitrate": "cupidatat voluptate",
                    "latency": "dolore non",
                    "jitter": "dolore consectetur",
                    "avg_loss": "ea velit aliquip fugiat dolor",
                    "max_loss": "Lorem"
                  },
                  "audio_output": {
                    "bitrate": "reprehenderit aliqua",
                    "latency": "laborum voluptate",
                    "jitter": "dolore nulla",
                    "avg_loss": "do consequat et",
                    "max_loss": "sint pariatur commodo irure"
                  },
                  "video_input": {
                    "bitrate": "ad",
                    "latency": "culpa laboris laborum sit",
                    "jitter": "Ut deserunt dolor irure dolore",
                    "avg_loss": "pariatur amet",
                    "max_loss": "do officia qui",
                    "resolution": "nisi ex",
                    "frame_rate": "aliqua incididunt"
                  },
                  "video_output": {
                    "bitrate": "et minim sed",
                    "latency": "dolor",
                    "jitter": "cillum elit",
                    "avg_loss": "ea",
                    "max_loss": "dolore",
                    "resolution": "in sunt",
                    "frame_rate": "consequat fugiat sit voluptate"
                  },
                  "as_input": {
                    "bitrate": "ut ex eu",
                    "latency": "Excepteur ea laboris",
                    "jitter": "ut ea",
                    "avg_loss": "adipisici",
                    "max_loss": "esse deserunt",
                    "resolution": "Duis reprehenderit consequat sint quis",
                    "frame_rate": "ipsum velit voluptate non occae"
                  },
                  "as_output": {
                    "bitrate": "reprehenderit Duis pariatur",
                    "latency": "sunt eu Excepteur",
                    "jitter": "ad occaecat",
                    "avg_loss": "ex",
                    "max_loss": "aute in esse et ipsum",
                    "resolution": "dolor deserunt",
                    "frame_rate": "non"
                  },
                  "cpu_usage": {
                    "zoom_min_cpu_usage": "eu nostrud sunt labore",
                    "zoom_avg_cpu_usage": "dolor et commodo nisi",
                    "zoom_max_cpu_usage": "nulla veniam",
                    "system_max_cpu_usage": "ullamco aliquip Ut elit"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/qos": {
      "get": {
        "summary": "List webinar participant QOS",
        "description": "Retrieve list of live or past webinar participants quality of service",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantsQOS",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/parameters/PageSize4Qos"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "$ref": "#/definitions/QOSParticipantList"
            },
            "examples": {
              "application/json": {
                "page_count": 64734924,
                "page_size": -27087081,
                "total_records": -43607313,
                "next_page_token": "eiusmod laboris",
                "participants": [
                  {
                    "user_id": "dolore sed velit anim eiusmod",
                    "user_name": "velit ut non proident",
                    "device": "officia ut",
                    "ip_address": "cillum in",
                    "location": "tempor",
                    "join_time": "1976-03-11T09:57:14.348Z",
                    "leave_time": "2013-04-27T07:06:35.412Z",
                    "pc_name": "officia est",
                    "domain": "ad",
                    "mac_addr": "irure anim Duis aliqua ea",
                    "harddisk_id": "enim",
                    "version": "dolore dolore",
                    "user_qos": {
                      "date_time": "1992-03-29T07:09:26.868Z",
                      "audio_input": {
                        "bitrate": "minim commodo",
                        "latency": "ad",
                        "jitter": "qui labore culpa in",
                        "avg_loss": "aliquip sunt eu exercitation",
                        "max_loss": "et do dolore"
                      },
                      "audio_output": {
                        "bitrate": "consectetur adipisicing aliqua",
                        "latency": "in Ut non incididunt labore",
                        "jitter": "irure qui sit consequat",
                        "avg_loss": "id proident do",
                        "max_loss": "dol"
                      },
                      "video_input": {
                        "bitrate": "Excepteur labore paria",
                        "latency": "laboris eu",
                        "jitter": "enim",
                        "avg_loss": "laborum officia ullamco",
                        "max_loss": "Excepteur ea",
                        "resolution": "officia velit",
                        "frame_rate": "ipsum dolor ut"
                      },
                      "video_output": {
                        "bitrate": "veniam laborum",
                        "latency": "ea do ex",
                        "jitter": "est irure co",
                        "avg_loss": "ea Duis id mollit ",
                        "max_loss": "nisi Excepteur consequat",
                        "resolution": "et Lorem reprehenderit",
                        "frame_rate": "Lorem ad"
                      },
                      "as_input": {
                        "bitrate": "ad dolore",
                        "latency": "in nostrud eu",
                        "jitter": "laborum enim",
                        "avg_loss": "labore",
                        "max_loss": "Duis",
                        "resolution": "Excepteur consequat incididunt",
                        "frame_rate": "ullamco voluptate Ut veniam do"
                      },
                      "as_output": {
                        "bitrate": "officia",
                        "latency": "in dolore velit sunt",
                        "jitter": "dolore enim",
                        "avg_loss": "qui",
                        "max_loss": "sed dolore commodo",
                        "resolution": "fugiat dolore",
                        "frame_rate": "quis reprehenderit nisi Excepteur"
                      },
                      "cpu_usage": {
                        "zoom_min_cpu_usage": "qu",
                        "zoom_avg_cpu_usage": "in laboris minim qui",
                        "zoom_max_cpu_usage": "qui",
                        "system_max_cpu_usage": "officia Duis ullamco"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/sharing": {
      "get": {
        "summary": "Retrieve sharing/recording details of webinar participant",
        "description": "Retrieve sharing/recording details of live or past webinar participant",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardWebinarParticipantShare",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/WebinarTypePast2"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of participants",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "details": {
                            "type": "array",
                            "description": "Array of sharing and recording details",
                            "items": {
                              "properties": {
                                "content": {
                                  "type": "string",
                                  "description": "Type of content shared"
                                },
                                "start_time": {
                                  "type": "string",
                                  "description": "Start time of sharing"
                                },
                                "end_time": {
                                  "type": "string",
                                  "description": "End time of sharing"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 31809037,
                "page_size": -30911064,
                "total_records": 63124711,
                "next_page_token": "reprehenderit dolor amet",
                "participants": [
                  {
                    "id": "reprehenderit laborum dolor fugiat ex",
                    "user_id": "minim dolor fugiat dolor esse",
                    "user_name": "proident elit aliqua sed ullamco",
                    "details": [
                      {
                        "content": "ad",
                        "start_time": "aliqui",
                        "end_time": "adipisicing dolore exercitation"
                      },
                      {
                        "content": "do ullamco in",
                        "start_time": "Lorem ex ad dolor",
                        "end_time": "mollit eu veniam consequat"
                      },
                      {
                        "content": "nisi officia",
                        "start_time": "voluptate enim Duis do ipsum",
                        "end_time": "in fugiat irure voluptate"
                      },
                      {
                        "content": "occaecat laboris",
                        "start_time": "sit cillum",
                        "end_time": "et enim dolore Ut aliqua"
                      }
                    ]
                  },
                  {
                    "id": "ex pariatur incididunt minim",
                    "user_id": "fugiat esse exercitati",
                    "user_name": "in tempor",
                    "details": [
                      {
                        "content": "est anim magna",
                        "start_time": "labore veniam",
                        "end_time": "occaecat velit aliqua"
                      },
                      {
                        "content": "dolor ex ut",
                        "start_time": "sit officia velit Excepteur voluptate",
                        "end_time": "consequa"
                      },
                      {
                        "content": "aute velit et sunt",
                        "start_time": "quis",
                        "end_time": "culpa dolor"
                      },
                      {
                        "content": "deserunt officia velit ipsum",
                        "start_time": "dolor i",
                        "end_time": "Excepteur cupidatat velit aliqua"
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/zoomrooms": {
      "get": {
        "summary": "List Zoom Rooms",
        "description": "List all zoom rooms on account",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardZoomRooms",
        "parameters": [
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Zoom Rooms returned",
            "schema": {
              "$ref": "#/definitions/ZoomRoomList"
            },
            "examples": {
              "application/json": {
                "page_count": -68185973,
                "page_number": 25474190,
                "page_size": -354004,
                "total_records": 63102137,
                "zoom_rooms": [
                  {
                    "id": "Lorem et",
                    "room_name": "exer",
                    "calender_name": "adipisicing irure id",
                    "email": "minim consequat nostrud",
                    "account_type": "irure proident",
                    "status": "deserunt ullamco ut nostrud mollit",
                    "device_ip": "cillum do",
                    "camera": "non consequat",
                    "microphone": "eiusm",
                    "speaker": "Duis voluptate in sint",
                    "last_start_time": "sed ullamco"
                  },
                  {
                    "id": "dolor aute adipisicing minim",
                    "room_name": "dolor sed in aliquip",
                    "calender_name": "culpa tempor aliquip consectetur",
                    "email": "amet pariatur esse",
                    "account_type": "enim cupidatat sunt",
                    "status": "culpa dolor Ut enim aute",
                    "device_ip": "ex cupidatat dolore occaecat",
                    "camera": "proident incididunt Ut enim nisi",
                    "microphone": "Lorem sit laborum eiusmod",
                    "speaker": "dolore aute",
                    "last_start_time": "nisi minim"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/zoomrooms/{zoomroomId}": {
      "get": {
        "summary": "Retrieve Zoom Room",
        "description": "Retrieve zoom room on account",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardZoomRoom",
        "parameters": [
          {
            "$ref": "#/parameters/ZoomRoomId"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Zoom Room returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/ZoomRoom"
                },
                {
                  "properties": {
                    "live_meeting": {
                      "$ref": "#/definitions/MeetingMetric"
                    },
                    "past_meetings": {
                      "type": "object",
                      "allOf": [
                        {
                          "properties": {
                            "from": {
                              "type": "string",
                              "format": "date",
                              "description": "Start date for this report"
                            },
                            "to": {
                              "type": "string",
                              "format": "date",
                              "description": "End date for this report"
                            }
                          }
                        },
                        {
                          "$ref": "#/definitions/PaginationToken"
                        },
                        {
                          "properties": {
                            "meetings": {
                              "type": "array",
                              "description": "Array of meeting objects",
                              "items": {
                                "$ref": "#/definitions/MeetingMetric"
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "id": "mollit",
                "room_name": "velit exercitation voluptate quis",
                "calender_name": "laborum tempor aliquip",
                "email": "id commodo",
                "account_type": "laboris minim",
                "status": "dolor dolore ex aute",
                "device_ip": "nulla esse officia",
                "camera": "laboris Duis",
                "microphone": "culpa",
                "speaker": "Duis commodo aliqua anim ",
                "last_start_time": "ex reprehenderit qui non adipisicing",
                "live_meeting": {
                  "uuid": "voluptate anim tempor",
                  "id": 57345016,
                  "topic": "sint",
                  "host": "Excepteur aliqua nostrud",
                  "email": "Ut dolor ad",
                  "user_type": "adipisicing qui et aute ullamco",
                  "start_time": "1969-05-23T21:10:57.458Z",
                  "end_time": "1967-07-15T17:56:06.494Z",
                  "duration": "dolor occaecat",
                  "participants": 81634785,
                  "has_pstn": false,
                  "has_voip": true,
                  "has_3rd_party_audio": false,
                  "has_video": true,
                  "has_screen_share": false,
                  "has_recording": true,
                  "has_sip": false
                },
                "past_meetings": {
                  "from": "1951-11-16",
                  "to": "1960-03-27",
                  "page_count": -22420266,
                  "page_size": -48472688,
                  "total_records": -24804561,
                  "next_page_token": "in sed laboris",
                  "meetings": [
                    {
                      "uuid": "enim cupidatat eiusmod officia la",
                      "id": -68914399,
                      "topic": "ipsum cillum",
                      "host": "ad",
                      "email": "labore sed id",
                      "user_type": "consequat fugiat incididunt aute",
                      "start_time": "1974-03-01T07:17:39.955Z",
                      "end_time": "1943-03-17T11:57:51.342Z",
                      "duration": "ut occaecat exercitation officia quis",
                      "participants": 66814769,
                      "has_pstn": false,
                      "has_voip": true,
                      "has_3rd_party_audio": true,
                      "has_video": false,
                      "has_screen_share": true,
                      "has_recording": true,
                      "has_sip": false
                    },
                    {
                      "uuid": "in ea",
                      "id": 20479232,
                      "topic": "anim deserunt ad irure",
                      "host": "officia elit culpa",
                      "email": "ut non nostrud laboris ex",
                      "user_type": "enim",
                      "start_time": "1966-02-08T13:29:36.716Z",
                      "end_time": "1975-02-23T22:59:47.741Z",
                      "duration": "minim deserunt non in",
                      "participants": -57108140,
                      "has_pstn": false,
                      "has_voip": false,
                      "has_3rd_party_audio": false,
                      "has_video": true,
                      "has_screen_share": true,
                      "has_recording": false,
                      "has_sip": false
                    },
                    {
                      "uuid": "fugiat sunt laboris",
                      "id": -16557977,
                      "topic": "ullamco Duis fugiat in",
                      "host": "mollit dolore laborum",
                      "email": "",
                      "user_type": "consectetur",
                      "start_time": "2002-12-04T15:12:41.009Z",
                      "end_time": "1972-03-14T00:49:58.782Z",
                      "duration": "culpa Lorem ut",
                      "participants": 73527907,
                      "has_pstn": true,
                      "has_voip": false,
                      "has_3rd_party_audio": false,
                      "has_video": true,
                      "has_screen_share": false,
                      "has_recording": true,
                      "has_sip": true
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/metrics/crc": {
      "get": {
        "summary": "Retrieve CRC Port Usage",
        "description": "Get CRC Port usage hour by hour for a specified time period <aside class='notice'>We will report a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is \"2017-10-10\" we will adjust \"from\" to \"2017-09-10\"</aside>.",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardCRC",
        "parameters": [
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          }
        ],
        "responses": {
          "200": {
            "description": "CRC Usage returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "properties": {
                    "crc_ports_usage": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "date_time": {
                            "type": "string",
                            "description": "Date and time"
                          },
                          "crc_ports_hour_usage": {
                            "type": "array",
                            "items": {
                              "properties": {
                                "hour": {
                                  "type": "string"
                                },
                                "max_usage": {
                                  "type": "integer"
                                },
                                "total_usage": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1986-07-18",
                "to": "1984-11-05",
                "crc_ports_usage": [
                  {
                    "date_time": "in incid",
                    "crc_ports_hour_usage": [
                      {
                        "hour": "est id sit nisi",
                        "max_usage": -4959920,
                        "total_usage": 34487083
                      },
                      {
                        "hour": "elit non ullamco in",
                        "max_usage": -3950526,
                        "total_usage": -60588475
                      }
                    ]
                  },
                  {
                    "date_time": "veniam consectetur reprehenderit",
                    "crc_ports_hour_usage": [
                      {
                        "hour": "enim amet ut sit",
                        "max_usage": 14965023,
                        "total_usage": -54485395
                      },
                      {
                        "hour": "sunt culpa",
                        "max_usage": 18297986,
                        "total_usage": 15696300
                      },
                      {
                        "hour": "adipisicing dolor Duis",
                        "max_usage": 475079,
                        "total_usage": 22844688
                      }
                    ]
                  },
                  {
                    "date_time": "do mollit dolore",
                    "crc_ports_hour_usage": [
                      {
                        "hour": "deserunt in",
                        "max_usage": -48886220,
                        "total_usage": 41461868
                      },
                      {
                        "hour": "sit irure id ut",
                        "max_usage": 44666383,
                        "total_usage": 65267250
                      },
                      {
                        "hour": "ipsum",
                        "max_usage": 7762108,
                        "total_usage": -97052959
                      },
                      {
                        "hour": "irure magna laboris enim",
                        "max_usage": -76826353,
                        "total_usage": -43917075
                      }
                    ]
                  },
                  {
                    "date_time": "consequat mollit",
                    "crc_ports_hour_usage": [
                      {
                        "hour": "dolore proident",
                        "max_usage": 32380382,
                        "total_usage": 28710201
                      },
                      {
                        "hour": "laboris ipsum ad anim",
                        "max_usage": -22101243,
                        "total_usage": 55496717
                      }
                    ]
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/metrics/im": {
      "get": {
        "summary": "Retrieve IM",
        "description": "Retrieve metrics of Zoom IM",
        "tags": [
          "Dashboards"
        ],
        "operationId": "dashboardIM",
        "parameters": [
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "IM setails returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "users": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "User ID"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name"
                          },
                          "email": {
                            "type": "string",
                            "description": "User email"
                          },
                          "total_send": {
                            "type": "integer"
                          },
                          "total_receive": {
                            "type": "integer"
                          },
                          "group_send": {
                            "type": "integer"
                          },
                          "group_receive": {
                            "type": "integer"
                          },
                          "calls_send": {
                            "type": "integer"
                          },
                          "calls_receive": {
                            "type": "integer"
                          },
                          "files_send": {
                            "type": "integer"
                          },
                          "files_receive": {
                            "type": "integer"
                          },
                          "images_send": {
                            "type": "integer"
                          },
                          "images_receive": {
                            "type": "integer"
                          },
                          "voice_send": {
                            "type": "integer"
                          },
                          "voice_receive": {
                            "type": "integer"
                          },
                          "videos_send": {
                            "type": "integer"
                          },
                          "videos_receive": {
                            "type": "integer"
                          },
                          "emoji_send": {
                            "type": "integer"
                          },
                          "emoji_receive": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1994-03-17",
                "to": "2006-03-01",
                "page_count": -33583399,
                "page_size": -51741752,
                "total_records": 50846677,
                "next_page_token": "cillum mollit",
                "users": [
                  {
                    "user_id": "cillum",
                    "user_name": "fugiat voluptate ullamco an",
                    "email": "et qui",
                    "total_send": -59221740,
                    "total_receive": 49868667,
                    "group_send": 568264,
                    "group_receive": -96778790,
                    "calls_send": -76883073,
                    "calls_receive": 41389430,
                    "files_send": 20398707,
                    "files_receive": -62056103,
                    "images_send": 96964179,
                    "images_receive": 71897424,
                    "voice_send": 53522118,
                    "voice_receive": 48013435,
                    "videos_send": 34309052,
                    "videos_receive": 76518430,
                    "emoji_send": -99753551,
                    "emoji_receive": -14251495
                  },
                  {
                    "user_id": "velit ut",
                    "user_name": "voluptate id enim",
                    "email": "aute nostrud ",
                    "total_send": -29129537,
                    "total_receive": -86650200,
                    "group_send": -63568030,
                    "group_receive": 4315939,
                    "calls_send": -27556238,
                    "calls_receive": 75554956,
                    "files_send": -81683937,
                    "files_receive": -80920239,
                    "images_send": 89900155,
                    "images_receive": -40000782,
                    "voice_send": -2326576,
                    "voice_receive": 23782570,
                    "videos_send": -6797465,
                    "videos_receive": -51978762,
                    "emoji_send": -96228564,
                    "emoji_receive": -75193153
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/report/daily": {
      "get": {
        "summary": "Retrieve daily report",
        "description": "Retrieve daily report for one month, can only get daily report for recent 6 months",
        "tags": [
          "Reports"
        ],
        "operationId": "reportDaily",
        "parameters": [
          {
            "in": "query",
            "name": "year",
            "description": "Year for this report",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "month",
            "description": "Month for this report",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Daily Report Returned",
            "schema": {
              "properties": {
                "year": {
                  "type": "integer",
                  "description": "Year for this report"
                },
                "month": {
                  "type": "integer",
                  "description": "Month for this report"
                },
                "dates": {
                  "type": "array",
                  "description": "Array of date objects",
                  "items": {
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "description": "Date for this object"
                      },
                      "new_users": {
                        "type": "integer",
                        "description": "Number of new users on this date"
                      },
                      "meetings": {
                        "type": "integer",
                        "description": "Number of meetings on this date"
                      },
                      "participants": {
                        "type": "integer",
                        "description": "Number of participants on this date"
                      },
                      "meeting_minutes": {
                        "type": "integer",
                        "description": "Number of meeting minutes on this date"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "year": 40798230,
                "month": -98893358,
                "dates": [
                  {
                    "date": "1986-03-02",
                    "new_users": -74458799,
                    "meetings": -32469630,
                    "participants": -50569722,
                    "meeting_minutes": 26045365
                  },
                  {
                    "date": "1964-07-04",
                    "new_users": -79204113,
                    "meetings": 83012212,
                    "participants": -51405091,
                    "meeting_minutes": -59471681
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/report/users": {
      "get": {
        "summary": "Retrieve hosts report",
        "description": "Retrieve active or inactive hosts report for a specified period",
        "tags": [
          "Reports"
        ],
        "operationId": "reportUsers",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Active hosts or inactive hosts",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ],
            "x-enum-descriptions": [
              "Active hosts",
              "Inactive hosts"
            ]
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Active/Inactive Hosts Report Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Pagination"
                },
                {
                  "properties": {
                    "total_meetings": {
                      "type": "integer",
                      "description": "Number of meetings for this range"
                    },
                    "total_participants": {
                      "type": "integer",
                      "description": "Number of participants for this range"
                    },
                    "total_meeting_minutes": {
                      "type": "integer",
                      "description": "Number of meeting minutes for this range"
                    },
                    "users": {
                      "type": "array",
                      "description": "Array of user objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "User ID"
                          },
                          "email": {
                            "type": "string",
                            "description": "User email"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name"
                          },
                          "type": {
                            "type": "integer",
                            "description": "User type"
                          },
                          "dept": {
                            "type": "string",
                            "description": "User department"
                          },
                          "meetings": {
                            "type": "integer",
                            "description": "Number of meetings for user"
                          },
                          "participants": {
                            "type": "integer",
                            "description": "Number of participants in meetings for user"
                          },
                          "meeting_minutes": {
                            "type": "integer",
                            "description": "Number of meeting minutes for user"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1971-03-29",
                "to": "1963-12-20",
                "page_count": -14265392,
                "page_number": -99740531,
                "page_size": -61073407,
                "total_records": -13236328,
                "total_meetings": 30763545,
                "total_participants": -63476260,
                "total_meeting_minutes": -88959569,
                "users": [
                  {
                    "id": "esse sunt",
                    "email": "eu fugiat",
                    "user_name": "do",
                    "type": 26224152,
                    "dept": "reprehenderit mollit labore",
                    "meetings": -86183299,
                    "participants": -39276154,
                    "meeting_minutes": -10882836
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/report/users/{userId}/meetings": {
      "get": {
        "summary": "Retrieve meetings report",
        "description": "Retrieve ended meetings report for a specified period",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Active/Inactive Hosts Report Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "meetings": {
                      "type": "array",
                      "description": "Array of meeting objects",
                      "items": {
                        "properties": {
                          "uuid": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Meeting UUID"
                          },
                          "id": {
                            "type": "integer",
                            "description": "Meeting ID"
                          },
                          "type": {
                            "type": "integer",
                            "description": "Meeting type"
                          },
                          "topic": {
                            "type": "string",
                            "description": "Meeting topic"
                          },
                          "user_name": {
                            "type": "string",
                            "description": "User display name"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "User email"
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting start time"
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting end time"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Meeting duration"
                          },
                          "total_minutes": {
                            "type": "integer",
                            "description": "Number of meeting minutes"
                          },
                          "participants_count": {
                            "type": "integer",
                            "description": "Number of meeting participants"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1946-05-25",
                "to": "1945-02-05",
                "page_count": -97167484,
                "page_size": -75342580,
                "total_records": -22533114,
                "next_page_token": "et veniam",
                "meetings": [
                  {
                    "uuid": "tempor Lorem ipsum esse",
                    "id": 8016257,
                    "type": 70571128,
                    "topic": "in consectetur enim aute",
                    "user_name": "in cillum eu aliqua",
                    "user_email": "aliquip incididunt",
                    "start_time": "2002-03-11T01:36:59.166Z",
                    "end_time": "1978-05-11T05:56:35.584Z",
                    "duration": -85982939,
                    "total_minutes": 58043473,
                    "participants_count": -71356877
                  },
                  {
                    "uuid": "eu sit Duis in",
                    "id": -31523439,
                    "type": 34158645,
                    "topic": "ad con",
                    "user_name": "do",
                    "user_email": "re",
                    "start_time": "1990-03-14T10:05:56.085Z",
                    "end_time": "1944-11-26T00:31:28.532Z",
                    "duration": -85977473,
                    "total_minutes": -41639404,
                    "participants_count": 28916189
                  },
                  {
                    "uuid": "enim reprehenderit dolore id",
                    "id": 28926001,
                    "type": -11623228,
                    "topic": "non",
                    "user_name": "irure eiusmod voluptate laboris in",
                    "user_email": "quis sunt aliqua mollit consectetur",
                    "start_time": "2012-07-05T09:41:04.232Z",
                    "end_time": "1970-03-02T05:53:38.638Z",
                    "duration": -41672250,
                    "total_minutes": 90126999,
                    "participants_count": -76495681
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/report/meetings/{meetingId}": {
      "get": {
        "summary": "Retrieve meeting details report",
        "description": "Retrieve ended meeting details report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingDetails",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting detail Returned",
            "schema": {
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID"
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type"
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic"
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name"
                },
                "user_email": {
                  "type": "string",
                  "description": "User email"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time"
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time"
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration"
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Number of meeting minutes"
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants"
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "sit aliqua non dolor",
                "id": 23407037,
                "type": 61206962,
                "topic": "velit sit eu adipisicing",
                "user_name": "mollit ea",
                "user_email": "velit non commodo",
                "start_time": "1996-04-13T11:58:45.011Z",
                "end_time": "2014-06-20T10:10:10.685Z",
                "duration": 89268306,
                "total_minutes": -31988024,
                "participants_count": 78462235
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/report/meetings/{meetingId}/participants": {
      "get": {
        "summary": "Retrieve meeting participants report",
        "description": "Retrieve ended meeting participants report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingParticipants",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of meeting participant objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Participant email"
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time"
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Participant duration"
                          },
                          "attentiveness_score": {
                            "type": "integer",
                            "description": "Participant attentiveness score"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 1188949,
                "page_size": -21263479,
                "total_records": -58297847,
                "next_page_token": "ad sed sit",
                "participants": [
                  {
                    "id": "cupidatat laboris",
                    "user_id": "aliquip volu",
                    "name": "do",
                    "user_email": "sunt anim do",
                    "join_time": "1963-03-01T05:05:21.572Z",
                    "leave_time": "1989-11-16T23:27:48.475Z",
                    "duration": -19374743,
                    "attentiveness_score": 47199025
                  },
                  {
                    "id": "proident et quis amet",
                    "user_id": "enim voluptate",
                    "name": "velit est",
                    "user_email": "non",
                    "join_time": "1993-02-23T10:04:03.005Z",
                    "leave_time": "1998-03-14T22:00:30.965Z",
                    "duration": 48135791,
                    "attentiveness_score": -63990531
                  },
                  {
                    "id": "id ullamco",
                    "user_id": "Ut esse no",
                    "name": "dolor velit",
                    "user_email": "sunt",
                    "join_time": "1959-12-21T13:14:58.277Z",
                    "leave_time": "1965-06-15T05:44:42.200Z",
                    "duration": 3847867,
                    "attentiveness_score": -55432147
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/report/meetings/{meetingId}/polls": {
      "get": {
        "summary": "Retrieve meeting polls report",
        "description": "Retrieve ended meeting polls report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportMeetingPolls",
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Polls Report Returned",
            "schema": {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time"
                },
                "questions": {
                  "type": "array",
                  "description": "Array of Meeting question objects",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name"
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email"
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user",
                        "items": {
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question"
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": -77298478,
                "uuid": "do",
                "start_time": "1949-10-13T13:12:44.196Z",
                "questions": [
                  {
                    "name": "dolor nostrud amet dolore",
                    "email": "dolore et deserunt consectetur",
                    "question_details": [
                      {
                        "question": "pariatur labo",
                        "answer": "commodo culpa fugiat adipisic"
                      },
                      {
                        "question": "dolore nulla Du",
                        "answer": "ut commodo"
                      },
                      {
                        "question": "qui consectetur",
                        "answer": "consequat proident"
                      },
                      {
                        "question": "sint pariatur Excepteur cupidatat ex",
                        "answer": "nis"
                      },
                      {
                        "question": "enim occaecat aliquip ut ad",
                        "answer": "enim Excepteur dolore"
                      }
                    ]
                  },
                  {
                    "name": "do Lorem reprehenderit dolore",
                    "email": "aliquip",
                    "question_details": [
                      {
                        "question": "dolor ea non",
                        "answer": "voluptate"
                      },
                      {
                        "question": "consectetur sit",
                        "answer": "consequat velit Lorem exercitation"
                      }
                    ]
                  },
                  {
                    "name": "id incididunt reprehenderit ullamco",
                    "email": "magna eiusmod pariatur ea",
                    "question_details": [
                      {
                        "question": "velit ipsum U",
                        "answer": "mollit velit ea"
                      },
                      {
                        "question": "in",
                        "answer": "nostrud nulla ipsum in"
                      },
                      {
                        "question": "consectetur Lorem proident ipsum dolor",
                        "answer": "esse proident in tempor"
                      }
                    ]
                  },
                  {
                    "name": "fugiat in",
                    "email": "ut nulla ea",
                    "question_details": [
                      {
                        "question": "Excepteur exercitation",
                        "answer": "labore exercitation"
                      },
                      {
                        "question": "anim labore tempor",
                        "answer": "in nulla veniam"
                      }
                    ]
                  },
                  {
                    "name": "in consectetur Excepteur irure",
                    "email": "elit quis exercitation consequat laboris",
                    "question_details": [
                      {
                        "question": "Excepteur ea",
                        "answer": "et sit"
                      },
                      {
                        "question": "esse dolor elit",
                        "answer": "l"
                      },
                      {
                        "question": "nisi minim ex non cillum",
                        "answer": "ad anim sunt aute"
                      },
                      {
                        "question": "sed nulla anim in",
                        "answer": "consectetur laborum dolor"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Meeting not found"
          }
        }
      }
    },
    "/report/webinars/{webinarId}": {
      "get": {
        "summary": "Retrieve webinar details report",
        "description": "Retrieve ended webinar details report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarDetails",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar detail Returned",
            "schema": {
              "properties": {
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Meeting UUID"
                },
                "id": {
                  "type": "integer",
                  "description": "Meeting ID"
                },
                "type": {
                  "type": "integer",
                  "description": "Meeting type"
                },
                "topic": {
                  "type": "string",
                  "description": "Meeting topic"
                },
                "user_name": {
                  "type": "string",
                  "description": "User display name"
                },
                "user_email": {
                  "type": "string",
                  "description": "User email"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting start time"
                },
                "end_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Meeting end time"
                },
                "duration": {
                  "type": "integer",
                  "description": "Meeting duration"
                },
                "total_minutes": {
                  "type": "integer",
                  "description": "Number of meeting minutes"
                },
                "participants_count": {
                  "type": "integer",
                  "description": "Number of meeting participants"
                }
              }
            },
            "examples": {
              "application/json": {
                "uuid": "nostrud dolore consectetur",
                "id": -35062175,
                "type": 66089625,
                "topic": "mollit sit Lorem",
                "user_name": "esse ea ut officia magna",
                "user_email": "sed eiusmod magna",
                "start_time": "2014-12-25T21:09:21.905Z",
                "end_time": "1965-07-14T11:15:28.793Z",
                "duration": -23813662,
                "total_minutes": 49305272,
                "participants_count": 76897502
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/report/webinars/{webinarId}/participants": {
      "get": {
        "summary": "Retrieve webinar participants report",
        "description": "Retrieve ended webinar participants report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarParticipants",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/NextPageToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "allOf": [
                {
                  "$ref": "#/definitions/PaginationToken"
                },
                {
                  "properties": {
                    "participants": {
                      "type": "array",
                      "description": "Array of webinar participant objects",
                      "items": {
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "Participant UUID"
                          },
                          "user_id": {
                            "type": "string",
                            "description": "Participant ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "Participant display name"
                          },
                          "user_email": {
                            "type": "string",
                            "description": "Participant email"
                          },
                          "join_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant join time"
                          },
                          "leave_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Participant leave time"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Participant duration"
                          },
                          "attentiveness_score": {
                            "type": "string",
                            "description": "Participant attentiveness score"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "page_count": 21608066,
                "page_size": -3148303,
                "total_records": 83523748,
                "next_page_token": "in",
                "participants": [
                  {
                    "id": "Lorem id Duis sed",
                    "user_id": "dolore et tempor aliquip",
                    "name": "ipsum sint dolore",
                    "user_email": "nulla ex qui",
                    "join_time": "1976-12-30T22:10:14.981Z",
                    "leave_time": "1949-07-29T20:39:44.786Z",
                    "duration": -28128697,
                    "attentiveness_score": "ullamco minim do"
                  },
                  {
                    "id": "fugiat",
                    "user_id": "dolore amet ex",
                    "name": "do commodo in",
                    "user_email": "velit laboris",
                    "join_time": "1989-08-29T18:19:57.457Z",
                    "leave_time": "1989-12-17T04:15:51.419Z",
                    "duration": 63597122,
                    "attentiveness_score": "amet ullamco Excepteur dolore reprehenderit"
                  },
                  {
                    "id": "aliquip",
                    "user_id": "et anim velit sint",
                    "name": "adipi",
                    "user_email": "commodo elit voluptate magna",
                    "join_time": "1988-10-04T15:06:11.907Z",
                    "leave_time": "1953-12-29T23:18:46.773Z",
                    "duration": 9665921,
                    "attentiveness_score": "est dolor dolore"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/report/webinars/{webinarId}/polls": {
      "get": {
        "summary": "Retrieve webinar polls report",
        "description": "Retrieve ended webinar polls report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarPolls",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Polls Report Returned",
            "schema": {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID"
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Webinar UUID"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar start time"
                },
                "questions": {
                  "type": "array",
                  "description": "Array of webinar question objects",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name"
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email"
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user",
                        "items": {
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question"
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": -4901282,
                "uuid": "voluptate amet ipsum Duis",
                "start_time": "1953-02-05T18:10:20.248Z",
                "questions": [
                  {
                    "name": "laboris veniam labo",
                    "email": "eiusmod Lorem mollit do",
                    "question_details": [
                      {
                        "question": "do Ut velit",
                        "answer": "quis tempor labore commodo"
                      },
                      {
                        "question": "esse",
                        "answer": "consequat cillum aliqua"
                      }
                    ]
                  },
                  {
                    "name": "eiusmod adipisicing amet",
                    "email": "nisi",
                    "question_details": [
                      {
                        "question": "ea aliquip dolore",
                        "answer": "eiusmod fugiat proident"
                      },
                      {
                        "question": "Lorem qui dolor",
                        "answer": "labore"
                      }
                    ]
                  },
                  {
                    "name": "ut sed fugiat proident in",
                    "email": "reprehenderit laborum",
                    "question_details": [
                      {
                        "question": "ut al",
                        "answer": "voluptate mollit"
                      },
                      {
                        "question": "adipisicing aliqua",
                        "answer": "nisi enim cupidatat"
                      },
                      {
                        "question": "cupidatat eu",
                        "answer": "proident sit mollit"
                      }
                    ]
                  },
                  {
                    "name": "ea dolor cupidatat incididunt",
                    "email": "culpa do Lorem sint",
                    "question_details": [
                      {
                        "question": "in nostrud enim commodo",
                        "answer": "sit in laborum incididunt"
                      },
                      {
                        "question": "dolor in",
                        "answer": "dolor"
                      },
                      {
                        "question": "ad aute",
                        "answer": "officia dolor in"
                      }
                    ]
                  },
                  {
                    "name": "nisi",
                    "email": "voluptate",
                    "question_details": [
                      {
                        "question": "incididunt exe",
                        "answer": "ullamco"
                      },
                      {
                        "question": "eu in labore ullamco",
                        "answer": "veniam ut"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/report/webinars/{webinarId}/qa": {
      "get": {
        "summary": "Retrieve webinar Q&A report",
        "description": "Retrieve ended webinar Q&A report",
        "tags": [
          "Reports"
        ],
        "operationId": "reportWebinarQA",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId4Metrics"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Q&A Report Returned",
            "schema": {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Webinar ID"
                },
                "uuid": {
                  "type": "string",
                  "format": "uuid",
                  "description": "Webinar UUID"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Webinar start time"
                },
                "questions": {
                  "type": "array",
                  "description": "Array of webinar question objects",
                  "items": {
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Participant display name"
                      },
                      "email": {
                        "type": "string",
                        "description": "Participant email"
                      },
                      "question_details": {
                        "type": "array",
                        "description": "Array of questions from user",
                        "items": {
                          "properties": {
                            "question": {
                              "type": "string",
                              "description": "Asked question"
                            },
                            "answer": {
                              "type": "string",
                              "description": "Given answer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "id": -18607654,
                "uuid": "aliqua",
                "start_time": "1940-01-24T13:49:13.365Z",
                "questions": [
                  {
                    "name": "",
                    "email": "aliqua voluptate",
                    "question_details": [
                      {
                        "question": "occaecat mollit",
                        "answer": "non dolor do Ut"
                      },
                      {
                        "question": "quis aute",
                        "answer": "ex nisi deserunt"
                      },
                      {
                        "question": "veniam eiusmod",
                        "answer": "dolore"
                      }
                    ]
                  },
                  {
                    "name": "ullamco laborum eiusmod tempor",
                    "email": "qui amet commodo",
                    "question_details": [
                      {
                        "question": "Lorem officia esse",
                        "answer": "culpa adipisicing cupidatat ut"
                      },
                      {
                        "question": "pariatur qui",
                        "answer": "nostrud veniam"
                      },
                      {
                        "question": "pariatur in sit consectetur",
                        "answer": "tempor fugiat"
                      }
                    ]
                  },
                  {
                    "name": "occaecat",
                    "email": "et",
                    "question_details": [
                      {
                        "question": "elit labore minim",
                        "answer": "labore"
                      },
                      {
                        "question": "do commodo",
                        "answer": "in ex minim aute"
                      },
                      {
                        "question": "ut culpa aliquip et",
                        "answer": "ut labor"
                      },
                      {
                        "question": "veniam sed aliquip",
                        "answer": "sunt pariatur tempor lab"
                      }
                    ]
                  },
                  {
                    "name": "s",
                    "email": "est",
                    "question_details": [
                      {
                        "question": "amet nulla sit",
                        "answer": "anim"
                      },
                      {
                        "question": "eiusmod dolore",
                        "answer": "ipsum dolor mollit"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/report/telephone": {
      "get": {
        "summary": "Retrieve telephone report",
        "description": "Retrieve telephone report for a specified period <aside>Toll Report option would be removed.</aside>.",
        "tags": [
          "Reports"
        ],
        "operationId": "reportTelephone",
        "parameters": [
          {
            "in": "query",
            "name": "type",
            "description": "Audio type",
            "type": "string",
            "enum": [
              1
            ],
            "x-enum-descriptions": [
              "Toll-free Call-in & Call-out"
            ],
            "default": 1
          },
          {
            "$ref": "#/parameters/FromDate"
          },
          {
            "$ref": "#/parameters/ToDate"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Telephone Report Returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "from": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date for this report"
                    },
                    "to": {
                      "type": "string",
                      "format": "date",
                      "description": "End date for this report"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Pagination"
                },
                {
                  "properties": {
                    "telephony_usage": {
                      "type": "array",
                      "description": "Array of telephony objects",
                      "items": {
                        "properties": {
                          "meeting_id": {
                            "type": "integer",
                            "description": "Meeting ID"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "Telephone Number"
                          },
                          "host_name": {
                            "type": "string",
                            "description": "User display name"
                          },
                          "host_email": {
                            "type": "string",
                            "description": "User email"
                          },
                          "dept": {
                            "type": "string",
                            "description": "User department"
                          },
                          "start_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting start time"
                          },
                          "end_time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Meeting end time"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Meeting duration"
                          },
                          "total": {
                            "type": "number",
                            "description": "Total"
                          }
                        }
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "from": "1969-04-21",
                "to": "1949-04-12",
                "page_count": 71725542,
                "page_number": 20374910,
                "page_size": -93337581,
                "total_records": 93404647,
                "telephony_usage": [
                  {
                    "meeting_id": -4335765,
                    "phone_number": "dolore ea ipsum in",
                    "host_name": "dolor aliqua consequat enim",
                    "host_email": "Lorem",
                    "dept": "ad in sed cillum",
                    "start_time": "2011-05-17T03:52:24.923Z",
                    "end_time": "1995-04-24T12:47:49.085Z",
                    "duration": 21814563,
                    "total": 36899350.567748725
                  },
                  {
                    "meeting_id": -40483133,
                    "phone_number": "irure commodo exercitation cupidatat",
                    "host_name": "in nostrud",
                    "host_email": "ullamco nulla dolore",
                    "dept": "veniam fugiat mini",
                    "start_time": "1968-03-07T01:06:00.402Z",
                    "end_time": "1958-07-19T17:18:12.047Z",
                    "duration": 72499595,
                    "total": 54543863.200550854
                  },
                  {
                    "meeting_id": 9677901,
                    "phone_number": "dolor eiusmod esse aute",
                    "host_name": "Ut ut",
                    "host_email": "in dolore incididunt elit",
                    "dept": "in dolor Duis deserunt",
                    "start_time": "1980-12-08T10:23:35.402Z",
                    "end_time": "1970-04-06T17:49:32.476Z",
                    "duration": -76652363,
                    "total": 2294018.57584776
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/tsp": {
      "get": {
        "summary": "List TSP dial-in numbers",
        "description": "List TSP dial-in numbers under account",
        "tags": [
          "TSP"
        ],
        "operationId": "tsp",
        "parameters": [],
        "responses": {
          "200": {
            "description": "TSP dial-in numbers returned",
            "schema": {
              "properties": {
                "tsp_provider": {
                  "type": "string"
                },
                "dial_in_numbers": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Country Code"
                      },
                      "number": {
                        "type": "string",
                        "description": "Dial-in number, length is less than 16"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "tsp_provider": "dolore ipsum",
                "dial_in_numbers": [
                  {
                    "code": "Excepteur id consequat",
                    "number": "dolore sunt in",
                    "type": "voluptate tempor ipsum a"
                  },
                  {
                    "code": "elit eu id occaecat",
                    "number": "incididunt sint eu",
                    "type": "laborum in esse elit"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List Users",
        "description": "List users on your account",
        "tags": [
          "Users"
        ],
        "operationId": "users",
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "description": "User status",
            "type": "string",
            "default": "active",
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "x-enum-descriptions": [
              "users with active status",
              "users with inactive status",
              "users with pending status"
            ]
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "User list returned",
            "schema": {
              "$ref": "#/definitions/UserList"
            },
            "examples": {
              "application/json": {
                "page_count": 38105140,
                "page_number": -25311842,
                "page_size": -74732486,
                "total_records": 33877599,
                "users": [
                  {
                    "email": "in pariatur officia occaecat adipisicing",
                    "type": 1,
                    "id": "ex",
                    "first_name": "sit",
                    "last_name": "consectetu",
                    "pmi": "esse ullamco velit",
                    "timezone": "dolore qui d",
                    "dept": "sunt",
                    "created_at": "1958-03-31T18:41:05.722Z",
                    "last_login_time": "2007-11-25T04:44:00.969Z",
                    "last_client_version": "et velit enim",
                    "group_ids": [
                      "offi",
                      "",
                      "velit ex",
                      "tempor proident",
                      "occaecat non ad proident"
                    ],
                    "im_group_ids": [
                      "s",
                      "Ut aliqua minim",
                      "nulla sint"
                    ]
                  },
                  {
                    "email": "aute est veniam sit",
                    "type": 2,
                    "id": "culpa fugiat aliquip",
                    "first_name": "sit ve",
                    "last_name": "id es",
                    "pmi": "id sunt",
                    "timezone": "consectetur",
                    "dept": "exercita",
                    "created_at": "1948-01-01T03:01:14.355Z",
                    "last_login_time": "1971-08-30T23:53:36.362Z",
                    "last_client_version": "ut lab",
                    "group_ids": [
                      "Lorem",
                      "minim aliquip magna",
                      "laborum tempor",
                      "laboris"
                    ],
                    "im_group_ids": [
                      "minim nulla",
                      "cupidatat commodo ut"
                    ]
                  },
                  {
                    "email": "nisi do culpa id elit",
                    "type": 1,
                    "id": "enim elit",
                    "first_name": "",
                    "last_name": "irure",
                    "pmi": "id",
                    "timezone": "tempor reprehenderit labore ullamco occaecat",
                    "dept": "veniam ",
                    "created_at": "1972-01-11T15:36:43.887Z",
                    "last_login_time": "1947-11-08T09:53:55.312Z",
                    "last_client_version": "cillum eiusmod Excepteur in",
                    "group_ids": [
                      "cupidatat eiusmod quis laboris",
                      "adipisicing fugiat"
                    ],
                    "im_group_ids": [
                      "Ut laboris do",
                      "Excepteur aliquip",
                      "veniam aliqua anim qui consequat"
                    ]
                  },
                  {
                    "email": "ex est",
                    "type": 1,
                    "id": "elit Lorem aute",
                    "first_name": "e",
                    "last_name": "ni",
                    "pmi": "Excepteur irure et aute minim",
                    "timezone": "aliq",
                    "dept": "consequat occ",
                    "created_at": "1969-04-27T20:03:39.871Z",
                    "last_login_time": "1988-09-05T01:20:30.644Z",
                    "last_client_version": "cillum pariatur fugiat",
                    "group_ids": [
                      "aliquip velit eu"
                    ],
                    "im_group_ids": [
                      "fugiat minim velit dolor",
                      "dolore sunt"
                    ]
                  }
                ]
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a user",
        "description": "Create a user on your account",
        "tags": [
          "Users"
        ],
        "operationId": "userCreate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "type": "object",
              "required": [
                "action"
              ],
              "properties": {
                "action": {
                  "type": "string",
                  "description": "Specify how to create the new user",
                  "enum": [
                    "create",
                    "autoCreate",
                    "custCreate",
                    "ssoCreate"
                  ],
                  "x-enum-descriptions": [
                    "User will get an email sent from Zoom. There is a confirmation link in this email. User will then need to click this link to activate their account to the Zoom service. The user can set or change their password in Zoom. <br/>.",
                    "This action is provided for enterprise customer who has a managed domain. This feature is disabled by default because of the security risk involved in creating a user who does not belong to your domain without notifying the user. <br/>",
                    "This action is provided for API partner only. User created in this way has no password and is not able to log into the Zoom web site or client. <br/>",
                    "This action is provided for enabled \"Pre-provisioning SSO User\" option. User created in this way has no password. If it is not a basic user, will generate a Personal Vanity URL using user name (no domain) of the provisioning email. If user name or pmi is invalid or occupied, will use random number/random personal vanity URL. <br/>"
                  ]
                },
                "user_info": {
                  "required": [
                    "email",
                    "type"
                  ],
                  "properties": {
                    "email": {
                      "type": "string",
                      "description": "User's email address",
                      "maxLength": 128
                    },
                    "type": {
                      "type": "integer",
                      "enum": [
                        1,
                        2,
                        3
                      ],
                      "x-enum-descriptions": [
                        "basic",
                        "pro",
                        "corp"
                      ],
                      "description": "User's type"
                    },
                    "first_name": {
                      "type": "string",
                      "description": "User's first name. Cannot contain more than 5 Chinese words.",
                      "maxLength": 64
                    },
                    "last_name": {
                      "type": "string",
                      "description": "User's last name. Cannot contain more than 5 Chinese words.",
                      "maxLength": 64
                    },
                    "password": {
                      "type": "string",
                      "description": "User’s password. Only for \"autoCreate\" action."
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "ssoCreate",
                "user_info": {
                  "email": "lab",
                  "type": 1,
                  "first_name": "quis",
                  "last_name": "laboris ",
                  "password": "ea culpa"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created User",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "User ID"
                },
                "first_name": {
                  "type": "string",
                  "description": "User's first name",
                  "maxLength": 64
                },
                "last_name": {
                  "type": "string",
                  "description": "User's last name",
                  "maxLength": 64
                },
                "email": {
                  "type": "string",
                  "description": "User's email address"
                },
                "type": {
                  "type": "integer",
                  "enum": [
                    1,
                    2,
                    3
                  ],
                  "x-enum-descriptions": [
                    "basic",
                    "pro",
                    "corp"
                  ],
                  "description": "User's type"
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "et ad irure dolore exercitation",
                "first_name": "magn",
                "last_name": "in cup",
                "email": "Ut",
                "type": 3
              }
            }
          },
          "409": {
            "description": "User with that email already exists",
            "examples": {}
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Retrieve a user",
        "description": "Retrieve a user on your account",
        "tags": [
          "Users"
        ],
        "operationId": "user",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/LoginType"
          }
        ],
        "responses": {
          "200": {
            "description": "User object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "User ID"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/User"
                },
                {
                  "properties": {
                    "vanity_url": {
                      "type": "string"
                    },
                    "personal_meeting_url": {
                      "type": "string"
                    },
                    "verified": {
                      "type": "integer"
                    },
                    "pic_url": {
                      "type": "string"
                    },
                    "cms_user_id": {
                      "type": "string"
                    },
                    "account_id": {
                      "type": "string"
                    },
                    "host_key": {
                      "type": "string"
                    },
                    "group_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "im_group_ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "email": "esse sit",
                "type": 1,
                "id": "labore occaecat et quis ut",
                "first_name": "cu",
                "last_name": "ni",
                "pmi": "sed",
                "timezone": "magna pariatur nostrud est",
                "dept": "et velit",
                "created_at": "1948-06-16T04:27:47.486Z",
                "last_login_time": "1964-03-20T10:56:23.036Z",
                "last_client_version": "laborum rep",
                "vanity_url": "lab",
                "personal_meeting_url": "ut et deserunt sit proident",
                "verified": 87318298,
                "pic_url": "tempor Ut et ipsum sunt",
                "cms_user_id": "anim irure",
                "account_id": "in sint labore",
                "host_key": "do elit velit",
                "group_ids": [
                  "dolore veniam aliqua",
                  "exercitation commodo nulla",
                  "in quis laboris consequat"
                ],
                "im_group_ids": [
                  "deserunt Excepteur ut"
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Update a user",
        "description": "Update a user on your account",
        "tags": [
          "Users"
        ],
        "operationId": "userUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "$ref": "#/definitions/UserUpdate"
            },
            "x-examples": {
              "application/json": {
                "first_name": "dol",
                "last_name": "ad comm",
                "type": 1,
                "pmi": "ullamco ci",
                "timezone": "1986-01-18T20:23:25.472Z",
                "dept": "Lorem culpa ut ipsum",
                "vanity_name": "id consectetur",
                "host_key": "nulla ",
                "cms_user_id": "dolor"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated",
            "examples": {}
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Delete a user on your account",
        "tags": [
          "Users"
        ],
        "operationId": "userDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "query",
            "name": "action",
            "description": "Delete action type",
            "type": "string",
            "default": "disassociate",
            "enum": [
              "disassociate",
              "delete"
            ],
            "x-enum-descriptions": [
              "Disassociate a user",
              "Permanently delete a user"
            ]
          },
          {
            "$ref": "#/parameters/TransferEmail"
          },
          {
            "$ref": "#/parameters/TransferMeeting"
          },
          {
            "$ref": "#/parameters/TransferWebinar"
          },
          {
            "$ref": "#/parameters/TransferRecording"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/assistants": {
      "get": {
        "summary": "List a user's assistants",
        "description": "List a user's assistants",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistants",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserAssistantsList"
            },
            "examples": {
              "application/json": {
                "assistants": [
                  {
                    "id": "incididunt est aliquip labore deserunt",
                    "email": "ad dolore veniam in"
                  },
                  {
                    "id": "non id",
                    "email": "et eu ipsum sit"
                  },
                  {
                    "id": "et aliqua pariatur ad",
                    "email": "occaecat cu"
                  },
                  {
                    "id": "in occaecat ut aliquip",
                    "email": "ex tempor culpa"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "summary": "Add assistants",
        "description": "Add assistants to a user",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantCreate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User assistant",
            "required": true,
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserAssistantsList"
            },
            "x-examples": {
              "application/json": {
                "assistants": [
                  {
                    "id": "commodo occaecat",
                    "email": "magna inc"
                  },
                  {
                    "id": "laboris consequat dolore",
                    "email": "anim in dolor non"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Assitant Added",
            "headers": {
              "Content-Location": {
                "description": "Location of created assistant",
                "type": "string"
              }
            },
            "schema": {
              "properties": {
                "ids": {
                  "type": "string",
                  "description": "User ID"
                },
                "add_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "examples": {
              "application/json": {
                "ids": "occaecat est in voluptate aliquip",
                "add_at": "1956-05-07T07:07:42.375Z"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user's assistants",
        "description": "Delete all of a user'sassitants",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantsDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Assitants deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}": {
      "delete": {
        "summary": "Delete a user's assistant",
        "description": "Delete one of a user's assistants",
        "tags": [
          "Users"
        ],
        "operationId": "userAssistantDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "assistantId",
            "description": "Assistant's ID",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Assitant deleted"
          },
          "404": {
            "description": "User or Assistant not found"
          }
        }
      }
    },
    "/users/{userId}/schedulers": {
      "get": {
        "summary": "List a user's schedulers",
        "description": "List a user's schedulers",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulers",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserSchedulersList"
            },
            "examples": {
              "application/json": {
                "assistants": [
                  {
                    "id": "id est officia sit voluptate",
                    "email": "elit officia amet consectetur"
                  },
                  {
                    "id": "Lorem culpa aute",
                    "email": "nisi nulla occaecat"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a user's schedulers",
        "description": "Delete all of a user'schedulers",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulersDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Schedulers deleted."
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/schedulers/{schedulerId}": {
      "delete": {
        "summary": "Delete a user's scheduler",
        "description": "Delete one of a user's schedulers",
        "tags": [
          "Users"
        ],
        "operationId": "userSchedulerDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "schedulerId",
            "description": "Scheduler's ID",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Scheduler deleted."
          },
          "404": {
            "description": "User or Scheduler not found"
          }
        }
      }
    },
    "/users/{userId}/picture": {
      "post": {
        "summary": "Upload a user's picture",
        "description": "Upload a user's profile picture",
        "tags": [
          "Users"
        ],
        "operationId": "userPicture",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "pic_file",
            "description": "User picture file, must be a jpg/jpeg file",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Picture Uploaded",
            "headers": {
              "Content-Location": {
                "description": "Location of user's picture",
                "type": "string"
              }
            },
            "examples": {}
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/settings": {
      "get": {
        "summary": "Retrieve a user's settings",
        "description": "Retrieve a user's settings",
        "tags": [
          "Users"
        ],
        "operationId": "userSettings",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/LoginType"
          }
        ],
        "responses": {
          "200": {
            "description": "User settings returned",
            "schema": {
              "$ref": "#/definitions/UserSettings"
            },
            "examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": true,
                  "participants_video": false,
                  "audio_type": "both",
                  "join_before_host": true,
                  "force_pmi_jbh_password": true,
                  "pstn_password_protected": false
                },
                "in_meeting": {
                  "e2e_encryption": true,
                  "chat": true,
                  "private_chat": false,
                  "auto_saving_chat": false,
                  "entry_exit_chime": "none",
                  "record_play_voice": false,
                  "file_transfer": false,
                  "feedback": false,
                  "co_host": false,
                  "polling": true,
                  "attendee_on_hold": true,
                  "annotation": false,
                  "remote_control": false,
                  "non_verbal_feedback": false,
                  "breakout_room": true,
                  "remote_support": true,
                  "closed_caption": false,
                  "group_hd": false,
                  "virtual_background": false,
                  "far_end_camera_control": false,
                  "share_dual_camera": false,
                  "attention_tracking": true,
                  "waiting_room": false
                },
                "email_notification": {
                  "jbh_reminder": false,
                  "cancel_meeting_reminder": false,
                  "alternative_host_reminder": true
                },
                "recording": {
                  "local_recording": false,
                  "cloud_recording": true,
                  "record_speaker_view": false,
                  "record_gallery_view": false,
                  "record_audio_file": false,
                  "save_chat_text": true,
                  "show_timestamp": true,
                  "recording_audio_transcript": true,
                  "auto_recording": "cloud",
                  "auto_delete_cmr": true,
                  "auto_delete_cmr_days": 47
                },
                "telephony": {
                  "third_party_audio": false,
                  "audio_conference_info": "enim ",
                  "show_international_numbers_link": true
                },
                "feature": {
                  "meeting_capacity": -28825268,
                  "large_meeting": false,
                  "large_meeting_capacity": 15239804,
                  "webinar": true,
                  "webinar_capacity": -90783985,
                  "cn_meeting": true,
                  "in_meeting": false
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "patch": {
        "summary": "Update a user's settings",
        "description": "Update a user's settings",
        "tags": [
          "Users"
        ],
        "operationId": "userSettingsUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User Settings",
            "schema": {
              "$ref": "#/definitions/UserSettingsUpdate"
            },
            "x-examples": {
              "application/json": {
                "schedule_meeting": {
                  "host_video": false,
                  "participants_video": true,
                  "audio_type": "both",
                  "join_before_host": false,
                  "force_pmi_jbh_password": true,
                  "pstn_password_protected": true
                },
                "in_meeting": {
                  "e2e_encryption": false,
                  "chat": false,
                  "private_chat": false,
                  "auto_saving_chat": true,
                  "entry_exit_chime": "host",
                  "record_play_voice": false,
                  "file_transfer": true,
                  "feedback": true,
                  "co_host": false,
                  "polling": false,
                  "attendee_on_hold": false,
                  "annotation": false,
                  "remote_control": true,
                  "non_verbal_feedback": false,
                  "breakout_room": false,
                  "remote_support": false,
                  "closed_caption": false,
                  "group_hd": false,
                  "virtual_background": false,
                  "far_end_camera_control": false,
                  "share_dual_camera": false,
                  "attention_tracking": true,
                  "waiting_room": true
                },
                "email_notification": {
                  "jbh_reminder": false,
                  "cancel_meeting_reminder": true,
                  "alternative_host_reminder": true
                },
                "recording": {
                  "local_recording": true,
                  "cloud_recording": false,
                  "record_speaker_view": true,
                  "record_gallery_view": true,
                  "record_audio_file": true,
                  "save_chat_text": true,
                  "show_timestamp": true,
                  "recording_audio_transcript": false,
                  "auto_recording": "local",
                  "auto_delete_cmr": false,
                  "auto_delete_cmr_days": 9
                },
                "telephony": {
                  "third_party_audio": false,
                  "audio_conference_info": "sed ut e",
                  "show_international_numbers_link": true
                },
                "feature": {
                  "meeting_capacity": 33514752,
                  "large_meeting": false,
                  "large_meeting_capacity": 70471974,
                  "webinar": true,
                  "webinar_capacity": 11242166
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User setting's updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/status": {
      "put": {
        "summary": "Update a user's status",
        "description": "Update a user's status",
        "tags": [
          "Users"
        ],
        "operationId": "userStatus",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User status",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The action",
              "type": "object",
              "required": [
                "action"
              ],
              "properties": {
                "action": {
                  "type": "string",
                  "description": "The action type",
                  "enum": [
                    "activate",
                    "deactivate"
                  ],
                  "x-enum-descriptions": [
                    "set users status to active",
                    "set users status to inactive"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "activate"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status updated"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/password": {
      "put": {
        "summary": "Update a user's password",
        "description": "Update a user's password",
        "tags": [
          "Users"
        ],
        "operationId": "userPassword",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "name": "body",
            "description": "User password",
            "required": true,
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "password"
              ],
              "properties": {
                "password": {
                  "type": "string",
                  "description": "User’s password. Character length is less than 32,"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "password": "commodo ipsum eiusmod non"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password updated",
            "examples": {}
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/permissions": {
      "get": {
        "summary": "Retrieve a user's permissions",
        "description": "Retrieve a user's permissions",
        "tags": [
          "Users"
        ],
        "operationId": "userPermission",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions returned",
            "schema": {
              "$ref": "#/definitions/UserPermissions"
            },
            "examples": {
              "application/json": {
                "permissions": [
                  "do nisi"
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/pac": {
      "get": {
        "summary": "List user's PAC accounts",
        "description": "List user's PAC accounts",
        "tags": [
          "PAC"
        ],
        "operationId": "userPACs",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "PAC Account list returned",
            "schema": {
              "properties": {
                "tsp_accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PAC"
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "tsp_accounts": [
                  {
                    "dedicated_dial_in_number": [
                      {
                        "number": "exercitation",
                        "country": "eiusmod"
                      },
                      {
                        "number": "laborum",
                        "country": "eni"
                      },
                      {
                        "number": "anim",
                        "country": "ullamco voluptate eu do"
                      }
                    ],
                    "global_dial_in_numbers": [
                      {
                        "number": "ad deserunt tempor esse",
                        "country": "ipsum sint"
                      },
                      {
                        "number": "aliquip amet laboris sunt cupidatat",
                        "country": "cillum"
                      },
                      {
                        "number": "est anim",
                        "country": "elit sint mollit"
                      }
                    ],
                    "conference_id": -77324317,
                    "participant_password": "magna cillum reprehenderit in eiusmod",
                    "listen_only_password": "pariatur Excepteur"
                  },
                  {
                    "dedicated_dial_in_number": [
                      {
                        "number": "anim cupidatat aute",
                        "country": "a"
                      },
                      {
                        "number": "eu Ut minim irur",
                        "country": "elit"
                      },
                      {
                        "number": "est paria",
                        "country": "irure"
                      },
                      {
                        "number": "officia",
                        "country": "ad pariatur"
                      }
                    ],
                    "global_dial_in_numbers": [
                      {
                        "number": "aute ad",
                        "country": "consequat ma"
                      },
                      {
                        "number": "id sunt d",
                        "country": "cupidatat adipisicing exercitation eiusmod pariatur"
                      },
                      {
                        "number": "occaecat sunt ea amet",
                        "country": "consectetur ipsum"
                      },
                      {
                        "number": "deserunt aliqua do",
                        "country": "ipsum in aliquip laboris"
                      }
                    ],
                    "conference_id": -59086053,
                    "participant_password": "proident dolor magna veniam minim",
                    "listen_only_password": "dolor proident sint nostrud"
                  },
                  {
                    "dedicated_dial_in_number": [
                      {
                        "number": "laboris amet",
                        "country": "velit id veniam"
                      },
                      {
                        "number": "sed adipisicing",
                        "country": "amet consectetur"
                      },
                      {
                        "number": "id elit consectetur laboris",
                        "country": "sed non do aute"
                      },
                      {
                        "number": "ut Lorem nisi",
                        "country": "sunt in fugiat Duis"
                      }
                    ],
                    "global_dial_in_numbers": [
                      {
                        "number": "mollit sint commodo",
                        "country": "ut elit consectetur"
                      },
                      {
                        "number": "dolore adipisicing aliquip sint Ut",
                        "country": "ea et magna"
                      },
                      {
                        "number": "aliqua reprehenderit eiusmod anim occaecat",
                        "country": "consectetur mollit non est"
                      },
                      {
                        "number": "pariatur tempor est",
                        "country": "sed aute"
                      },
                      {
                        "number": "do nostrud",
                        "country": "dolore re"
                      }
                    ],
                    "conference_id": -23903409,
                    "participant_password": "labore occaecat in velit in",
                    "listen_only_password": "nulla irure non eiusmod"
                  },
                  {
                    "dedicated_dial_in_number": [
                      {
                        "number": "id ipsum ut mollit",
                        "country": "do"
                      },
                      {
                        "number": "adipisicing cul",
                        "country": "incididunt ipsum reprehenderit labore"
                      }
                    ],
                    "global_dial_in_numbers": [
                      {
                        "number": "quis anim in",
                        "country": "mollit Excepteur reprehenderit"
                      }
                    ],
                    "conference_id": 68687994,
                    "participant_password": "cupidatat occaecat nulla",
                    "listen_only_password": "id incididunt Excepteur anim voluptate"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "summary": "List user's TSP accounts",
        "description": "List user's TSP accounts",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPs",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "200": {
            "description": "TSP Account list returned",
            "schema": {
              "properties": {
                "tsp_accounts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TSP"
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "tsp_accounts": [
                  {
                    "conference_code": "tempor a",
                    "leader_pin": "cul",
                    "dial_in_numbers": [
                      {
                        "code": "",
                        "number": "dolor p",
                        "type": "tollfree"
                      },
                      {
                        "code": "sit",
                        "number": "cupida",
                        "type": "media_link"
                      },
                      {
                        "code": "n",
                        "number": "re",
                        "type": "media_link"
                      }
                    ]
                  },
                  {
                    "conference_code": "officia",
                    "leader_pin": "labo",
                    "dial_in_numbers": [
                      {
                        "code": "e",
                        "number": "cons",
                        "type": "media_link"
                      },
                      {
                        "code": "sin",
                        "number": "ame",
                        "type": "toll"
                      },
                      {
                        "code": "offic",
                        "number": "n",
                        "type": "tollfree"
                      },
                      {
                        "code": "adi",
                        "number": "sed s",
                        "type": "tollfree"
                      }
                    ]
                  },
                  {
                    "conference_code": "s",
                    "leader_pin": "est",
                    "dial_in_numbers": [
                      {
                        "code": "",
                        "number": "dolor de",
                        "type": "media_link"
                      },
                      {
                        "code": "",
                        "number": "o",
                        "type": "tollfree"
                      }
                    ]
                  },
                  {
                    "conference_code": "qu",
                    "leader_pin": "Lorem",
                    "dial_in_numbers": [
                      {
                        "code": "c",
                        "number": "of",
                        "type": "media_link"
                      },
                      {
                        "code": "in e",
                        "number": "su",
                        "type": "media_link"
                      }
                    ]
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "summary": "Add a user's TSP account",
        "description": "Add a user's TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPCreate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "TSP Account",
            "schema": {
              "$ref": "#/definitions/TSP"
            },
            "x-examples": {
              "application/json": {
                "conference_code": "ullamc",
                "leader_pin": "ut ",
                "dial_in_numbers": [
                  {
                    "code": "eu",
                    "number": "volupt",
                    "type": "media_link"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "TSP Account added",
            "schema": {
              "$ref": "#/definitions/TSP"
            }
          }
        }
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "get": {
        "summary": "Retrieve a user's TSP account",
        "description": "Retrieve a user's TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSP",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/TSPId"
          }
        ],
        "responses": {
          "200": {
            "description": "TSP Account returned",
            "schema": {
              "$ref": "#/definitions/TSP"
            },
            "examples": {
              "application/json": {
                "conference_code": "al",
                "leader_pin": "sit",
                "dial_in_numbers": [
                  {
                    "code": "au",
                    "number": "est ",
                    "type": "media_link"
                  },
                  {
                    "code": "in",
                    "number": "nisi",
                    "type": "toll"
                  },
                  {
                    "code": "",
                    "number": "cillum an",
                    "type": "toll"
                  },
                  {
                    "code": "n",
                    "number": "dolor su",
                    "type": "media_link"
                  },
                  {
                    "code": "ei",
                    "number": "ex dolor",
                    "type": "media_link"
                  }
                ]
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update a TSP account",
        "description": "Update a user's TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/TSPId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "TSP Account",
            "schema": {
              "$ref": "#/definitions/TSP"
            },
            "x-examples": {
              "application/json": {
                "conference_code": "nulla am",
                "leader_pin": "dol",
                "dial_in_numbers": [
                  {
                    "code": "",
                    "number": "et ",
                    "type": "toll"
                  },
                  {
                    "code": "par",
                    "number": "dolor Ut",
                    "type": "media_link"
                  },
                  {
                    "code": "ut v",
                    "number": "n",
                    "type": "media_link"
                  },
                  {
                    "code": "ipsum",
                    "number": "laboris f",
                    "type": "tollfree"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "TSP Account updated"
          }
        }
      },
      "delete": {
        "summary": "Delete a user's TSP account",
        "description": "Delete a user's TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "userTSPDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/TSPId"
          }
        ],
        "responses": {
          "204": {
            "description": "TSP Account deleted"
          }
        }
      }
    },
    "/users/{userId}/token": {
      "get": {
        "summary": "Retrieve a user's token",
        "description": "Retrieve a user's token",
        "tags": [
          "Users"
        ],
        "operationId": "userToken",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "query",
            "name": "type",
            "description": "User token type",
            "type": "string",
            "enum": [
              "token",
              "zpk",
              "zak"
            ],
            "x-enum-descriptions": [
              "Used for starting meeting with client SDK.",
              "Used for generating the start meeting url. (Deprecated)",
              "Used for generating the start meeting url. The expiration time is two hours. For API users, the expiration time is 90 days."
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Token returned",
            "schema": {
              "properties": {
                "token": {
                  "type": "string",
                  "description": "User ID"
                }
              }
            },
            "examples": {
              "application/json": {
                "token": "mollit velit fugiat nisi ad"
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Revoke a user's SSO token",
        "description": "Revoke a user's SSO token",
        "tags": [
          "Users"
        ],
        "operationId": "userSSOTokenDelete",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          }
        ],
        "responses": {
          "204": {
            "description": "Token deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/zpk": {
      "get": {
        "summary": "Verify a user's zpk (Deprecated",
        "description": "Check if the zpk is expired. The zpk is used to authenticate a user.",
        "tags": [
          "Users"
        ],
        "operationId": "userZPK",
        "parameters": [
          {
            "name": "zpk",
            "description": "User zpk",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "expire_in": {
                  "type": "integer"
                }
              }
            },
            "examples": {
              "application/json": {
                "expire_in": -83904762
              }
            }
          }
        }
      }
    },
    "/users/email": {
      "get": {
        "summary": "Check a user's email",
        "description": "Check if the user email exists",
        "tags": [
          "Users"
        ],
        "operationId": "userEmail",
        "parameters": [
          {
            "name": "email",
            "description": "Zoom work email",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "existed_email": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "application/json": {
                "existed_email": false
              }
            }
          }
        }
      }
    },
    "/users/vanity_name": {
      "get": {
        "summary": "Check a user's personal meeting room name",
        "description": "Check if the user's personal meeting room name exists",
        "tags": [
          "Users"
        ],
        "operationId": "userVanityName",
        "parameters": [
          {
            "name": "vanity_name",
            "description": "Personal meeting room name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "properties": {
                "existed": {
                  "type": "boolean"
                }
              }
            },
            "examples": {
              "application/json": {
                "existed": false
              }
            }
          }
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "summary": "List webinars",
        "description": "List webinars for a user",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinars",
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webinar objects returned",
            "schema": {
              "$ref": "#/definitions/WebinarList"
            },
            "examples": {
              "application/json": {
                "page_count": 58647001,
                "page_number": 43635708,
                "page_size": -88174820,
                "total_records": 862865,
                "webinars": [
                  {
                    "uuid": "fugiat enim",
                    "id": "aliquip velit",
                    "host_id": "occaecat non",
                    "topic": "aliquip qui ea velit",
                    "type": 9,
                    "duration": -83673979,
                    "timezone": "pariatur ut in",
                    "created_at": "2005-04-16T10:58:42.680Z",
                    "join_url": "occaecat conseq"
                  },
                  {
                    "uuid": "reprehenderit sint aute eiusmod",
                    "id": "Ut pariatur reprehenderit proident",
                    "host_id": "Ut nulla",
                    "topic": "Excepteur non occaecat irure in",
                    "type": 5,
                    "duration": 69162614,
                    "timezone": "sunt",
                    "created_at": "1982-07-19T21:44:32.894Z",
                    "join_url": "veniam occaecat cillum elit enim"
                  },
                  {
                    "uuid": "sint nostrud adipisicing",
                    "id": "sed adipisicing",
                    "host_id": "velit",
                    "topic": "Duis sunt sit eiusmod",
                    "type": 5,
                    "duration": 27612331,
                    "timezone": "id deserunt Ut ea",
                    "created_at": "2017-02-27T20:39:03.334Z",
                    "join_url": "Lorem occaecat"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "post": {
        "summary": "Create a webinar",
        "description": "Create a webinar for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
        "tags": [
          "Webinars"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UserId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "User",
            "schema": {
              "$ref": "#/definitions/Webinar"
            },
            "x-examples": {
              "application/json": {
                "topic": "ea",
                "type": 9,
                "start_time": "2005-04-30T21:33:01.295Z",
                "duration": 5286406,
                "timezone": "eiusmod mollit d",
                "password": "nostrud aute labore sint cillum",
                "agenda": "consequat elit amet ut Lorem",
                "recurrence": {
                  "type": 1,
                  "repeat_interval": 75033868,
                  "weekly_days": 5,
                  "monthly_day": -22588808,
                  "monthly_week": 4,
                  "monthly_week_day": 4,
                  "end_times": -99569861,
                  "end_date_time": "1993-06-12T00:23:09.630Z"
                },
                "settings": {
                  "host_video": false,
                  "panelists_video": false,
                  "practice_session": true,
                  "hd_video": true,
                  "approval_type": 2,
                  "registration_type": 2,
                  "audio": "both",
                  "auto_recording": "none",
                  "enforce_login": false,
                  "enforce_login_domains": "irure magna",
                  "alternative_hosts": "enim dolor dolor",
                  "close_registration": true,
                  "show_share_button": true,
                  "allow_multiple_devices": true
                }
              }
            }
          }
        ],
        "operationId": "webinarCreate",
        "responses": {
          "201": {
            "description": "Webinar Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Webinar",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Webinar unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Webinar ID, also known as Webinar number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of Webinar"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/WebinarInfo"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "consectetur Ut irure et",
                "id": "in sed",
                "host_id": "tempor irure eu",
                "topic": "ea ut",
                "type": 9,
                "start_time": "1949-12-07T22:16:29.180Z",
                "duration": 76294114,
                "timezone": "in enim Duis",
                "agenda": "laborum deserunt dolor",
                "created_at": "1990-12-07T23:58:07.226Z",
                "start_url": "sunt nulla",
                "join_url": "tempor enim",
                "occurrences": [
                  {
                    "occurrence_id": 20291642,
                    "start_time": "1977-09-17T00:55:17.567Z",
                    "duration": -33742342,
                    "status": "consectetur aliquip velit occaecat amet"
                  },
                  {
                    "occurrence_id": -82286909,
                    "start_time": "1990-12-25T18:39:37.350Z",
                    "duration": 2835003,
                    "status": "cillum est magna veniam"
                  }
                ],
                "settings": {
                  "host_video": true,
                  "panelists_video": true,
                  "practice_session": false,
                  "hd_video": false,
                  "approval_type": 1,
                  "registration_type": 3,
                  "audio": "both",
                  "auto_recording": "local",
                  "enforce_login": true,
                  "enforce_login_domains": "dolor occaecat",
                  "alternative_hosts": "est officia irure Ut",
                  "close_registration": false,
                  "show_share_button": false,
                  "allow_multiple_devices": true
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/webinars/{webinarId}": {
      "get": {
        "summary": "Retrieve a webinar",
        "description": "Retrieve a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinar",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar object returned",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "type": "string",
                      "description": "Webinar unique ID"
                    },
                    "id": {
                      "type": "string",
                      "description": "Webinar ID, also know as webinar number"
                    },
                    "host_id": {
                      "type": "string",
                      "description": "ID of the user set as host of webinar"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/WebinarInfo"
                }
              ]
            },
            "examples": {
              "application/json": {
                "uuid": "ad Excepteur ut commodo",
                "id": "cillum ad Ut",
                "host_id": "fugiat tempor ven",
                "topic": "dolore commodo cillum",
                "type": 5,
                "start_time": "1951-12-13T12:31:39.422Z",
                "duration": 58525813,
                "timezone": "ex",
                "agenda": "aliqua",
                "created_at": "2003-10-05T00:12:06.110Z",
                "start_url": "sint",
                "join_url": "laborum reprehenderit commodo ipsum Lorem",
                "occurrences": [
                  {
                    "occurrence_id": -59645334,
                    "start_time": "1955-01-13T21:33:06.553Z",
                    "duration": -74628758,
                    "status": "do est"
                  },
                  {
                    "occurrence_id": 45620997,
                    "start_time": "1967-08-25T06:14:34.166Z",
                    "duration": 80273272,
                    "status": "Lorem"
                  }
                ],
                "settings": {
                  "host_video": false,
                  "panelists_video": true,
                  "practice_session": false,
                  "hd_video": false,
                  "approval_type": 0,
                  "registration_type": 2,
                  "audio": "voip",
                  "auto_recording": "none",
                  "enforce_login": true,
                  "enforce_login_domains": "exercitation sint tempor velit",
                  "alternative_hosts": "ullamco do id veniam reprehenderit",
                  "close_registration": true,
                  "show_share_button": false,
                  "allow_multiple_devices": true
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "patch": {
        "summary": "Update a webinar",
        "description": "Update a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webinar",
            "schema": {
              "$ref": "#/definitions/WebinarUpdate"
            },
            "x-examples": {
              "application/json": {
                "topic": "dolor",
                "type": 9,
                "start_time": "1997-04-08T19:29:57.110Z",
                "duration": 67698841,
                "timezone": "in officia Duis",
                "password": "nulla consequat",
                "agenda": "ut labore dolore cupidatat",
                "recurrence": {
                  "type": 2,
                  "repeat_interval": -7911403,
                  "weekly_days": 1,
                  "monthly_day": -58852442,
                  "monthly_week": 2,
                  "monthly_week_day": 5,
                  "end_times": -10884789,
                  "end_date_time": "1946-11-19T14:55:13.709Z"
                },
                "settings": {
                  "host_video": true,
                  "panelists_video": true,
                  "practice_session": false,
                  "hd_video": true,
                  "approval_type": 1,
                  "registration_type": 1,
                  "audio": "voip",
                  "auto_recording": "none",
                  "enforce_login": false,
                  "enforce_login_domains": "nulla in",
                  "alternative_hosts": "Duis",
                  "close_registration": true,
                  "show_share_button": false,
                  "allow_multiple_devices": true,
                  "registrants_confirmation_email": true
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar Updated"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a webinar",
        "description": "Delete a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarDelete",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar deleted"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarId}/status": {
      "put": {
        "summary": "Update a webinar's status",
        "description": "Update a webinar's status",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarStatus",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "status": {
                  "type": "string",
                  "enum": [
                    "end"
                  ],
                  "x-enum-descriptions": [
                    "end a webinar"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "status": "end"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar updated",
            "examples": {}
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarId}/panelists": {
      "get": {
        "summary": "List a webinar's panelists",
        "description": "List panelists for a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelists",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebinarPanelistList"
            },
            "examples": {
              "application/json": {
                "total_records": 58124314,
                "panelists": [
                  {
                    "id": "ipsum aliquip laborum",
                    "name": "commodo sed pariatur aliquip",
                    "email": "eu",
                    "join_url": "quis culpa ullamco"
                  },
                  {
                    "id": "consectetur magna dolore veniam",
                    "name": "et officia",
                    "email": "exercitation cillum minim",
                    "join_url": "Ut reprehenderit anim"
                  },
                  {
                    "id": "et sit ullamco pariatur",
                    "name": "quis ullamco mollit",
                    "email": "laborum est",
                    "join_url": "pariatur velit ad ex"
                  },
                  {
                    "id": "adipisicing sed minim exercitation nisi",
                    "name": "voluptate anim",
                    "email": "nostrud Excepteur incididunt pariatur ullamco",
                    "join_url": "enim ad eu qui"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "post": {
        "summary": "Add a webinar panelist",
        "description": "Add panelist to webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistCreate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebinarPanelist"
            },
            "x-examples": {
              "application/json": {
                "panelists": [
                  {
                    "name": "nostrud anim",
                    "email": "pariatur exercitation"
                  },
                  {
                    "name": "ea qui aute id",
                    "email": "do volup"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Panelist created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Panelist ID"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this panelist"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "delete": {
        "summary": "Remove a webinar's panelists",
        "description": "Remove all panelists from a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistsDelete",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}": {
      "delete": {
        "summary": "Remove a webinar panelist",
        "description": "Remove a panelist from a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarPanelistDelete",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "in": "path",
            "name": "panelistId",
            "description": "The panelist ID",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404": {
            "description": "Webinar or Panelist not found"
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants": {
      "get": {
        "summary": "List a webinar's registrants",
        "description": "List registrants for a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrants",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          },
          {
            "$ref": "#/parameters/RegistrantStatus"
          },
          {
            "$ref": "#/parameters/PageSize"
          },
          {
            "$ref": "#/parameters/PageNumber"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/WebinarRegistrantList"
            },
            "examples": {
              "application/json": {
                "page_count": 55404489,
                "page_size": -62603313,
                "total_records": 23731811,
                "next_page_token": "enim consequat mollit elit qui",
                "registrants": [
                  {
                    "email": "Duis cillum aute in",
                    "first_name": "vo",
                    "last_name": "ut culpa in nulla",
                    "id": "commodo sed consectetur enim",
                    "address": "occaecat consectetur adipisicing ipsum",
                    "city": "elit et in eiusmod",
                    "country": "minim quis",
                    "zip": "aliqua enim laboris incididunt",
                    "state": "in nulla",
                    "phone": "qui dolore proident in veniam",
                    "industry": "adipisicing occaecat quis reprehenderit",
                    "org": "ut magna in eu nulla",
                    "job_title": "dolore",
                    "purchasing_time_frame": "No timeframe",
                    "role_in_purchase_process": "Not involved",
                    "no_of_employees": "1-20",
                    "comments": "voluptate",
                    "custom_questions": [
                      {
                        "title": "ad adipisicing eiusmod aute",
                        "value": "enim Ut sed in ad"
                      },
                      {
                        "title": "aliquip ea",
                        "value": "occaecat Duis in enim"
                      },
                      {
                        "title": "Duis incididunt",
                        "value": "dolor"
                      },
                      {
                        "title": "dolore magna",
                        "value": "officia Excepteur et"
                      }
                    ],
                    "status": "et irure sit",
                    "create_time": "1939-04-19T03:33:30.236Z",
                    "join_url": "commodo"
                  },
                  {
                    "email": "enim",
                    "first_name": "quis",
                    "last_name": "occaecat esse",
                    "id": "enim",
                    "address": "consectetur elit Excepteur nulla",
                    "city": "aliquip ",
                    "country": "ut aute veniam",
                    "zip": "id enim occaecat",
                    "state": "venia",
                    "phone": "in magna",
                    "industry": "tempor officia dolor quis eiusmod",
                    "org": "consectetur amet",
                    "job_title": "sit eu",
                    "purchasing_time_frame": "More than 6 months",
                    "role_in_purchase_process": "Not involved",
                    "no_of_employees": "1,001-5,000",
                    "comments": "Duis cillum aute do",
                    "custom_questions": [
                      {
                        "title": "pariatur ea ",
                        "value": "commodo"
                      },
                      {
                        "title": "consequat amet et",
                        "value": "consectetur minim laborum anim qui"
                      }
                    ],
                    "status": "in deserunt sunt",
                    "create_time": "2001-03-11T18:43:46.337Z",
                    "join_url": "est"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "post": {
        "summary": "Add a webinar registrant",
        "description": "Add a registrant for a webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantCreate",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "in": "query",
            "name": "occurrence_ids",
            "type": "string",
            "description": "Occurrence IDs, could get this value from Webinar Get API. Multiple value separated by comma."
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebinarRegistrant"
            },
            "x-examples": {
              "application/json": {
                "email": "voluptate pariatur fugiat est",
                "first_name": "Ut irure Excepteur non dolor",
                "last_name": "labore aliquip qui",
                "address": "officia dolor id",
                "city": "dolor laborum sunt qui occaecat",
                "country": "veniam sit dolor ullamco",
                "zip": "eu aute",
                "state": "tempor officia",
                "phone": "et deserunt",
                "industry": "cillum ea",
                "org": "ut dolor sunt",
                "job_title": "eu",
                "purchasing_time_frame": "No timeframe",
                "role_in_purchase_process": "Not involved",
                "no_of_employees": "21-50",
                "comments": "quis proident nisi",
                "custom_questions": [
                  {
                    "title": "dolor eiusmod",
                    "value": "irure"
                  },
                  {
                    "title": "esse",
                    "value": "ad aute ea cillum"
                  },
                  {
                    "title": "adipisicing dolor",
                    "value": "id aute"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "type": "object",
              "properties": {
                "registrant_id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "id": {
                  "type": "string",
                  "description": "Registrant ID"
                },
                "topic": {
                  "type": "string",
                  "description": "Topic"
                },
                "start_time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time"
                },
                "join_url": {
                  "type": "string",
                  "description": "Join URL for this registrant"
                }
              }
            },
            "examples": {
              "application/json": {
                "registrant_id": "ci",
                "id": "proident ullamco",
                "topic": "eu labore ex",
                "start_time": "2010-06-26T11:07:34.769Z",
                "join_url": "dolore ut non dolor"
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webinars/{webinarId}/registrants/status": {
      "put": {
        "summary": "Update a webinar registrant's status",
        "description": "Update a webinar registrant's status",
        "tags": [
          "Webinars"
        ],
        "operationId": "webinarRegistrantStatus",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          },
          {
            "$ref": "#/parameters/OccurrenceId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "action"
              ],
              "properties": {
                "action": {
                  "type": "string",
                  "enum": [
                    "approve",
                    "cancel",
                    "deny"
                  ],
                  "x-enum-descriptions": [
                    "Approve registrant",
                    "Cancel registrant",
                    "Deny registrant"
                  ]
                },
                "registrants": {
                  "type": "array",
                  "description": "List of registrants",
                  "maximum": 30,
                  "items": {
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "action": "cancel",
                "registrants": [
                  {
                    "id": "et",
                    "email": "dolor occaecat nulla elit"
                  },
                  {
                    "id": "fugiat do voluptate amet",
                    "email": "dolore in nulla Ut"
                  },
                  {
                    "id": "ull",
                    "email": "ut et a"
                  },
                  {
                    "id": "exercitation et veniam",
                    "email": "nisi id"
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Webinar or Registrant not found"
          }
        }
      }
    },
    "/past_webinars/{webinarId}/instances": {
      "get": {
        "summary": "List of ended webinar instances",
        "description": "List of ended webinar instances",
        "tags": [
          "Webinars"
        ],
        "operationId": "pastWebinars",
        "parameters": [
          {
            "$ref": "#/parameters/WebinarId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ended webinar instances",
            "schema": {
              "$ref": "#/definitions/WebinarInstances"
            },
            "examples": {
              "application/json": {
                "webinars": [
                  {
                    "uuid": "culpa amet",
                    "start_time": "1959-10-11T19:44:12.001Z"
                  },
                  {
                    "uuid": "eu commodo sed pariatur",
                    "start_time": "1944-04-27T11:06:33.816Z"
                  },
                  {
                    "uuid": "consequat sunt sint laborum",
                    "start_time": "1979-11-08T01:03:57.589Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      }
    },
    "/webhooks/options": {
      "patch": {
        "summary": "Switch webhook version",
        "description": "Switch webhook version",
        "tags": [
          "Webhooks"
        ],
        "operationId": "webhookSwitch",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "required": [
                "version"
              ],
              "properties": {
                "version": {
                  "type": "string",
                  "enum": [
                    "v1",
                    "v2"
                  ],
                  "x-enum-descriptions": [
                    "Version 1",
                    "Version 2"
                  ]
                }
              }
            },
            "x-examples": {
              "application/json": {
                "version": "v2"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook Subscribe version update"
          },
          "404": {
            "description": "Webhook Subscribe not found"
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "summary": "List webhooks",
        "description": "List webhooks for a account",
        "tags": [
          "Webhooks"
        ],
        "operationId": "webhooks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of Webhook objects returned",
            "schema": {
              "$ref": "#/definitions/WebhookList"
            },
            "examples": {
              "application/json": {
                "total_records": 37617605,
                "webhooks": [
                  {
                    "url": "tempor e",
                    "auth_user": "magna ",
                    "auth_password": "ullamco v",
                    "events": "meeting_jbh",
                    "webhook_id": "irure amet",
                    "created_at": "1972-07-22T08:19:36.036Z"
                  },
                  {
                    "url": "",
                    "auth_user": "cupid",
                    "auth_password": "c",
                    "events": "meeting_jbh",
                    "webhook_id": "laboris dolore culpa sunt",
                    "created_at": "1958-03-25T07:15:29.478Z"
                  }
                ]
              }
            }
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      },
      "post": {
        "summary": "Create a webhook",
        "description": "Create a webhook for a account",
        "tags": [
          "Webhooks"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webhook",
            "schema": {
              "$ref": "#/definitions/Webhook"
            },
            "x-examples": {
              "application/json": {
                "url": "officia ",
                "auth_user": "esse m",
                "auth_password": "laborum",
                "events": "recording_completed"
              }
            }
          }
        ],
        "operationId": "webhookCreate",
        "responses": {
          "201": {
            "description": "Webhook Created",
            "headers": {
              "Content-Location": {
                "description": "Location of created Webhook",
                "type": "string"
              }
            },
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "webhook_id": {
                      "type": "string",
                      "description": "Webhook Id"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Webhook"
                },
                {
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook create time"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "url": "non",
                "auth_user": "mo",
                "auth_password": "dolore",
                "events": "meeting_ended",
                "webhook_id": "sed aliqua in",
                "created_at": "1956-02-29T11:21:16.170Z"
              }
            }
          },
          "404": {
            "description": "Account not found"
          }
        }
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "summary": "Retrieve a webhook",
        "description": "Retrieve a webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "webhook",
        "parameters": [
          {
            "$ref": "#/parameters/WebhookId"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook object returned",
            "schema": {
              "allOf": [
                {
                  "properties": {
                    "webhook_id": {
                      "type": "string",
                      "description": "Webhook Id"
                    }
                  }
                },
                {
                  "$ref": "#/definitions/Webhook"
                },
                {
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Webhook create time"
                    }
                  }
                }
              ]
            },
            "examples": {
              "application/json": {
                "url": "commodo ",
                "auth_user": "ipsu",
                "auth_password": "co",
                "events": "meeting_started",
                "webhook_id": "deserunt",
                "created_at": "1940-01-26T08:05:52.338Z"
              }
            }
          },
          "404": {
            "description": "Webinar not found"
          }
        }
      },
      "patch": {
        "summary": "Update a webhook",
        "description": "Update a webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "webhookUpdate",
        "parameters": [
          {
            "$ref": "#/parameters/WebhookId"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "description": "Webhook",
            "schema": {
              "$ref": "#/definitions/WebhookUpdate"
            },
            "x-examples": {
              "application/json": {
                "url": "do",
                "auth_user": "e",
                "auth_password": "con",
                "events": "meeting_jbh"
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook Updated"
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a webhook",
        "description": "Delete a webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "webhookDelete",
        "parameters": [
          {
            "$ref": "#/parameters/WebhookId"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted"
          },
          "404": {
            "description": "Webhook not found"
          }
        }
      }
    },
    "/im/chat/messages": {
      "post": {
        "responses": {
          "200": {
            "description": ""
          }
        },
        "summary": "Send chatbot messages",
        "operationId": "sendchatbot",
        "tags": [
          "IM Chat"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "properties": {
                "robot_jid": {
                  "type": "string",
                  "description": "Robot JID created when enabling chatbot features on your marketplace app."
                },
                "to_jid": {
                  "type": "string",
                  "description": "Unique JID of reciever. Can be a group or user."
                },
                "account_jid": {
                  "type": "string",
                  "description": "Account ID of the authorized account"
                },
                "content": {
                  "type": "string",
                  "description": "JSON template describing how the message should be displayed to the user. For more information please see our Send Message Templates."
                }
              }
            },
            "x-examples": {
              "application/json": {
                "robot_jid": "proident aliqua",
                "to_jid": "consequat aliqua et sunt",
                "account_jid": "deserunt",
                "content": "in enim"
              }
            }
          }
        ],
        "description": "Sends chatbot messages from your marketplace chatbot app."
      }
    },
    "/im/users/{userId}/channels": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "operationId": "getchatchannels",
        "tags": [
          "IM Chat"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "userId",
            "type": "string",
            "required": true
          }
        ],
        "description": "Returns user's subscribed channels with IDs.",
        "summary": "Get chat channels"
      }
    },
    "/meetings/{meetingId}/invitation": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "invitation": {
                  "type": "string"
                }
              }
            },
            "examples": {
              "application/json": {
                "invitation": "mollit in quis dolor"
              }
            }
          },
          "400": {
            "description": "Meeting ID not found"
          }
        },
        "summary": "Retrieve a meeting's invitation details",
        "operationId": "meetinginviteinfo",
        "tags": [
          "Meetings"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/MeetingId"
          }
        ]
      },
      "parameters": [
        {
          "name": "meetingId",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    }
  },
  "parameters": {
    "AccountId": {
      "in": "path",
      "name": "accountId",
      "description": "The account ID",
      "type": "string",
      "required": true
    },
    "FromDate": {
      "in": "query",
      "name": "from",
      "description": "Start Date",
      "type": "string",
      "format": "date",
      "required": true
    },
    "GroupId": {
      "in": "path",
      "name": "groupId",
      "description": "The group ID",
      "type": "string",
      "required": true
    },
    "DeviceId": {
      "in": "path",
      "name": "deviceId",
      "description": "The device ID",
      "type": "string",
      "required": true
    },
    "LoginType": {
      "in": "query",
      "name": "login_type",
      "type": "string",
      "enum": [
        0,
        1,
        99,
        100,
        101
      ],
      "x-enum-descriptions": [
        "Facebook",
        "Google",
        "API",
        "Zoom",
        "SSO"
      ]
    },
    "Mc": {
      "in": "query",
      "name": "mc",
      "description": "Query mc ",
      "type": "string",
      "default": "false"
    },
    "Trash": {
      "in": "query",
      "name": "trash",
      "description": "Query trash ",
      "type": "boolean",
      "default": false
    },
    "MeetingId": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID",
      "type": "integer",
      "required": true
    },
    "MeetingIdNumber": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or uuid",
      "type": "string",
      "required": true
    },
    "RecordingId": {
      "in": "path",
      "name": "recordingId",
      "description": "The recording ID",
      "type": "string",
      "required": true
    },
    "RecordingDeleteAction": {
      "in": "query",
      "name": "action",
      "description": "The recording delete action",
      "type": "string",
      "default": "trash",
      "enum": [
        "trash",
        "delete"
      ],
      "x-enum-descriptions": [
        "move recording to trash",
        "delete recording permanently"
      ]
    },
    "MeetingId4Metrics": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance.",
      "type": "string",
      "required": true
    },
    "MeetingUUID": {
      "in": "path",
      "name": "meetingUUID",
      "description": "The meeting UUID.",
      "type": "string",
      "required": true
    },
    "MeetingId4Recording": {
      "in": "path",
      "name": "meetingId",
      "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance.",
      "type": "string",
      "required": true
    },
    "MeetingType": {
      "in": "query",
      "name": "type",
      "description": "The meeting type",
      "type": "string",
      "default": "live",
      "enum": [
        "scheduled",
        "live",
        "upcoming"
      ],
      "x-enum-descriptions": [
        "all the scheduled meetings",
        "all the live meetings",
        "all the upcoming meetings"
      ]
    },
    "MeetingTypePast": {
      "in": "query",
      "name": "type",
      "description": "The meeting type",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "pastOne",
        "live"
      ],
      "x-enum-descriptions": [
        "past meetings",
        "past one user meetings",
        "live meetings"
      ]
    },
    "MeetingTypePast2": {
      "in": "query",
      "name": "type",
      "description": "The meeting type",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "live"
      ],
      "x-enum-descriptions": [
        "past meeting",
        "live meeting"
      ]
    },
    "MeetingTypePast3": {
      "in": "query",
      "name": "type",
      "description": "The meeting type",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "pastOne",
        "live"
      ],
      "x-enum-descriptions": [
        "past meeting",
        "past one user meeting",
        "live meeting"
      ]
    },
    "MemberId": {
      "in": "path",
      "name": "memberId",
      "description": "The member ID",
      "type": "string",
      "required": true
    },
    "NextPageToken": {
      "in": "query",
      "name": "next_page_token",
      "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
      "type": "string"
    },
    "OccurrenceId": {
      "in": "query",
      "name": "occurrence_id",
      "description": "The meeting occurrence ID",
      "type": "string"
    },
    "PageNumber": {
      "in": "query",
      "name": "page_number",
      "description": "Current page number of returned records",
      "type": "integer",
      "default": 1
    },
    "PageSize": {
      "in": "query",
      "name": "page_size",
      "description": "The number of records returned within a single API call",
      "type": "integer",
      "default": 30,
      "maximum": 300
    },
    "PageSize4Qos": {
      "in": "query",
      "name": "page_size",
      "description": "Number of items returned per page",
      "type": "integer",
      "default": 1,
      "maximum": 10
    },
    "PageToken": {
      "in": "query",
      "name": "next_page_token",
      "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
      "type": "string"
    },
    "ParticipantId": {
      "in": "path",
      "name": "participantId",
      "description": "Participant ID",
      "type": "string",
      "required": true
    },
    "RegistrantId": {
      "in": "path",
      "name": "registrantId",
      "description": "The registrant ID",
      "type": "string",
      "required": true
    },
    "RegistrantStatus": {
      "in": "query",
      "name": "status",
      "description": "The registrant status",
      "type": "string",
      "default": "approved",
      "enum": [
        "pending",
        "approved",
        "denied"
      ],
      "x-enum-descriptions": [
        "registrants status is pending",
        "registrants status is approved",
        "registrants status is denied"
      ]
    },
    "ToDate": {
      "in": "query",
      "name": "to",
      "description": "End Date",
      "type": "string",
      "format": "date",
      "required": true
    },
    "TSPId": {
      "name": "tspId",
      "description": "TSP account index",
      "in": "path",
      "type": "string",
      "required": true
    },
    "TransferEmail": {
      "in": "query",
      "name": "transfer_email",
      "description": "Transfer email",
      "type": "string",
      "required": false
    },
    "TransferMeeting": {
      "in": "query",
      "name": "transfer_meeting",
      "description": "Transfer meeting",
      "type": "boolean",
      "required": false
    },
    "TransferWebinar": {
      "in": "query",
      "name": "transfer_webinar",
      "description": "Transfer webinar",
      "type": "boolean",
      "required": false
    },
    "TransferRecording": {
      "in": "query",
      "name": "transfer_recording",
      "description": "Transfer recording",
      "type": "boolean",
      "required": false
    },
    "UserId": {
      "in": "path",
      "name": "userId",
      "description": "The user ID or email address",
      "type": "string",
      "required": true
    },
    "WebinarId": {
      "in": "path",
      "name": "webinarId",
      "description": "The webinar ID",
      "type": "integer",
      "required": true
    },
    "WebinarId4Metrics": {
      "in": "path",
      "name": "webinarId",
      "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance.",
      "type": "string",
      "required": true
    },
    "WebinarTypePast": {
      "in": "query",
      "name": "type",
      "description": "The webinar type",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "live"
      ],
      "x-enum-descriptions": [
        "past webinars",
        "live webinars"
      ]
    },
    "WebinarTypePast2": {
      "in": "query",
      "name": "type",
      "description": "The webinar type",
      "type": "string",
      "default": "live",
      "enum": [
        "past",
        "live"
      ],
      "x-enum-descriptions": [
        "past webinar",
        "live webinar"
      ]
    },
    "WebhookId": {
      "in": "path",
      "name": "webhookId",
      "description": "The webhook ID",
      "type": "string",
      "required": true
    },
    "ZoomRoomId": {
      "in": "path",
      "name": "zoomroomId",
      "description": "The Zoom Room ID",
      "type": "string",
      "required": true
    },
    "SessionId": {
      "in": "path",
      "name": "sessionId",
      "description": "IM Chat Session ID",
      "type": "string",
      "required": true
    }
  },
  "definitions": {
    "Account": {
      "type": "object",
      "description": "The account object represents an account on zoom. The person who created the account, or who the account was created for, is referred to as the account owner. You can read more about the Zoom account structure <a href='https://developer.zoom.us/blog/a-brief-look-at-zoom-account-structures/' target='_blank'>here</a>.",
      "required": [
        "email",
        "first_name",
        "last_name",
        "password"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name"
        },
        "last_name": {
          "type": "string",
          "description": "User's last name"
        },
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "password": {
          "type": "string",
          "description": "User's password"
        },
        "options": {
          "$ref": "#/definitions/AccountOptions"
        }
      }
    },
    "AccountListItem": {
      "type": "object",
      "description": "Account object in account list",
      "properties": {
        "accounts": {
          "type": "array",
          "description": "List of Account objects",
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "format": "uuid",
                "description": "Account ID"
              },
              "account_name": {
                "type": "string",
                "description": "Account name"
              },
              "owner_email": {
                "type": "string",
                "description": "Account owner email"
              },
              "account_type": {
                "type": "string",
                "description": "Account type"
              },
              "seats": {
                "type": "integer",
                "description": "Account seats"
              },
              "subscription_start_time": {
                "type": "string",
                "format": "date-time",
                "description": "Account subscription start date/time"
              },
              "subscription_end_time": {
                "type": "string",
                "format": "date-time",
                "description": "Account subscription end date/time"
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Account creation date/time"
              }
            }
          }
        }
      }
    },
    "AccountList": {
      "type": "object",
      "title": "Account List",
      "description": "List of Accounts",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "$ref": "#/definitions/AccountListItem"
        }
      ]
    },
    "AccountOptions": {
      "type": "object",
      "description": "Account options object",
      "properties": {
        "share_rc": {
          "type": "boolean",
          "description": "Enable Share Virtual Room Connector",
          "default": false
        },
        "room_connectors": {
          "type": "string",
          "description": "Virtual Room Connector, multiple value separated by comma"
        },
        "share_mc": {
          "type": "boolean",
          "description": "Enable Share Meeting Connector",
          "default": false
        },
        "meeting_connectors": {
          "type": "string",
          "description": "Meeting Connector, multiple values separated by comma"
        },
        "pay_mode": {
          "type": "string",
          "description": "Payee",
          "enum": [
            "master",
            "sub"
          ],
          "x-enum-descriptions": [
            "Master account holder pays",
            "Sub account holder pays"
          ],
          "default": "master"
        }
      }
    },
    "AccountPlan": {
      "type": "object",
      "description": "Account plan object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Account <a href=\"#plans\">plan type</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Account plan number of hosts"
        }
      }
    },
    "AccountPlanBaseRequired": {
      "type": "object",
      "description": "Account base plan object",
      "required": [
        "type",
        "hosts"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Account base <a href=\"#plans\">plan type</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999."
        }
      }
    },
    "AccountPlanRequired": {
      "type": "object",
      "description": "Account plan object",
      "required": [
        "type",
        "hosts"
      ],
      "properties": {
        "type": {
          "type": "string",
          "description": "Account <a href=\"#plans\">plan type</a>"
        },
        "hosts": {
          "type": "integer",
          "description": "Account plan number of hosts"
        }
      }
    },
    "AccountPlans": {
      "type": "object",
      "description": "Account Plans object",
      "properties": {
        "plan_base": {
          "$ref": "#/definitions/AccountPlanBaseRequired"
        },
        "plan_zoom_rooms": {
          "$ref": "#/definitions/AccountPlan"
        },
        "plan_room_connector": {
          "$ref": "#/definitions/AccountPlan"
        },
        "plan_large_meeting": {
          "type": "array",
          "description": "Additional Large Meeting Plans",
          "items": {
            "$ref": "#/definitions/AccountPlan"
          }
        },
        "plan_webinar": {
          "type": "array",
          "description": "Additional Webinar Plans",
          "items": {
            "$ref": "#/definitions/AccountPlan"
          }
        },
        "plan_recording": {
          "type": "string",
          "description": "Additional Cloud Recording Plan"
        },
        "plan_audio": {
          "type": "object",
          "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
          "properties": {
            "type": {
              "type": "string",
              "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>"
            },
            "tollfree_countries": {
              "type": "string",
              "description": "Toll-free countries, multiple value separated by comma"
            },
            "premium_countries": {
              "type": "string",
              "description": "Premium countries, multiple value separated by comma"
            },
            "callout_countries": {
              "type": "string",
              "description": "Call-out countries, multiple value separated by comma"
            },
            "ddi_numbers": {
              "type": "integer",
              "description": "Dedicated Dial-In Numbers"
            }
          }
        }
      }
    },
    "AccountSettings": {
      "title": "Account settings",
      "type": "object",
      "properties": {
        "schedule_meting": {
          "$ref": "#/definitions/AccountSettingsScheduleMeeting"
        },
        "in_meeting": {
          "$ref": "#/definitions/AccountSettingsInMeeting"
        },
        "email_notification": {
          "$ref": "#/definitions/AccountSettingsEmailNotification"
        },
        "zoom_rooms": {
          "$ref": "#/definitions/AccountSettingsZoomRooms"
        },
        "security": {
          "$ref": "#/definitions/AccountSettingsSecurity"
        },
        "recording": {
          "$ref": "#/definitions/AccountSettingsRecording"
        },
        "telephony": {
          "$ref": "#/definitions/AccountSettingsTelephony"
        },
        "integration": {
          "$ref": "#/definitions/AccountSettingsIntegration"
        },
        "feature": {
          "$ref": "#/definitions/AccountSettingsFeature"
        }
      }
    },
    "AccountSettingsScheduleMeeting": {
      "type": "object",
      "description": "Account Settings: Schedule Meeting",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start meetings with host video on"
        },
        "participant_video": {
          "type": "boolean",
          "description": "Start meetings with participant video on. Participants can change this during the meeting."
        },
        "audio_type": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ],
          "x-enum-descriptions": [
            "Telephony and VoIP",
            "Audio PSTN telephony only",
            "VoIP only",
            "3rd party audio conference"
          ]
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Allow participants to join the meeting before the host arrives"
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed-in (Zoom users) users can join meetings"
        },
        "enforce_login_with_domains": {
          "type": "boolean",
          "description": "Only signed-in users with a specific domain can join meetings"
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed-in users with a specified domains"
        },
        "not_store_meeting_topic": {
          "type": "boolean",
          "description": "Always display \"Zoom Meeting\" as the meeting topic"
        },
        "force_pmi_jbh_password": {
          "type": "boolean",
          "description": "Require a password for Personal Meetings if attendees can join before host"
        }
      }
    },
    "AccountSettingsInMeeting": {
      "type": "object",
      "description": "Account Settings: In Meeting",
      "properties": {
        "e2e_encryption": {
          "type": "boolean",
          "description": "Require that all meetings are encrypted using AES"
        },
        "chat": {
          "type": "boolean",
          "description": "Allow meeting participants to send a message visible to all participants"
        },
        "private_chat": {
          "type": "boolean",
          "description": "Allow meeting participants to send a private 1:1 message to another participants"
        },
        "auto_saving_chat": {
          "type": "boolean",
          "description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts"
        },
        "file_transfer": {
          "type": "boolean",
          "description": "Hosts and participants can send files through the in-meeting chat"
        },
        "feedback": {
          "type": "boolean",
          "description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting"
        },
        "post_meeting_feedback": {
          "type": "boolean",
          "description": "Display a thumbs up/down survey at the end of each meeting"
        },
        "co_host": {
          "type": "boolean",
          "description": "Allow the host to add co-hosts"
        },
        "polling": {
          "type": "boolean",
          "description": "Add 'Polls' to the meeting controls."
        },
        "attendee_on_hold": {
          "type": "boolean",
          "description": "Allow hosts to temporarily remove an attendee from the meeting"
        },
        "show_meeting_control_toolbar": {
          "type": "boolean",
          "description": "Always show meeting control toolbar"
        },
        "allow_show_zoom_windows": {
          "type": "boolean",
          "description": "Show Zoom Desktop application when sharing screen"
        },
        "annotation": {
          "type": "boolean",
          "description": "Allow participants to use annotation tools to add information to shared screens"
        },
        "whiteboard": {
          "type": "boolean",
          "description": "Allow participants to share a whiteboard that includes annotation tools"
        },
        "webinar_question_answer": {
          "type": "boolean",
          "description": "Q&A in webinar"
        },
        "anonymous_question_answer": {
          "type": "boolean",
          "description": "Allow Anonymous Q&A in Webinar"
        },
        "breakout_room": {
          "type": "boolean",
          "description": "Allow host to split meeting participants into separate, smaller rooms"
        },
        "closed_caption": {
          "type": "boolean",
          "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions"
        },
        "far_end_camera_control": {
          "type": "boolean",
          "description": "Allow another user to take control of your camera during a meeting"
        },
        "group_hd": {
          "type": "boolean",
          "description": "Activate higher quality video for host and participants. (This will use more bandwidth.)"
        },
        "virtual_background": {
          "type": "boolean",
          "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings."
        },
        "watermark": {
          "type": "boolean",
          "description": "Add watermark when viewing shared screen"
        },
        "alert_guest_join": {
          "type": "boolean",
          "description": "Identify guest participants in the meeting/webinar"
        },
        "auto_answer": {
          "type": "boolean",
          "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered."
        },
        "p2p_connetion": {
          "type": "boolean",
          "description": "Peer to Peer connection while only 2 people are in a meeting"
        },
        "p2p_ports": {
          "type": "boolean",
          "description": "P2P listening ports range"
        },
        "ports_range": {
          "type": "string",
          "description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
          "default": ""
        },
        "sending_default_email_invites": {
          "type": "boolean",
          "description": "Only show default email when sending email invites"
        },
        "use_html_format_email": {
          "type": "boolean",
          "description": "Use HTML format email for Outlook plugin"
        },
        "dscp_marking": {
          "type": "boolean",
          "description": "DSCP marking"
        },
        "dscp_audio": {
          "type": "integer",
          "description": "DSCP Audio",
          "minimum": 1,
          "maximum": 63
        },
        "dscp_video": {
          "type": "integer",
          "description": "DSCP Video",
          "minimum": 1,
          "maximum": 63
        },
        "stereo_audio": {
          "type": "boolean",
          "description": "Allow users to select stereo audio in their client settings"
        },
        "original_audio": {
          "type": "boolean",
          "description": "Allow users to select original sound in their client settings"
        },
        "screen_sharing": {
          "type": "boolean",
          "description": "Allow screen sharing"
        },
        "remote_control": {
          "type": "boolean",
          "description": "Allow users to request remote control"
        },
        "attention_tracking": {
          "type": "boolean",
          "description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing"
        }
      }
    },
    "AccountSettingsEmailNotification": {
      "type": "object",
      "description": "Account Settings: Notification",
      "properties": {
        "cloud_recording_avaliable_reminder": {
          "type": "boolean",
          "description": "Notify host when cloud recording is available"
        },
        "jbh_reminder": {
          "type": "boolean",
          "description": "Notify host when participants join the meeting before them"
        },
        "cancel_meeting_reminder": {
          "type": "boolean",
          "description": "Notify host and participants when the meeting is cancelled"
        },
        "low_host_count_reminder": {
          "type": "boolean",
          "description": "Notify when host licenses are running low"
        },
        "alternative_host_reminder": {
          "type": "boolean",
          "description": "Notify when an alternative host is set or removed from a meeting"
        }
      }
    },
    "AccountSettingsZoomRooms": {
      "type": "object",
      "description": "Account Settings: Zoom Rooms",
      "properties": {
        "upcoming_meeting_alert": {
          "type": "boolean",
          "description": "Upcoming meeting alert"
        },
        "start_airplay_manually": {
          "type": "boolean",
          "description": "Start AirPlay service manually"
        },
        "weekly_system_restart": {
          "type": "boolean",
          "description": "Weekly system restart"
        },
        "list_meetings_with_calendar": {
          "type": "boolean",
          "description": "Display meeting list with calendar integration"
        },
        "zr_post_meeting_feedback": {
          "type": "boolean",
          "description": "Zoom Room post meeting feedback"
        },
        "ultrasonic": {
          "type": "boolean",
          "description": "Automatic direct sharing using ultrasonic proximity signal"
        },
        "force_private_meeting": {
          "type": "boolean",
          "description": "Transform all meetings to private"
        },
        "hide_host_information": {
          "type": "boolean",
          "description": "Hide host and meeting ID from private meetings"
        },
        "cmr_for_instant_meeting": {
          "type": "boolean",
          "description": "Cloud recording for instant meetings"
        },
        "auto_start_stop_scheduled_meetings": {
          "type": "boolean",
          "description": "Automatic start/stop for scheduled meetings"
        }
      }
    },
    "AccountSettingsSecurity": {
      "type": "object",
      "description": "Account Settings: Security",
      "properties": {
        "admin_change_name_pic": {
          "type": "boolean",
          "description": "Only account administrators can change user's username and picture"
        },
        "import_photos_from_devices": {
          "type": "boolean",
          "description": "Allow importing of photos from photo library on the user's device"
        },
        "hide_billing_info": {
          "type": "boolean",
          "description": "Hide billing information"
        }
      }
    },
    "AccountSettingsRecording": {
      "type": "object",
      "description": "Account Settings: Recording",
      "properties": {
        "local_recording": {
          "type": "boolean",
          "description": "Allow hosts and participants to record the meeting to a local file"
        },
        "cloud_recording": {
          "type": "boolean",
          "description": "Allow hosts to record and save the meeting in the cloud"
        },
        "record_speaker_view": {
          "type": "boolean",
          "description": "Record active speaker with shared screen"
        },
        "record_gallery_view": {
          "type": "boolean",
          "description": "Record gallery view with shared screen"
        },
        "record_audio_file": {
          "type": "boolean",
          "description": "Record an audio only file"
        },
        "save_chat_text": {
          "type": "boolean",
          "description": "Save chat text from the meeting"
        },
        "show_timestamp": {
          "type": "boolean",
          "description": "Add a timestamp to the recording"
        },
        "recording_audio_transcript": {
          "type": "boolean",
          "description": "Automatically transcribe the audio of the meeting or webinar to the cloud"
        },
        "auto_recording": {
          "type": "string",
          "description": "Record meetings automatically as they start",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record on local",
            "Record on cloud",
            "Disabled"
          ]
        },
        "cloud_recording_download": {
          "type": "boolean",
          "description": "Cloud Recording Downloads"
        },
        "cloud_recording_download_host": {
          "type": "boolean",
          "description": "Only the host can download cloud recordings"
        },
        "account_user_access_recording": {
          "type": "boolean",
          "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings."
        },
        "auto_delete_cmr": {
          "type": "boolean",
          "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days"
        },
        "auto_delete_cmr_days": {
          "type": "integer",
          "description": "When `auto_delete_cmr` is 'true' this value will set the number of days before auto deletion of cloud recordings"
        }
      }
    },
    "AccountSettingsTelephony": {
      "type": "object",
      "description": "Account Settings: Telephony",
      "properties": {
        "third_party_audio": {
          "type": "boolean",
          "description": "Users can join the meeting using the existing 3rd party audio configuration"
        },
        "audio_conference_info": {
          "type": "string",
          "description": "3rd party audio conference info"
        }
      }
    },
    "AccountSettingsIntegration": {
      "type": "object",
      "description": "Account Settings: Integration",
      "properties": {
        "google_calendar": {
          "type": "boolean",
          "description": "Enables meetings to be scheduled using Google Calendars"
        },
        "google_drive": {
          "type": "boolean",
          "description": "Enables users who join a meeting from their mobile device to share content from their Google Drive"
        },
        "dropbox": {
          "type": "boolean",
          "description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account"
        },
        "box": {
          "type": "boolean",
          "description": "Enables users who join a meeting from their mobile device to share content from their Box account"
        },
        "microsoft_one_drive": {
          "type": "boolean",
          "description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account"
        },
        "kubi": {
          "type": "boolean",
          "description": "Enables users to control a connected Kubi device from within a Zoom meeting"
        }
      }
    },
    "AccountSettingsFeature": {
      "type": "object",
      "description": "Account Settings: Feature",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "Set the maximum number of participants this user can have in a single meeting",
          "default": 100
        }
      }
    },
    "BillingContact": {
      "type": "object",
      "description": "Billing Contact object",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "Billing Contact's first name"
        },
        "last_name": {
          "type": "string",
          "description": "Billing Contact's last name"
        },
        "email": {
          "type": "string",
          "description": "Billing Contact's email address"
        },
        "phone_number": {
          "type": "string",
          "description": "Billing Contact's phone number"
        },
        "address": {
          "type": "string",
          "description": "Billing Contact's address"
        },
        "apt": {
          "type": "string",
          "description": "Billing Contact's apartment/suite"
        },
        "city": {
          "type": "string",
          "description": "Billing Contact's city"
        },
        "state": {
          "type": "string",
          "description": "Billing Contact's state"
        },
        "zip": {
          "type": "string",
          "description": "Billing Contact's zip/postal code"
        },
        "country": {
          "type": "string",
          "description": "Billing Contact's country"
        }
      }
    },
    "BillingContactRequired": {
      "type": "object",
      "description": "Billing Contact object",
      "required": [
        "first_name",
        "last_name",
        "email",
        "phone_number",
        "address",
        "city",
        "state",
        "zip",
        "country"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "description": "Billing Contact's first name"
        },
        "last_name": {
          "type": "string",
          "description": "Billing Contact's last name"
        },
        "email": {
          "type": "string",
          "description": "Billing Contact's email address"
        },
        "phone_number": {
          "type": "string",
          "description": "Billing Contact's phone number"
        },
        "address": {
          "type": "string",
          "description": "Billing Contact's address"
        },
        "apt": {
          "type": "string",
          "description": "Billing Contact's apartment/suite"
        },
        "city": {
          "type": "string",
          "description": "Billing Contact's city"
        },
        "state": {
          "type": "string",
          "description": "Billing Contact's state"
        },
        "zip": {
          "type": "string",
          "description": "Billing Contact's zip/postal code"
        },
        "country": {
          "type": "string",
          "description": "Billing Contact's country"
        }
      }
    },
    "CustomQuestion": {
      "type": "object",
      "description": "Custom Question",
      "properties": {
        "title": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "DateTime": {
      "type": "object",
      "description": "DateTime Object",
      "properties": {
        "from": {
          "type": "string",
          "format": "date",
          "description": "Start Date,"
        },
        "to": {
          "type": "string",
          "format": "date",
          "description": "End Date"
        }
      }
    },
    "Device": {
      "type": "object",
      "title": "The H.323/SIP device object.",
      "description": "The H.323/SIP device object.",
      "required": [
        "name",
        "protocol",
        "ip",
        "encryption"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Device name",
          "maxLength": 64
        },
        "protocol": {
          "type": "string",
          "enum": [
            "H.323",
            "SIP"
          ],
          "x-enum-descriptions": [
            "H.323",
            "SIP"
          ],
          "description": "Device protocol"
        },
        "ip": {
          "type": "string",
          "description": "Device Ip"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "auto",
            "yes",
            "no"
          ],
          "x-enum-descriptions": [
            "auto",
            "yes",
            "no"
          ],
          "description": "Device encryption"
        }
      }
    },
    "DeviceList": {
      "type": "object",
      "title": "H.323/SIP Device List",
      "description": "List of H.323/SIP Devices",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "devices": {
              "type": "array",
              "description": "List of H.323/SIP Device objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Device ID"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/Device"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "Group": {
      "type": "object",
      "description": "Group object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Group name"
        },
        "total_members": {
          "type": "integer",
          "description": "Total number of members in this group"
        }
      }
    },
    "GroupList": {
      "type": "object",
      "description": "List of Groups",
      "properties": {
        "total_records": {
          "type": "integer",
          "description": "Total records"
        },
        "groups": {
          "type": "array",
          "description": "List of Group objects",
          "items": {
            "allOf": [
              {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Group ID"
                  }
                }
              },
              {
                "$ref": "#/definitions/Group"
              }
            ]
          }
        }
      }
    },
    "GroupMember": {
      "type": "object",
      "description": "Group member object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "first_name": {
          "type": "string",
          "description": "User first name"
        },
        "last_name": {
          "type": "string",
          "description": "User last name"
        },
        "type": {
          "type": "integer",
          "description": "User type"
        }
      }
    },
    "GroupMemberList": {
      "type": "object",
      "title": "Group Member List",
      "description": "List of Group Members",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "members": {
              "type": "array",
              "description": "List of Group member objects",
              "items": {
                "$ref": "#/definitions/GroupMember"
              }
            }
          }
        }
      ]
    },
    "IMGroup": {
      "type": "object",
      "description": "IM Group object",
      "allOf": [
        {
          "$ref": "#/definitions/Group"
        },
        {
          "properties": {
            "type": {
              "type": "string",
              "description": "IM Group type",
              "default": "normal",
              "enum": [
                "normal",
                "shared",
                "restricted"
              ],
              "x-enum-descriptions": [
                "Only members can see the group automatically. Other people can search members in the group.",
                "All people in the account can see the group and members automatically",
                "Nobody can see the group or search members except the members in the group"
              ]
            },
            "search_by_domain": {
              "type": "boolean",
              "description": "Members can search others in the same email domain"
            },
            "search_by_account": {
              "type": "boolean",
              "description": "Members can search others under same account"
            },
            "search_by_ma_account": {
              "type": "boolean",
              "description": "Members can search others under same master account, including all sub accounts"
            }
          }
        }
      ]
    },
    "IMGroupList": {
      "type": "object",
      "title": "IM Group List",
      "description": "List of IM Groups",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "groups": {
              "type": "array",
              "description": "List of Group objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "IM Group ID"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/IMGroup"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "Meeting": {
      "type": "object",
      "description": "Meeting object",
      "allOf": [
        {
          "$ref": "#/definitions/Session"
        }
      ]
    },
    "MeetingUpdate": {
      "type": "object",
      "description": "Meeting object",
      "allOf": [
        {
          "$ref": "#/definitions/SessionUpdate"
        }
      ]
    },
    "MeetingInfo": {
      "type": "object",
      "description": "Meeting object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time"
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Create time"
        },
        "agenda": {
          "type": "string",
          "description": "Agenda"
        },
        "start_url": {
          "type": "string",
          "description": "Start url"
        },
        "join_url": {
          "type": "string",
          "description": "Join url"
        },
        "password": {
          "type": "string",
          "description": "Meeting password"
        },
        "h323_password": {
          "type": "string",
          "description": "H.323/SIP room system password"
        },
        "occurrences": {
          "$ref": "#/definitions/Occurrences"
        },
        "settings": {
          "$ref": "#/definitions/MeetingSettings"
        }
      }
    },
    "MeetingList": {
      "type": "object",
      "title": "Group List",
      "description": "List of Meetings",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "description": "List of Meeting objects",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Meeting unique ID"
                      },
                      "id": {
                        "type": "string",
                        "description": "Meeting ID, also know as meeting number"
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the user set as host of meeting"
                      },
                      "topic": {
                        "type": "string",
                        "description": "Meeting topic"
                      },
                      "type": {
                        "type": "integer",
                        "description": "Meeting Type",
                        "enum": [
                          1,
                          2,
                          3,
                          8
                        ],
                        "x-enum-descriptions": [
                          "Instant Meeting",
                          "Scheduled Meeting",
                          "Recurring Meeting with no fixed time",
                          "Recurring Meeting with fixed time"
                        ]
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Meeting start time"
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Meeting duration"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "Timezone to format start_time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Create time"
                      },
                      "join_url": {
                        "type": "string",
                        "description": "Join url"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "MeetingMetric": {
      "type": "object",
      "title": "Meeting Metrics",
      "description": "Meeting metric details",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Meeting UUID"
        },
        "id": {
          "type": "integer",
          "description": "Meeting ID"
        },
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "host": {
          "type": "string",
          "description": "User display name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "user_type": {
          "type": "string",
          "description": "User type"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting end time"
        },
        "duration": {
          "type": "string",
          "description": "Meeting duration"
        },
        "participants": {
          "type": "integer",
          "description": "Meeting participant count"
        },
        "has_pstn": {
          "type": "boolean",
          "description": ""
        },
        "has_voip": {
          "type": "boolean",
          "description": ""
        },
        "has_3rd_party_audio": {
          "type": "boolean",
          "description": ""
        },
        "has_video": {
          "type": "boolean",
          "description": ""
        },
        "has_screen_share": {
          "type": "boolean",
          "description": ""
        },
        "has_recording": {
          "type": "boolean",
          "description": ""
        },
        "has_sip": {
          "type": "boolean",
          "description": ""
        }
      }
    },
    "MeetingSettings": {
      "type": "object",
      "description": "Meeting Settings",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start video when host joins meeting"
        },
        "participant_video": {
          "type": "boolean",
          "description": "Start video when participants join meeting"
        },
        "cn_meeting": {
          "type": "boolean",
          "description": "Host meeting in China",
          "default": false
        },
        "in_meeting": {
          "type": "boolean",
          "description": "Host meeting in India",
          "default": false
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
          "default": false
        },
        "mute_upon_entry": {
          "type": "boolean",
          "description": "Mute participants upon entry",
          "default": false
        },
        "watermark": {
          "type": "boolean",
          "description": "Add watermark when viewing shared screen",
          "default": false
        },
        "use_pmi": {
          "type": "boolean",
          "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Automatically Approve",
            "Manually Approve",
            "No Registration Required"
          ]
        },
        "registration_type": {
          "type": "integer",
          "description": "Registration type. Used for recurring meeting with fixed time only.",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Attendees register once and can attend any of the occurrences",
            "Attendees need to register for each occurrence to attend",
            "Attendees register once and can choose one or more occurrences to attend"
          ]
        },
        "audio": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip"
          ],
          "x-enum-descriptions": [
            "Both Telephony and VoIP",
            "Telephony only",
            "VoIP only"
          ]
        },
        "auto_recording": {
          "type": "string",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record to local device",
            "Record to cloud",
            "No Recording"
          ]
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed-in users can join this meeting"
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed-in users with specified domains can join meetings"
        },
        "alternative_hosts": {
          "type": "string",
          "description": "Alternative hosts emails or IDs. Multiple value separated by comma."
        }
      }
    },
    "MeetingRegistrant": {
      "type": "object",
      "description": "Meeting registrant",
      "allOf": [
        {
          "$ref": "#/definitions/Registrant"
        }
      ]
    },
    "MeetingRegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrantList"
        }
      ]
    },
    "Occurrence": {
      "type": "object",
      "description": "Occurence object",
      "properties": {
        "occurrence_id": {
          "type": "integer",
          "description": "Occurrence Id"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Start time"
        },
        "duration": {
          "type": "integer",
          "description": "Duration"
        },
        "status": {
          "type": "string",
          "description": "Occurrence status"
        }
      }
    },
    "Occurrences": {
      "type": "array",
      "description": "Array of occurrence objects",
      "items": {
        "$ref": "#/definitions/Occurrence"
      }
    },
    "Pagination": {
      "type": "object",
      "description": "Pagination Object",
      "properties": {
        "page_count": {
          "type": "integer",
          "description": "The number of items returned on this page"
        },
        "page_number": {
          "type": "integer",
          "description": "The page number of current results",
          "default": 1
        },
        "page_size": {
          "type": "integer",
          "description": "The number of records returned within a single API call",
          "default": 30,
          "maximum": 300
        },
        "total_records": {
          "type": "integer",
          "description": "The number of all records available across pages"
        }
      }
    },
    "PaginationToken": {
      "type": "object",
      "description": "Pagination Object",
      "properties": {
        "page_count": {
          "type": "integer",
          "description": "The number of items returned on this page"
        },
        "page_size": {
          "type": "integer",
          "description": "The number of records returned within a single API call.",
          "default": 30,
          "maximum": 300
        },
        "total_records": {
          "type": "integer",
          "description": "The number of all records available across pages"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4Qos": {
      "type": "object",
      "description": "Pagination Object",
      "properties": {
        "page_count": {
          "type": "integer",
          "format": "int64",
          "description": "The number of items returned on this page"
        },
        "page_size": {
          "type": "integer",
          "description": "The number of items per page",
          "default": 1,
          "maximum": 10
        },
        "total_records": {
          "type": "integer",
          "format": "int64",
          "description": "The number of all records available across pages"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4IMChat": {
      "type": "object",
      "description": "Pagination Object",
      "properties": {
        "page_size": {
          "type": "integer",
          "description": "The amount of records returns within a single API call. ",
          "default": 30,
          "maximum": 300
        },
        "next_page_token": {
          "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
          "type": "string"
        }
      }
    },
    "Panelist": {
      "type": "object",
      "description": "Panelist base object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Panelist's full name"
        },
        "email": {
          "type": "string",
          "description": "Panelist's email"
        }
      }
    },
    "PanelistList": {
      "type": "object",
      "title": "Panelist List",
      "description": "List of Panelist",
      "properties": {
        "total_records": {
          "type": "integer",
          "description": "Total records"
        },
        "panelists": {
          "type": "array",
          "description": "List of Panelist objects",
          "items": {
            "allOf": [
              {
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Panelist's ID"
                  }
                }
              },
              {
                "$ref": "#/definitions/Panelist"
              },
              {
                "properties": {
                  "join_url": {
                    "type": "string",
                    "description": "Join url"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "QOSAudio": {
      "type": "object",
      "title": "QOS Object",
      "description": "Quality of Service object",
      "properties": {
        "bitrate": {
          "type": "string",
          "description": "Bitrate"
        },
        "latency": {
          "type": "string",
          "description": "Latency"
        },
        "jitter": {
          "type": "string",
          "description": "Jitter"
        },
        "avg_loss": {
          "type": "string",
          "description": "Average Loss"
        },
        "max_loss": {
          "type": "string",
          "description": "Max Loss"
        }
      }
    },
    "QOSParticipant": {
      "type": "object",
      "title": "Participant QOS",
      "description": "Participant QOS",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid",
          "description": "Participant ID"
        },
        "user_name": {
          "type": "string",
          "description": "Participant display name"
        },
        "device": {
          "type": "string",
          "description": "Participant device"
        },
        "ip_address": {
          "type": "string",
          "description": "Participant IP Address"
        },
        "location": {
          "type": "string",
          "description": "Participant location"
        },
        "join_time": {
          "type": "string",
          "format": "date-time",
          "description": "Participant join time"
        },
        "leave_time": {
          "type": "string",
          "format": "date-time",
          "description": "Participant leave time"
        },
        "pc_name": {
          "type": "string",
          "description": "Participant PC name"
        },
        "domain": {
          "type": "string",
          "description": "Participant domain"
        },
        "mac_addr": {
          "type": "string",
          "description": "Participant MAC Address"
        },
        "harddisk_id": {
          "type": "string",
          "description": "Participant hard disk id"
        },
        "version": {
          "type": "string",
          "description": "Participant version"
        },
        "user_qos": {
          "type": "object",
          "description": "User quality of service",
          "properties": {
            "date_time": {
              "type": "string",
              "format": "date-time",
              "description": "Datetime of QOS"
            },
            "audio_input": {
              "$ref": "#/definitions/QOSAudio"
            },
            "audio_output": {
              "$ref": "#/definitions/QOSAudio"
            },
            "video_input": {
              "$ref": "#/definitions/QOSVideo"
            },
            "video_output": {
              "$ref": "#/definitions/QOSVideo"
            },
            "as_input": {
              "$ref": "#/definitions/QOSVideo"
            },
            "as_output": {
              "$ref": "#/definitions/QOSVideo"
            },
            "cpu_usage": {
              "properties": {
                "zoom_min_cpu_usage": {
                  "type": "string",
                  "description": "Zoom Minimum CPU Usage"
                },
                "zoom_avg_cpu_usage": {
                  "type": "string",
                  "description": "Zoom Average CPU Usage"
                },
                "zoom_max_cpu_usage": {
                  "type": "string",
                  "description": "Zoom Maximum CPU Usage"
                },
                "system_max_cpu_usage": {
                  "type": "string",
                  "description": "System Maximum CPU Usage"
                }
              }
            }
          }
        }
      }
    },
    "QOSParticipantList": {
      "type": "object",
      "title": "Participant QOS List",
      "description": "Participant QOS List",
      "allOf": [
        {
          "$ref": "#/definitions/PaginationToken4Qos"
        },
        {
          "properties": {
            "participants": {
              "type": "array",
              "description": "Array of user objects",
              "items": {
                "$ref": "#/definitions/QOSParticipant"
              }
            }
          }
        }
      ]
    },
    "QOSVideo": {
      "type": "object",
      "title": "QOS Object",
      "description": "Quality of Service object",
      "allOf": [
        {
          "$ref": "#/definitions/QOSAudio"
        },
        {
          "properties": {
            "resolution": {
              "type": "string",
              "description": "Resolution"
            },
            "frame_rate": {
              "type": "string",
              "description": "Frame Rate"
            }
          }
        }
      ]
    },
    "Recording": {
      "type": "object",
      "description": "Recording file Object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The recording file ID.Response in general query."
        },
        "meeting_id": {
          "type": "string",
          "description": "The meeting ID. "
        },
        "recording_start": {
          "type": "string",
          "description": "The recording start time"
        },
        "recording_end": {
          "type": "string",
          "description": "The recording end time. Response in general query."
        },
        "file_type": {
          "type": "string",
          "description": "The recording file type"
        },
        "file_size": {
          "type": "number",
          "description": "The recording file size"
        },
        "play_url": {
          "type": "string",
          "description": "The recording file play url. Response in general query."
        },
        "download_url": {
          "type": "string",
          "description": "The recording download url. Response in general query."
        },
        "status": {
          "type": "string",
          "description": "The recording status. Response in general query."
        },
        "deleted_time": {
          "type": "string",
          "description": "The recording delete time. Response in trash query."
        },
        "recording_type": {
          "type": "string",
          "description": "The recording file type, active_speaker or gallery_view"
        }
      }
    },
    "RecordingList": {
      "type": "object",
      "title": "Recording file List",
      "description": "List of Recording file",
      "allOf": [
        {
          "properties": {
            "recording_files": {
              "type": "array",
              "title": "Recording file List",
              "description": "List of Recording file",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/Recording"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "RecordingMeeting": {
      "type": "object",
      "description": "The recording meeting object",
      "allOf": [
        {
          "properties": {
            "uuid": {
              "type": "string",
              "description": "Meeting unique ID"
            },
            "id": {
              "type": "string",
              "description": "Meeting ID, also know as meeting number"
            },
            "account_id": {
              "type": "string",
              "description": "ID of the user account"
            },
            "host_id": {
              "type": "string",
              "description": "ID of the user set as host of meeting"
            },
            "topic": {
              "type": "string",
              "description": "Meeting topic"
            },
            "start_time": {
              "type": "string",
              "format": "date-time",
              "description": "Meeting start time"
            },
            "duration": {
              "type": "integer",
              "description": "Meeting duration"
            },
            "total_size": {
              "type": "string",
              "description": "Total size"
            },
            "recording_count": {
              "type": "string",
              "description": "Recording count"
            }
          }
        },
        {
          "$ref": "#/definitions/RecordingList"
        }
      ]
    },
    "RecordingMeetingList": {
      "type": "object",
      "title": "Recording List",
      "description": "List of Recording",
      "allOf": [
        {
          "$ref": "#/definitions/DateTime"
        },
        {
          "$ref": "#/definitions/PaginationToken"
        },
        {
          "properties": {
            "meetings": {
              "type": "array",
              "title": "Recording List",
              "description": "List of Recording",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/definitions/RecordingMeeting"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "Recurrence": {
      "type": "object",
      "description": "Recurrence object",
      "properties": {
        "type": {
          "type": "integer",
          "description": "Recurrence meeting type",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Daily",
            "Weekly",
            "Monthly"
          ]
        },
        "repeat_interval": {
          "type": "integer",
          "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months."
        },
        "weekly_days": {
          "type": "integer",
          "description": "Days of the week the meeting should repeat, multiple values separated by comma",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "x-enum-descriptions": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "monthly_day": {
          "type": "integer",
          "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31."
        },
        "monthly_week": {
          "type": "integer",
          "description": "Week for which the meeting should recur each month,",
          "enum": [
            -1,
            1,
            2,
            3,
            4
          ],
          "x-enum-descriptions": [
            "Last week",
            "First week",
            "Second week",
            "Third week",
            "Fourth week"
          ]
        },
        "monthly_week_day": {
          "type": "integer",
          "description": "Day for which the meeting should recur each month",
          "enum": [
            1,
            2,
            3,
            4,
            5,
            6,
            7
          ],
          "x-enum-descriptions": [
            "Sunday",
            "Monday",
            "Tuesday",
            "Wednesday",
            "Thursday",
            "Friday",
            "Saturday"
          ]
        },
        "end_times": {
          "type": "integer",
          "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)",
          "default": 1,
          "maximum": 50
        },
        "end_date_time": {
          "type": "string",
          "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
          "format": "date-time"
        }
      }
    },
    "Registrant": {
      "type": "object",
      "description": "Registrant base object",
      "required": [
        "email",
        "first_name",
        "last_name"
      ],
      "properties": {
        "email": {
          "type": "string",
          "description": "A valid email address"
        },
        "first_name": {
          "type": "string",
          "description": "User’s first name"
        },
        "last_name": {
          "type": "string",
          "description": "User’s last name"
        },
        "address": {
          "type": "string",
          "description": "Address"
        },
        "city": {
          "type": "string",
          "description": "City"
        },
        "country": {
          "type": "string",
          "description": "Country"
        },
        "zip": {
          "type": "string",
          "description": "Zip/Postal Code"
        },
        "state": {
          "type": "string",
          "description": "State/Province"
        },
        "phone": {
          "type": "string",
          "description": "Phone"
        },
        "industry": {
          "type": "string",
          "description": "Industry"
        },
        "org": {
          "type": "string",
          "description": "Organization"
        },
        "job_title": {
          "type": "string",
          "description": "Job Title"
        },
        "purchasing_time_frame": {
          "type": "string",
          "description": "Purchasing Time Frame",
          "enum": [
            "Within a month",
            "1-3 months",
            "4-6 months",
            "More than 6 months",
            "No timeframe"
          ]
        },
        "role_in_purchase_process": {
          "type": "string",
          "description": "Role in Purchase Process",
          "enum": [
            "Decision Maker",
            "Evaluator/Recommender",
            "Influencer",
            "Not involved"
          ]
        },
        "no_of_employees": {
          "type": "string",
          "description": "Number of Employees",
          "enum": [
            "1-20",
            "21-50",
            "51-100",
            "101-500",
            "500-1,000",
            "1,001-5,000",
            "5,001-10,000",
            "More than 10,000"
          ]
        },
        "comments": {
          "type": "string",
          "description": "Questions & Comments"
        },
        "custom_questions": {
          "type": "array",
          "description": "Custom Questions",
          "items": {
            "$ref": "#/definitions/CustomQuestion"
          }
        }
      }
    },
    "RegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/PaginationToken"
        },
        {
          "properties": {
            "registrants": {
              "type": "array",
              "description": "List of Registrant objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/MeetingRegistrant"
                  },
                  {
                    "properties": {
                      "status": {
                        "type": "string"
                      },
                      "create_time": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "join_url": {
                        "type": "string",
                        "format": "string"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "RegistrantStatus": {
      "type": "object",
      "description": "Registrant Status",
      "required": [
        "action"
      ],
      "properties": {
        "action": {
          "type": "string",
          "enum": [
            "approve",
            "cancel",
            "deny"
          ],
          "x-enum-descriptions": [
            "Approve registrant",
            "Cancel registrant",
            "Deny registrant"
          ]
        },
        "registrants": {
          "type": "array",
          "description": "List of registrants",
          "maximum": 30,
          "items": {
            "properties": {
              "id": {
                "type": "string"
              },
              "email": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Session": {
      "type": "object",
      "description": "Base object for sessions",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration (minutes). Used for scheduled meetings only"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Meeting description"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "settings": {
          "$ref": "#/definitions/MeetingSettings"
        }
      }
    },
    "SessionUpdate": {
      "type": "object",
      "description": "Base object for sessions",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Meeting topic"
        },
        "type": {
          "type": "integer",
          "description": "Meeting Type",
          "default": 2,
          "enum": [
            1,
            2,
            3,
            8
          ],
          "x-enum-descriptions": [
            "Instant Meeting",
            "Scheduled Meeting",
            "Recurring Meeting with no fixed time",
            "Recurring Meeting with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Meeting duration (minutes). Used for scheduled meetings only"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Meeting description"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "settings": {
          "allOf": [
            {
              "$ref": "#/definitions/MeetingSettings"
            },
            {
              "properties": {
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation Email to Registrants"
                }
              }
            }
          ]
        }
      }
    },
    "SessionWebinar": {
      "type": "object",
      "description": "Base webinar object for sessions",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic"
        },
        "type": {
          "type": "integer",
          "description": "Webinar Type",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration (minutes). Used for scheduled webinar only"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Webinar description"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "settings": {
          "$ref": "#/definitions/WebinarSettings"
        }
      }
    },
    "SessionWebinarUpdate": {
      "type": "object",
      "description": "Base webinar object for sessions",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic"
        },
        "type": {
          "type": "integer",
          "description": "Webinar Type",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time."
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration (minutes). Used for scheduled webinar only"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats."
        },
        "password": {
          "type": "string",
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters."
        },
        "agenda": {
          "type": "string",
          "description": "Webinar description"
        },
        "recurrence": {
          "$ref": "#/definitions/Recurrence"
        },
        "settings": {
          "allOf": [
            {
              "$ref": "#/definitions/WebinarSettings"
            },
            {
              "properties": {
                "registrants_confirmation_email": {
                  "type": "boolean",
                  "description": "Send confirmation Email to Registrants"
                }
              }
            }
          ]
        }
      }
    },
    "TSP": {
      "type": "object",
      "title": "TSP Accounts List",
      "description": "List of TSP Accounts",
      "properties": {
        "conference_code": {
          "type": "string",
          "description": "Conference code, numeric value, length is less than 16.",
          "minLength": 1,
          "maxLength": 16
        },
        "leader_pin": {
          "type": "string",
          "description": "Leader PIN, numeric value, length is less than 16.",
          "minLength": 1,
          "maxLength": 16
        },
        "dial_in_numbers": {
          "type": "array",
          "description": "List of Dial In Numbers",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Country Code",
                "maxLength": 6
              },
              "number": {
                "type": "string",
                "description": "Dial-in number, length is less than 16.",
                "minLength": 1,
                "maxLength": 16
              },
              "type": {
                "type": "string",
                "description": "Dial-in number type.",
                "enum": [
                  "toll",
                  "tollfree",
                  "media_link"
                ],
                "x-enum-descriptions": [
                  "Toll number <br/>",
                  "Toll free number <br/>",
                  "Media link phone number <br/>"
                ]
              }
            }
          }
        }
      },
      "required": [
        "conference_code",
        "leader_pin"
      ]
    },
    "PAC": {
      "type": "object",
      "title": "PAC Accounts List",
      "description": "List of PAC Accounts",
      "properties": {
        "dedicated_dial_in_number": {
          "type": "array",
          "description": "List of Dedicated Dial In Numbers",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Dial-in number, length is less than 16"
              },
              "country": {
                "type": "string",
                "description": "Country Code"
              }
            }
          }
        },
        "global_dial_in_numbers": {
          "type": "array",
          "description": "List of Global Dial In Numbers",
          "items": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Dial-in number, length is less than 16"
              },
              "country": {
                "type": "string",
                "description": "Country Code"
              }
            }
          }
        },
        "conference_id": {
          "type": "integer",
          "description": "Conference ID"
        },
        "participant_password": {
          "type": "string",
          "description": "Participant Password, numeric value, length is less than 6"
        },
        "listen_only_password": {
          "type": "string",
          "description": "Listen-Only Password, numeric value, length is less than 6"
        }
      }
    },
    "User": {
      "type": "object",
      "description": "The user object represents a User on Zoom",
      "required": [
        "email",
        "type"
      ],
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name",
          "maxLength": 64
        },
        "last_name": {
          "type": "string",
          "description": "User's last name",
          "maxLength": 64
        },
        "email": {
          "type": "string",
          "description": "User's email address"
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "basic",
            "pro",
            "corp"
          ],
          "description": "User's type"
        },
        "pmi": {
          "type": "string",
          "description": "Personal Meeting ID"
        },
        "timezone": {
          "type": "string",
          "description": "Time Zone"
        },
        "dept": {
          "type": "string",
          "description": "Department"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "User create time"
        },
        "last_login_time": {
          "type": "string",
          "format": "date-time",
          "description": "User last login time"
        },
        "last_client_version": {
          "type": "string",
          "description": "User last login client version"
        }
      }
    },
    "UserUpdate": {
      "type": "object",
      "description": "The user update object represents a User on Zoom",
      "properties": {
        "first_name": {
          "type": "string",
          "description": "User's first name. Cannot contain more than 5 Chinese words.",
          "maxLength": 64
        },
        "last_name": {
          "type": "string",
          "description": "User's last name. Cannot contain more than 5 Chinese words.",
          "maxLength": 64
        },
        "type": {
          "type": "integer",
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "basic",
            "pro",
            "corp"
          ],
          "description": "User's type"
        },
        "pmi": {
          "type": "string",
          "description": "Personal Meeting ID,length must be 10",
          "minLength": 10,
          "maxLength": 10
        },
        "timezone": {
          "type": "string",
          "description": "The time zone id for user profile. For this parameter value please refer to the id value in [timezone](#timezones) list.",
          "format": "date-time"
        },
        "dept": {
          "type": "string",
          "description": "Department for user profile, use for report"
        },
        "vanity_name": {
          "type": "string",
          "description": "Personal meeting room name"
        },
        "host_key": {
          "type": "string",
          "description": "Host Key, should be 6-digit number",
          "minLength": 6,
          "maxLength": 6
        },
        "cms_user_id": {
          "type": "string",
          "description": "Kaltura User Id"
        }
      }
    },
    "UserList": {
      "type": "object",
      "title": "User List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "users": {
              "type": "array",
              "description": "List of User objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "User ID"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/User"
                  },
                  {
                    "properties": {
                      "group_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "im_group_ids": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "UserAssistantsList": {
      "type": "object",
      "title": "User assistants List",
      "description": "List of User's assistants",
      "properties": {
        "assistants": {
          "type": "array",
          "description": "List of User's assistants",
          "maximum": 30,
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User email address. Must have id or email, if given id, the email is ignored."
              }
            }
          }
        }
      }
    },
    "UserSchedulersList": {
      "type": "object",
      "title": "User schedulers List",
      "description": "List of User's schedulers",
      "properties": {
        "assistants": {
          "type": "array",
          "description": "List of User's schedulers.",
          "maximum": 30,
          "items": {
            "properties": {
              "id": {
                "type": "string",
                "description": "User ID"
              },
              "email": {
                "type": "string",
                "description": "User email address."
              }
            }
          }
        }
      }
    },
    "UserSettings": {
      "title": "User settings",
      "type": "object",
      "properties": {
        "schedule_meeting": {
          "$ref": "#/definitions/UserSettingsScheduleMeeting"
        },
        "in_meeting": {
          "$ref": "#/definitions/UserSettingsInMeeting"
        },
        "email_notification": {
          "$ref": "#/definitions/UserSettingsEmailNotification"
        },
        "recording": {
          "$ref": "#/definitions/UserSettingsRecording"
        },
        "telephony": {
          "$ref": "#/definitions/UserSettingsTelephony"
        },
        "feature": {
          "$ref": "#/definitions/UserSettingsFeature"
        }
      }
    },
    "UserSettingsUpdate": {
      "title": "User settings",
      "type": "object",
      "properties": {
        "schedule_meeting": {
          "$ref": "#/definitions/UserSettingsScheduleMeeting"
        },
        "in_meeting": {
          "$ref": "#/definitions/UserSettingsInMeeting"
        },
        "email_notification": {
          "$ref": "#/definitions/UserSettingsEmailNotification"
        },
        "recording": {
          "$ref": "#/definitions/UserSettingsRecording"
        },
        "telephony": {
          "$ref": "#/definitions/UserSettingsTelephony"
        },
        "feature": {
          "$ref": "#/definitions/UserSettingsFeatureUpdate"
        }
      }
    },
    "UserSettingsScheduleMeeting": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Host video"
        },
        "participants_video": {
          "type": "boolean",
          "description": "Participants video"
        },
        "audio_type": {
          "type": "string",
          "default": "voip",
          "description": "Determine how participants can join the audio portion of the meeting",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ],
          "x-enum-descriptions": [
            "Telephony and VoIP",
            "Audio PSTN telephony only",
            "VoIP only",
            "3rd party audio conference"
          ]
        },
        "join_before_host": {
          "type": "boolean",
          "description": "Join before host"
        },
        "force_pmi_jbh_password": {
          "type": "boolean",
          "description": "Require a password for Personal Meetings if attendees can join before host"
        },
        "pstn_password_protected": {
          "type": "boolean",
          "description": "Generate and require password for participants joining by phone"
        }
      }
    },
    "UserSettingsInMeeting": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "e2e_encryption": {
          "type": "boolean",
          "description": "End-to-end encryption"
        },
        "chat": {
          "type": "boolean",
          "default": false,
          "description": "Chat"
        },
        "private_chat": {
          "type": "boolean",
          "default": false,
          "description": "Private chat"
        },
        "auto_saving_chat": {
          "type": "boolean",
          "default": false,
          "description": "Auto saving chats"
        },
        "entry_exit_chime": {
          "type": "string",
          "default": "all",
          "description": "Play sound on join/leave",
          "enum": [
            "host",
            "all",
            "none"
          ],
          "x-enum-descriptions": [
            "when host joins/leaves",
            "when any participant joins/leaves",
            "no join/leave sound"
          ]
        },
        "record_play_voice": {
          "type": "boolean",
          "description": "Record and play their own voice"
        },
        "file_transfer": {
          "type": "boolean",
          "default": false,
          "description": "File transfer"
        },
        "feedback": {
          "type": "boolean",
          "default": false,
          "description": "Feedback to Zoom"
        },
        "co_host": {
          "type": "boolean",
          "default": false,
          "description": "Co-host"
        },
        "polling": {
          "type": "boolean",
          "default": false,
          "description": "Polling"
        },
        "attendee_on_hold": {
          "type": "boolean",
          "default": false,
          "description": "Allow host to put attendee on hold"
        },
        "annotation": {
          "type": "boolean",
          "default": false,
          "description": "Annotation"
        },
        "remote_control": {
          "type": "boolean",
          "default": false,
          "description": "Remote control"
        },
        "non_verbal_feedback": {
          "type": "boolean",
          "default": false,
          "description": "Non-verbal feedback"
        },
        "breakout_room": {
          "type": "boolean",
          "default": false,
          "description": "Breakout room"
        },
        "remote_support": {
          "type": "boolean",
          "default": false,
          "description": "Remote support"
        },
        "closed_caption": {
          "type": "boolean",
          "default": false,
          "description": "Closed caption"
        },
        "group_hd": {
          "type": "boolean",
          "default": false,
          "description": "Group HD video"
        },
        "virtual_background": {
          "type": "boolean",
          "default": false,
          "description": "Virtual background"
        },
        "far_end_camera_control": {
          "type": "boolean",
          "default": false,
          "description": "Far end camera control"
        },
        "share_dual_camera": {
          "type": "boolean",
          "default": false,
          "description": "Share dual camera (Deprecated)"
        },
        "attention_tracking": {
          "type": "boolean",
          "default": false,
          "description": "Attention tracking"
        },
        "waiting_room": {
          "type": "boolean",
          "default": false,
          "description": "Waiting room"
        }
      }
    },
    "UserSettingsEmailNotification": {
      "title": "User settings: Notification settings",
      "description": "",
      "type": "object",
      "properties": {
        "jbh_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When attendees join meeting before host"
        },
        "cancel_meeting_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When a meeting is cancelled"
        },
        "alternative_host_reminder": {
          "type": "boolean",
          "default": false,
          "description": "When an alternative host is set or removed from a meeting"
        }
      }
    },
    "UserSettingsRecording": {
      "title": "User settings: Recording settings",
      "description": "",
      "type": "object",
      "properties": {
        "local_recording": {
          "type": "boolean",
          "description": "Local recording"
        },
        "cloud_recording": {
          "type": "boolean",
          "default": false,
          "description": "Cloud recording"
        },
        "record_speaker_view": {
          "type": "boolean",
          "default": false,
          "description": "Record the active speaker view"
        },
        "record_gallery_view": {
          "type": "boolean",
          "default": false,
          "description": "Record the gallery view"
        },
        "record_audio_file": {
          "type": "boolean",
          "default": false,
          "description": "Record an audio only file"
        },
        "save_chat_text": {
          "type": "boolean",
          "default": false,
          "description": "Save chat text from the meeting"
        },
        "show_timestamp": {
          "type": "boolean",
          "default": false,
          "description": "Show timestamp on video"
        },
        "recording_audio_transcript": {
          "type": "boolean",
          "description": "Audio transcript"
        },
        "auto_recording": {
          "type": "string",
          "default": "local",
          "description": "Automatic recording",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record on local",
            "Record on cloud",
            "Disabled"
          ]
        },
        "auto_delete_cmr": {
          "type": "boolean",
          "default": false,
          "description": "Auto delete cloud recordings"
        },
        "auto_delete_cmr_days": {
          "type": "integer",
          "description": "A specified number of days of auto delete cloud recordings",
          "minimum": 1,
          "maximum": 60,
          "default": false
        }
      }
    },
    "UserSettingsTelephony": {
      "title": "User settings: Meeting settings",
      "description": "",
      "type": "object",
      "properties": {
        "third_party_audio": {
          "type": "boolean",
          "description": "3rd party audio conference"
        },
        "audio_conference_info": {
          "type": "string",
          "default": "",
          "description": "3rd party audio conference info",
          "maxLength": 2048
        },
        "show_international_numbers_link": {
          "type": "boolean",
          "description": "Show international numbers link on the invitation email"
        }
      }
    },
    "UserSettingsFeature": {
      "title": "User settings: Feature settings",
      "description": "",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "User’s meeting capacity"
        },
        "large_meeting": {
          "type": "boolean",
          "description": "Large meting feature"
        },
        "large_meeting_capacity": {
          "type": "integer",
          "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not"
        },
        "webinar": {
          "type": "boolean",
          "description": "Webinar feature"
        },
        "webinar_capacity": {
          "type": "integer",
          "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not"
        },
        "cn_meeting": {
          "type": "boolean",
          "description": "CN meeting feature"
        },
        "in_meeting": {
          "type": "boolean",
          "description": "IN meeting feature"
        }
      }
    },
    "UserSettingsFeatureUpdate": {
      "title": "User settings: Feature settings",
      "description": "",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "type": "integer",
          "description": "User’s meeting capacity"
        },
        "large_meeting": {
          "type": "boolean",
          "description": "Large meting feature"
        },
        "large_meeting_capacity": {
          "type": "integer",
          "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not"
        },
        "webinar": {
          "type": "boolean",
          "description": "Webinar feature"
        },
        "webinar_capacity": {
          "type": "integer",
          "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not"
        }
      }
    },
    "UserPermissions": {
      "type": "object",
      "description": "",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of user permissions"
        }
      }
    },
    "Webinar": {
      "type": "object",
      "description": "Webinar object",
      "allOf": [
        {
          "$ref": "#/definitions/SessionWebinar"
        }
      ]
    },
    "WebinarUpdate": {
      "type": "object",
      "description": "Webinar object",
      "allOf": [
        {
          "$ref": "#/definitions/SessionWebinarUpdate"
        }
      ]
    },
    "WebinarInfo": {
      "type": "object",
      "description": "Webinar object",
      "properties": {
        "topic": {
          "type": "string",
          "description": "Webinar topic"
        },
        "type": {
          "type": "integer",
          "description": "Webinar Type",
          "default": 5,
          "enum": [
            5,
            6,
            9
          ],
          "x-enum-descriptions": [
            "Webinar",
            "Recurring Webinar with no fixed time",
            "Recurring Webinar with fixed time"
          ]
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time"
        },
        "duration": {
          "type": "integer",
          "description": "Webinar duration"
        },
        "timezone": {
          "type": "string",
          "description": "Timezone to format start_time"
        },
        "agenda": {
          "type": "string",
          "description": "Webinar agenda"
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Create time"
        },
        "start_url": {
          "type": "string",
          "description": "Start url"
        },
        "join_url": {
          "type": "string",
          "description": "Join url"
        },
        "occurrences": {
          "$ref": "#/definitions/Occurrences"
        },
        "settings": {
          "$ref": "#/definitions/WebinarSettings"
        }
      }
    },
    "WebinarList": {
      "type": "object",
      "title": "User List",
      "description": "List of Webinars",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "webinars": {
              "type": "array",
              "description": "List of Webinar objects",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "Webinar unique ID"
                      },
                      "id": {
                        "type": "string",
                        "description": "Webinar ID, also know as webinar number"
                      },
                      "host_id": {
                        "type": "string",
                        "description": "ID of the user set as host of webinar"
                      },
                      "topic": {
                        "type": "string",
                        "description": "Meeting topic"
                      },
                      "type": {
                        "type": "integer",
                        "description": "Meeting Type",
                        "enum": [
                          5,
                          6,
                          9
                        ],
                        "x-enum-descriptions": [
                          "Webinar",
                          "Recurring Webinar with no fixed time",
                          "Recurring Webinar with fixed time"
                        ]
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Meeting duration"
                      },
                      "timezone": {
                        "type": "string",
                        "description": "Timezone to format start_time"
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Create time"
                      },
                      "join_url": {
                        "type": "string",
                        "description": "Join url"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "WebinarInstances": {
      "type": "object",
      "title": "Webinar instances",
      "description": "List of Webinars",
      "allOf": [
        {
          "properties": {
            "webinars": {
              "type": "array",
              "description": "List of ended webinar instances.",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "type": "string",
                        "description": "WebinarUUID"
                      },
                      "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "WebinarMetric": {
      "type": "object",
      "title": "Webinar Metrics",
      "description": "Webinar metric details",
      "properties": {
        "uuid": {
          "type": "string",
          "format": "uuid",
          "description": "Webinar UUID"
        },
        "id": {
          "type": "integer",
          "description": "Webinar ID"
        },
        "topic": {
          "type": "string",
          "description": "Webinar topic"
        },
        "host": {
          "type": "string",
          "description": "User display name"
        },
        "email": {
          "type": "string",
          "description": "User email"
        },
        "user_type": {
          "type": "string",
          "description": "User type"
        },
        "start_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar start time"
        },
        "end_time": {
          "type": "string",
          "format": "date-time",
          "description": "Webinar end time"
        },
        "duration": {
          "type": "string",
          "description": "Webinar duration"
        },
        "participants": {
          "type": "integer",
          "description": "Webinar participant count"
        },
        "has_pstn": {
          "type": "boolean",
          "description": ""
        },
        "has_voip": {
          "type": "boolean",
          "description": ""
        },
        "has_3rd_party_audio": {
          "type": "boolean",
          "description": ""
        },
        "has_video": {
          "type": "boolean",
          "description": ""
        },
        "has_screen_share": {
          "type": "boolean",
          "description": ""
        },
        "has_recording": {
          "type": "boolean",
          "description": ""
        },
        "has_sip": {
          "type": "boolean",
          "description": ""
        }
      }
    },
    "WebinarPanelist": {
      "type": "object",
      "description": "Webinar panelist",
      "properties": {
        "panelists": {
          "type": "array",
          "description": "List of Panelist objects",
          "items": {
            "allOf": [
              {
                "$ref": "#/definitions/Panelist"
              }
            ]
          }
        }
      }
    },
    "WebinarPanelistList": {
      "type": "object",
      "description": "Webinar panelist",
      "allOf": [
        {
          "$ref": "#/definitions/PanelistList"
        }
      ]
    },
    "WebinarRegistrant": {
      "type": "object",
      "description": "Webianr registrant",
      "allOf": [
        {
          "$ref": "#/definitions/Registrant"
        }
      ]
    },
    "WebinarRegistrantList": {
      "type": "object",
      "title": "Registration List",
      "description": "List of Users",
      "allOf": [
        {
          "$ref": "#/definitions/RegistrantList"
        }
      ]
    },
    "WebinarSettings": {
      "type": "object",
      "description": "Webinar Settings",
      "properties": {
        "host_video": {
          "type": "boolean",
          "description": "Start video when host joins webinar"
        },
        "panelists_video": {
          "type": "boolean",
          "description": "Start video when panelists join webinar"
        },
        "practice_session": {
          "type": "boolean",
          "description": "Enable Practice Session",
          "default": false
        },
        "hd_video": {
          "type": "boolean",
          "description": "Default to HD Video",
          "default": false
        },
        "approval_type": {
          "type": "integer",
          "default": 2,
          "enum": [
            0,
            1,
            2
          ],
          "x-enum-descriptions": [
            "Automatically Approve",
            "Manually Approve",
            "No Registration Required"
          ]
        },
        "registration_type": {
          "type": "integer",
          "description": "Registration type. Used for recurring webinar with fixed time only.",
          "default": 1,
          "enum": [
            1,
            2,
            3
          ],
          "x-enum-descriptions": [
            "Attendees register once and can attend any of the occurrences",
            "Attendees need to register for each occurrence to attend",
            "Attendees register once and can choose one or more occurrences to attend"
          ]
        },
        "audio": {
          "type": "string",
          "description": "Determine how participants can join the audio portion of the meeting",
          "default": "both",
          "enum": [
            "both",
            "telephony",
            "voip"
          ],
          "x-enum-descriptions": [
            "Both Telephony and VoIP",
            "Telephony only",
            "VoIP only"
          ]
        },
        "auto_recording": {
          "type": "string",
          "default": "none",
          "enum": [
            "local",
            "cloud",
            "none"
          ],
          "x-enum-descriptions": [
            "Record to local device",
            "Record to cloud",
            "No Recording"
          ]
        },
        "enforce_login": {
          "type": "boolean",
          "description": "Only signed-in users can join this meeting"
        },
        "enforce_login_domains": {
          "type": "string",
          "description": "Only signed-in users with specified domains can join meetings"
        },
        "alternative_hosts": {
          "type": "string",
          "description": "Alternative hosts emails or IDs. Multiple values separated by comma."
        },
        "close_registration": {
          "type": "boolean",
          "description": "Close registration after event date"
        },
        "show_share_button": {
          "type": "boolean",
          "description": "Show social share buttons on registration page"
        },
        "allow_multiple_devices": {
          "type": "boolean",
          "description": "Allow attendees to join from multiple devices"
        }
      }
    },
    "Webhook": {
      "type": "object",
      "description": "Webhook base object, only available for version 2 webhook",
      "required": [
        "url",
        "auth_user",
        "auth_password",
        "events"
      ],
      "properties": {
        "url": {
          "type": "string",
          "description": "Webhook endpoint",
          "maxLength": 256
        },
        "auth_user": {
          "type": "string",
          "description": "Webhook auth user name",
          "maxLength": 128
        },
        "auth_password": {
          "type": "string",
          "description": "Webhook auth password",
          "maxLength": 64
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "List of events objects.",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ],
          "x-enum-descriptions": [
            "The meeting has started.",
            "The meeting has ended.",
            "Attendee has joined a meeting before the host.",
            "Host hasn’t launched the meeting, attendee is waiting.",
            "All the Cloud Recordings have completed processing and is available.",
            "Participant has joined the meeting.",
            "Participant has leaved the meeting.",
            "Attendee registered for a meeting or webinar.",
            "Recording audio transcript files have processed and are available."
          ]
        }
      }
    },
    "WebhookUpdate": {
      "type": "object",
      "description": "Webhook base object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Webhook endpoint",
          "maxLength": 256
        },
        "auth_user": {
          "type": "string",
          "description": "Webhook auth user name",
          "maxLength": 128
        },
        "auth_password": {
          "type": "string",
          "description": "Webhook auth password",
          "maxLength": 64
        },
        "events": {
          "type": "array",
          "description": "List of events objects",
          "items": {
            "type": "string"
          },
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ],
          "x-enum-descriptions": [
            "The meeting has started.",
            "The meeting has ended.",
            "Attendee has joined a meeting before the host.",
            "Host hasn’t launched the meeting, attendee is waiting.",
            "All the Cloud Recordings has completed processing and is available.",
            "Participant has joined the meeting.",
            "Participant has leaved the meeting.",
            "Attendee registered for a meeting or webinar.",
            "Recording audio transcript files have processed and are available."
          ]
        }
      }
    },
    "WebhookList": {
      "type": "object",
      "title": "Webhook List",
      "description": "List of Webhooks",
      "allOf": [
        {
          "properties": {
            "total_records": {
              "type": "integer",
              "description": "The number of all records available across pages"
            },
            "webhooks": {
              "type": "array",
              "description": "List of Webhook objects",
              "items": {
                "allOf": [
                  {
                    "properties": {
                      "webhook_id": {
                        "type": "string",
                        "description": "Webhook Id"
                      }
                    }
                  },
                  {
                    "$ref": "#/definitions/Webhook"
                  },
                  {
                    "properties": {
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Webhook create time"
                      }
                    }
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "ZoomRoom": {
      "type": "object",
      "title": "Zoom Room",
      "description": "Zoom Room",
      "properties": {
        "id": {
          "type": "string",
          "description": "Zoom Room ID"
        },
        "room_name": {
          "type": "string",
          "description": "Zoom Room name"
        },
        "calender_name": {
          "type": "string",
          "description": "Zoom Calendar name"
        },
        "email": {
          "type": "string",
          "description": "Zoom Room email"
        },
        "account_type": {
          "type": "string",
          "description": "Zoom Room email type"
        },
        "status": {
          "type": "string",
          "description": "Zoom Room status"
        },
        "device_ip": {
          "type": "string",
          "description": "Zoom Room device IP"
        },
        "camera": {
          "type": "string",
          "description": "Zoom Room camera"
        },
        "microphone": {
          "type": "string",
          "description": "Zoom Room microphone"
        },
        "speaker": {
          "type": "string",
          "description": "Zoom Room speaker"
        },
        "last_start_time": {
          "type": "string",
          "description": "Zoom Room last start time"
        }
      }
    },
    "ZoomRoomList": {
      "type": "object",
      "title": "Zoom Room List",
      "description": "Zoom Room List",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "zoom_rooms": {
              "type": "array",
              "description": "Array of Zoom Rooms",
              "items": {
                "$ref": "#/definitions/ZoomRoom"
              }
            }
          }
        }
      ]
    }
  },
  "tags": [
    {
      "name": "Accounts",
      "description": "Account operations"
    },
    {
      "name": "Billing",
      "description": "Billing operations"
    },
    {
      "name": "Users",
      "description": "User operations"
    },
    {
      "name": "Meetings",
      "description": "Meeting operations"
    },
    {
      "name": "Webinars",
      "description": "Webinar operations"
    },
    {
      "name": "Groups",
      "description": "Group operations"
    },
    {
      "name": "IM Groups",
      "description": "IM Group operations"
    },
    {
      "name": "IM Chat",
      "description": "IM Chat operations"
    },
    {
      "name": "Cloud Recording",
      "description": "Cloud Recording operations"
    },
    {
      "name": "Reports",
      "description": "Report operations"
    },
    {
      "name": "Dashboards",
      "description": "Dashboard operations"
    },
    {
      "name": "Webhooks",
      "description": "Webhook operations"
    },
    {
      "name": "TSP",
      "description": "TSP operations"
    },
    {
      "name": "PAC",
      "description": "PAC operations"
    },
    {
      "name": "Devices",
      "description": "H323 Device operations"
    },
    {
      "name": "Master Account APIs",
      "description": "APIs available to the Master Account for a Zoom account."
    }
  ],
  "securityDefinitions": {
    "global": {
      "type": "apiKey",
      "name": "access_token",
      "in": "query"
    }
  },
  "security": [
    {
      "global": []
    }
  ]
}
