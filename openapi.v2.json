{
  "swagger": "2.0",
  "x-explorer-enabled": false,
  "info": {
    "version": "2.0.0",
    "title": "Zoom API",
    "description": "API Description"
  },
  "host": "api.zoom.us",
  "basePath": "/v2",
  "securityDefinitions": {},
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "description": "List all the sub accounts under the master account",
        "summary": "List accounts",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Account list returned",
            "schema": {
              "title": "Account List",
              "description": "Account list returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "accounts": {
                  "description": "List of Account objects",
                  "type": "array",
                  "items": {
                    "title": "Account4",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Account ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "account_name": {
                        "description": "Account name",
                        "type": "string"
                      },
                      "owner_email": {
                        "description": "Account owner email",
                        "type": "string"
                      },
                      "account_type": {
                        "description": "Account type",
                        "type": "string"
                      },
                      "seats": {
                        "description": "Account seats",
                        "type": "integer",
                        "format": "int32"
                      },
                      "subscription_start_time": {
                        "description": "Account subscription start date/time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "subscription_end_time": {
                        "description": "Account subscription end date/time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "created_at": {
                        "description": "Account creation date/time",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/accounts?page_size=30&page_number=1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test List accounts",
            "x-testDescription": "List all the sub accounts under the master account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a sub account under the master account. <aside>Your account must be a master account and have this privilege to create sub account. Zoom only assigns this privilege to trusted partners. The created user will not receive a confirmation email.</aside>.",
        "summary": "Create account",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Account",
            "schema": {
              "title": "Account",
              "description": "Account",
              "type": "object",
              "properties": {
                "first_name": {
                  "description": "User's first name",
                  "type": "string"
                },
                "last_name": {
                  "description": "User's last name",
                  "type": "string"
                },
                "email": {
                  "description": "User's email address",
                  "type": "string"
                },
                "password": {
                  "description": "User's password",
                  "type": "string"
                },
                "options": {
                  "title": "options",
                  "type": "object",
                  "properties": {
                    "share_rc": {
                      "description": "Enable Share Virtual Room Connector",
                      "example": false,
                      "type": "boolean"
                    },
                    "room_connectors": {
                      "description": "Virtual Room Connector, multiple value separated by comma",
                      "type": "string"
                    },
                    "share_mc": {
                      "description": "Enable Share Meeting Connector",
                      "example": false,
                      "type": "boolean"
                    },
                    "meeting_connectors": {
                      "description": "Meeting Connector, multiple values separated by comma",
                      "type": "string"
                    },
                    "pay_mode": {
                      "title": "pay_mode",
                      "example": "master",
                      "x-enum-elements": [
                        {
                          "name": "master",
                          "description": ""
                        },
                        {
                          "name": "sub",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "master",
                        "sub"
                      ]
                    }
                  }
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "password"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account Created",
            "schema": {
              "title": "accountCreateResponse",
              "description": "Account Created",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Account ID",
                  "type": "string"
                },
                "owner_id": {
                  "description": "Account Owner ID",
                  "type": "string"
                },
                "owner_email": {
                  "description": "Account owner email",
                  "type": "string"
                },
                "created_at": {
                  "description": "Account created date time",
                  "type": "string"
                }
              }
            }
          },
          "409": {
            "description": "Account with that email already exists",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}": {
      "get": {
        "description": "Retrieve a sub account under the master account. <aside>Your account must be a master account and have this privilege to read sub accounts. Zoom only assigns this privilege to trusted partners</aside>.",
        "summary": "Get single account",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account object returned",
            "schema": {
              "title": "accountResponse",
              "description": "Account object returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Account ID",
                  "type": "string"
                },
                "owner_id": {
                  "description": "Account Owner ID",
                  "type": "string"
                },
                "owner_email": {
                  "description": "Account Owner email",
                  "type": "string"
                },
                "created_at": {
                  "description": "Account creation date/time",
                  "type": "string",
                  "format": "date-time"
                },
                "options": {
                  "title": "options",
                  "type": "object",
                  "properties": {
                    "share_rc": {
                      "description": "Enable Share Virtual Room Connector",
                      "example": false,
                      "type": "boolean"
                    },
                    "room_connectors": {
                      "description": "Virtual Room Connector, multiple value separated by comma",
                      "type": "string"
                    },
                    "share_mc": {
                      "description": "Enable Share Meeting Connector",
                      "example": false,
                      "type": "boolean"
                    },
                    "meeting_connectors": {
                      "description": "Meeting Connector, multiple values separated by comma",
                      "type": "string"
                    },
                    "pay_mode": {
                      "title": "pay_mode",
                      "example": "master",
                      "x-enum-elements": [
                        {
                          "name": "master",
                          "description": ""
                        },
                        {
                          "name": "sub",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "master",
                        "sub"
                      ]
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Disassociate a sub account from the master account. This will leave the account intact but the sub account will not longer be associated with the master account.",
        "summary": "Delete account",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsByAccountIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Account deleted"
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/options": {
      "patch": {
        "description": "Update a sub account's options under the master account",
        "summary": "Update account options",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsOptionsByAccountIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "options",
              "type": "object",
              "properties": {
                "share_rc": {
                  "description": "Enable Share Virtual Room Connector",
                  "example": false,
                  "type": "boolean"
                },
                "room_connectors": {
                  "description": "Virtual Room Connector, multiple value separated by comma",
                  "type": "string"
                },
                "share_mc": {
                  "description": "Enable Share Meeting Connector",
                  "example": false,
                  "type": "boolean"
                },
                "meeting_connectors": {
                  "description": "Meeting Connector, multiple values separated by comma",
                  "type": "string"
                },
                "pay_mode": {
                  "title": "pay_mode",
                  "example": "master",
                  "x-enum-elements": [
                    {
                      "name": "master",
                      "description": ""
                    },
                    {
                      "name": "sub",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "master",
                    "sub"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account options updated"
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/settings": {
      "get": {
        "description": "Retrieve a sub account's settings under the master account",
        "summary": "Get account settings",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsSettingsByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account settings returned",
            "schema": {
              "title": "Account settings",
              "description": "Account settings returned",
              "type": "object",
              "properties": {
                "schedule_meting": {
                  "title": "schedule_meeting",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start meetings with host video on",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start meetings with participant video on. Participants can change this during the meeting\n`both` Telephony and VoIP\n`telephony` Audio PSTN telephony only\n`voip` VoIP only\n`thirdParty` 3rd party audio conference.",
                      "type": "boolean"
                    },
                    "audio_type": {
                      "title": "audio_type",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        },
                        {
                          "name": "thirdParty",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip",
                        "thirdParty"
                      ]
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host arrives",
                      "type": "boolean"
                    },
                    "enforce_login": {
                      "description": "Only signed-in (Zoom users) users can join meetings",
                      "type": "boolean"
                    },
                    "enforce_login_with_domains": {
                      "description": "Only signed-in users with a specific domain can join meetings",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with a specified domains",
                      "type": "string"
                    },
                    "not_store_meeting_topic": {
                      "description": "Always display \"Zoom Meeting\" as the meeting topic",
                      "type": "boolean"
                    },
                    "force_pmi_jbh_password": {
                      "description": "Require a password for Personal Meetings if attendees can join before host",
                      "type": "boolean"
                    }
                  }
                },
                "in_meeting": {
                  "title": "in_meeting",
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "description": "Require that all meetings are encrypted using AES",
                      "type": "boolean"
                    },
                    "chat": {
                      "description": "Allow meeting participants to send a message visible to all participants",
                      "type": "boolean"
                    },
                    "private_chat": {
                      "description": "Allow meeting participants to send a private 1:1 message to another participants",
                      "type": "boolean"
                    },
                    "auto_saving_chat": {
                      "description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts",
                      "type": "boolean"
                    },
                    "file_transfer": {
                      "description": "Hosts and participants can send files through the in-meeting chat",
                      "type": "boolean"
                    },
                    "feedback": {
                      "description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting",
                      "type": "boolean"
                    },
                    "post_meeting_feedback": {
                      "description": "Display a thumbs up/down survey at the end of each meeting",
                      "type": "boolean"
                    },
                    "co_host": {
                      "description": "Allow the host to add co-hosts",
                      "type": "boolean"
                    },
                    "polling": {
                      "description": "Add 'Polls' to the meeting controls.",
                      "type": "boolean"
                    },
                    "attendee_on_hold": {
                      "description": "Allow hosts to temporarily remove an attendee from the meeting",
                      "type": "boolean"
                    },
                    "show_meeting_control_toolbar": {
                      "description": "Always show meeting control toolbar",
                      "type": "boolean"
                    },
                    "allow_show_zoom_windows": {
                      "description": "Show Zoom Desktop application when sharing screen",
                      "type": "boolean"
                    },
                    "annotation": {
                      "description": "Allow participants to use annotation tools to add information to shared screens",
                      "type": "boolean"
                    },
                    "whiteboard": {
                      "description": "Allow participants to share a whiteboard that includes annotation tools",
                      "type": "boolean"
                    },
                    "webinar_question_answer": {
                      "description": "Q&A in webinar",
                      "type": "boolean"
                    },
                    "anonymous_question_answer": {
                      "description": "Allow Anonymous Q&A in Webinar",
                      "type": "boolean"
                    },
                    "breakout_room": {
                      "description": "Allow host to split meeting participants into separate, smaller rooms",
                      "type": "boolean"
                    },
                    "closed_caption": {
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions",
                      "type": "boolean"
                    },
                    "far_end_camera_control": {
                      "description": "Allow another user to take control of your camera during a meeting",
                      "type": "boolean"
                    },
                    "group_hd": {
                      "description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
                      "type": "boolean"
                    },
                    "virtual_background": {
                      "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "type": "boolean"
                    },
                    "alert_guest_join": {
                      "description": "Identify guest participants in the meeting/webinar",
                      "type": "boolean"
                    },
                    "auto_answer": {
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                      "type": "boolean"
                    },
                    "p2p_connetion": {
                      "description": "Peer to Peer connection while only 2 people are in a meeting",
                      "type": "boolean"
                    },
                    "p2p_ports": {
                      "description": "P2P listening ports range",
                      "type": "boolean"
                    },
                    "ports_range": {
                      "description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
                      "type": "string"
                    },
                    "sending_default_email_invites": {
                      "description": "Only show default email when sending email invites",
                      "type": "boolean"
                    },
                    "use_html_format_email": {
                      "description": "Use HTML format email for Outlook plugin",
                      "type": "boolean"
                    },
                    "dscp_marking": {
                      "description": "DSCP marking",
                      "type": "boolean"
                    },
                    "dscp_audio": {
                      "description": "DSCP Audio\n**minimum:** 1\n**maximum:** 63",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 63,
                      "format": "int32"
                    },
                    "dscp_video": {
                      "description": "DSCP Video\n**minimum:** 1\n**maximum:** 63",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 63,
                      "format": "int32"
                    },
                    "stereo_audio": {
                      "description": "Allow users to select stereo audio in their client settings",
                      "type": "boolean"
                    },
                    "original_audio": {
                      "description": "Allow users to select original sound in their client settings",
                      "type": "boolean"
                    },
                    "screen_sharing": {
                      "description": "Allow screen sharing",
                      "type": "boolean"
                    },
                    "remote_control": {
                      "description": "Allow users to request remote control",
                      "type": "boolean"
                    },
                    "attention_tracking": {
                      "description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing",
                      "type": "boolean"
                    }
                  }
                },
                "email_notification": {
                  "title": "email_notification",
                  "type": "object",
                  "properties": {
                    "cloud_recording_avaliable_reminder": {
                      "description": "Notify host when cloud recording is available",
                      "type": "boolean"
                    },
                    "jbh_reminder": {
                      "description": "Notify host when participants join the meeting before them",
                      "type": "boolean"
                    },
                    "cancel_meeting_reminder": {
                      "description": "Notify host and participants when the meeting is cancelled",
                      "type": "boolean"
                    },
                    "low_host_count_reminder": {
                      "description": "Notify when host licenses are running low",
                      "type": "boolean"
                    },
                    "alternative_host_reminder": {
                      "description": "Notify when an alternative host is set or removed from a meeting",
                      "type": "boolean"
                    }
                  }
                },
                "zoom_rooms": {
                  "title": "zoom_rooms",
                  "type": "object",
                  "properties": {
                    "upcoming_meeting_alert": {
                      "description": "Upcoming meeting alert",
                      "type": "boolean"
                    },
                    "start_airplay_manually": {
                      "description": "Start AirPlay service manually",
                      "type": "boolean"
                    },
                    "weekly_system_restart": {
                      "description": "Weekly system restart",
                      "type": "boolean"
                    },
                    "list_meetings_with_calendar": {
                      "description": "Display meeting list with calendar integration",
                      "type": "boolean"
                    },
                    "zr_post_meeting_feedback": {
                      "description": "Zoom Room post meeting feedback",
                      "type": "boolean"
                    },
                    "ultrasonic": {
                      "description": "Automatic direct sharing using ultrasonic proximity signal",
                      "type": "boolean"
                    },
                    "force_private_meeting": {
                      "description": "Transform all meetings to private",
                      "type": "boolean"
                    },
                    "hide_host_information": {
                      "description": "Hide host and meeting ID from private meetings",
                      "type": "boolean"
                    },
                    "cmr_for_instant_meeting": {
                      "description": "Cloud recording for instant meetings",
                      "type": "boolean"
                    },
                    "auto_start_stop_scheduled_meetings": {
                      "description": "Automatic start/stop for scheduled meetings",
                      "type": "boolean"
                    }
                  }
                },
                "security": {
                  "title": "security",
                  "type": "object",
                  "properties": {
                    "admin_change_name_pic": {
                      "description": "Only account administrators can change user's username and picture",
                      "type": "boolean"
                    },
                    "import_photos_from_devices": {
                      "description": "Allow importing of photos from photo library on the user's device",
                      "type": "boolean"
                    },
                    "hide_billing_info": {
                      "description": "Hide billing information",
                      "type": "boolean"
                    }
                  }
                },
                "recording": {
                  "title": "recording",
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "description": "Allow hosts and participants to record the meeting to a local file",
                      "type": "boolean"
                    },
                    "cloud_recording": {
                      "description": "Allow hosts to record and save the meeting in the cloud",
                      "type": "boolean"
                    },
                    "record_speaker_view": {
                      "description": "Record active speaker with shared screen",
                      "type": "boolean"
                    },
                    "record_gallery_view": {
                      "description": "Record gallery view with shared screen",
                      "type": "boolean"
                    },
                    "record_audio_file": {
                      "description": "Record an audio only file",
                      "type": "boolean"
                    },
                    "save_chat_text": {
                      "description": "Save chat text from the meeting",
                      "type": "boolean"
                    },
                    "show_timestamp": {
                      "description": "Add a timestamp to the recording",
                      "type": "boolean"
                    },
                    "recording_audio_transcript": {
                      "description": "Automatically transcribe the audio of the meeting or webinar to the cloud",
                      "type": "boolean"
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "cloud_recording_download": {
                      "description": "Cloud Recording Downloads",
                      "type": "boolean"
                    },
                    "cloud_recording_download_host": {
                      "description": "Only the host can download cloud recordings",
                      "type": "boolean"
                    },
                    "account_user_access_recording": {
                      "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
                      "type": "boolean"
                    },
                    "auto_delete_cmr": {
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
                      "type": "boolean"
                    },
                    "auto_delete_cmr_days": {
                      "description": "When `auto_delete_cmr` is 'true' this value will set the number of days before auto deletion of cloud recordings",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "telephony": {
                  "title": "telephony",
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "description": "Users can join the meeting using the existing 3rd party audio configuration",
                      "type": "boolean"
                    },
                    "audio_conference_info": {
                      "description": "3rd party audio conference info",
                      "type": "string"
                    }
                  }
                },
                "integration": {
                  "title": "integration",
                  "type": "object",
                  "properties": {
                    "google_calendar": {
                      "description": "Enables meetings to be scheduled using Google Calendars",
                      "type": "boolean"
                    },
                    "google_drive": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Google Drive",
                      "type": "boolean"
                    },
                    "dropbox": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account",
                      "type": "boolean"
                    },
                    "box": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Box account",
                      "type": "boolean"
                    },
                    "microsoft_one_drive": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account",
                      "type": "boolean"
                    },
                    "kubi": {
                      "description": "Enables users to control a connected Kubi device from within a Zoom meeting",
                      "type": "boolean"
                    }
                  }
                },
                "feature": {
                  "title": "feature",
                  "type": "object",
                  "properties": {
                    "meeting_capacity": {
                      "description": "Set the maximum number of participants this user can have in a single meeting",
                      "example": 100,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a sub account's settings under the master account",
        "summary": "Update account settings",
        "tags": [
          "Accounts"
        ],
        "operationId": "AccountsSettingsByAccountIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Account settings",
              "description": "Account settings returned",
              "type": "object",
              "properties": {
                "schedule_meting": {
                  "title": "schedule_meeting",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start meetings with host video on",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start meetings with participant video on. Participants can change this during the meeting\n`both` Telephony and VoIP\n`telephony` Audio PSTN telephony only\n`voip` VoIP only\n`thirdParty` 3rd party audio conference.",
                      "type": "boolean"
                    },
                    "audio_type": {
                      "title": "audio_type",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        },
                        {
                          "name": "thirdParty",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip",
                        "thirdParty"
                      ]
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host arrives",
                      "type": "boolean"
                    },
                    "enforce_login": {
                      "description": "Only signed-in (Zoom users) users can join meetings",
                      "type": "boolean"
                    },
                    "enforce_login_with_domains": {
                      "description": "Only signed-in users with a specific domain can join meetings",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with a specified domains",
                      "type": "string"
                    },
                    "not_store_meeting_topic": {
                      "description": "Always display \"Zoom Meeting\" as the meeting topic",
                      "type": "boolean"
                    },
                    "force_pmi_jbh_password": {
                      "description": "Require a password for Personal Meetings if attendees can join before host",
                      "type": "boolean"
                    }
                  }
                },
                "in_meeting": {
                  "title": "in_meeting",
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "description": "Require that all meetings are encrypted using AES",
                      "type": "boolean"
                    },
                    "chat": {
                      "description": "Allow meeting participants to send a message visible to all participants",
                      "type": "boolean"
                    },
                    "private_chat": {
                      "description": "Allow meeting participants to send a private 1:1 message to another participants",
                      "type": "boolean"
                    },
                    "auto_saving_chat": {
                      "description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts",
                      "type": "boolean"
                    },
                    "file_transfer": {
                      "description": "Hosts and participants can send files through the in-meeting chat",
                      "type": "boolean"
                    },
                    "feedback": {
                      "description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting",
                      "type": "boolean"
                    },
                    "post_meeting_feedback": {
                      "description": "Display a thumbs up/down survey at the end of each meeting",
                      "type": "boolean"
                    },
                    "co_host": {
                      "description": "Allow the host to add co-hosts",
                      "type": "boolean"
                    },
                    "polling": {
                      "description": "Add 'Polls' to the meeting controls.",
                      "type": "boolean"
                    },
                    "attendee_on_hold": {
                      "description": "Allow hosts to temporarily remove an attendee from the meeting",
                      "type": "boolean"
                    },
                    "show_meeting_control_toolbar": {
                      "description": "Always show meeting control toolbar",
                      "type": "boolean"
                    },
                    "allow_show_zoom_windows": {
                      "description": "Show Zoom Desktop application when sharing screen",
                      "type": "boolean"
                    },
                    "annotation": {
                      "description": "Allow participants to use annotation tools to add information to shared screens",
                      "type": "boolean"
                    },
                    "whiteboard": {
                      "description": "Allow participants to share a whiteboard that includes annotation tools",
                      "type": "boolean"
                    },
                    "webinar_question_answer": {
                      "description": "Q&A in webinar",
                      "type": "boolean"
                    },
                    "anonymous_question_answer": {
                      "description": "Allow Anonymous Q&A in Webinar",
                      "type": "boolean"
                    },
                    "breakout_room": {
                      "description": "Allow host to split meeting participants into separate, smaller rooms",
                      "type": "boolean"
                    },
                    "closed_caption": {
                      "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions",
                      "type": "boolean"
                    },
                    "far_end_camera_control": {
                      "description": "Allow another user to take control of your camera during a meeting",
                      "type": "boolean"
                    },
                    "group_hd": {
                      "description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
                      "type": "boolean"
                    },
                    "virtual_background": {
                      "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "type": "boolean"
                    },
                    "alert_guest_join": {
                      "description": "Identify guest participants in the meeting/webinar",
                      "type": "boolean"
                    },
                    "auto_answer": {
                      "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
                      "type": "boolean"
                    },
                    "p2p_connetion": {
                      "description": "Peer to Peer connection while only 2 people are in a meeting",
                      "type": "boolean"
                    },
                    "p2p_ports": {
                      "description": "P2P listening ports range",
                      "type": "boolean"
                    },
                    "ports_range": {
                      "description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
                      "type": "string"
                    },
                    "sending_default_email_invites": {
                      "description": "Only show default email when sending email invites",
                      "type": "boolean"
                    },
                    "use_html_format_email": {
                      "description": "Use HTML format email for Outlook plugin",
                      "type": "boolean"
                    },
                    "dscp_marking": {
                      "description": "DSCP marking",
                      "type": "boolean"
                    },
                    "dscp_audio": {
                      "description": "DSCP Audio\n**minimum:** 1\n**maximum:** 63",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 63,
                      "format": "int32"
                    },
                    "dscp_video": {
                      "description": "DSCP Video\n**minimum:** 1\n**maximum:** 63",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 63,
                      "format": "int32"
                    },
                    "stereo_audio": {
                      "description": "Allow users to select stereo audio in their client settings",
                      "type": "boolean"
                    },
                    "original_audio": {
                      "description": "Allow users to select original sound in their client settings",
                      "type": "boolean"
                    },
                    "screen_sharing": {
                      "description": "Allow screen sharing",
                      "type": "boolean"
                    },
                    "remote_control": {
                      "description": "Allow users to request remote control",
                      "type": "boolean"
                    },
                    "attention_tracking": {
                      "description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing",
                      "type": "boolean"
                    }
                  }
                },
                "email_notification": {
                  "title": "email_notification",
                  "type": "object",
                  "properties": {
                    "cloud_recording_avaliable_reminder": {
                      "description": "Notify host when cloud recording is available",
                      "type": "boolean"
                    },
                    "jbh_reminder": {
                      "description": "Notify host when participants join the meeting before them",
                      "type": "boolean"
                    },
                    "cancel_meeting_reminder": {
                      "description": "Notify host and participants when the meeting is cancelled",
                      "type": "boolean"
                    },
                    "low_host_count_reminder": {
                      "description": "Notify when host licenses are running low",
                      "type": "boolean"
                    },
                    "alternative_host_reminder": {
                      "description": "Notify when an alternative host is set or removed from a meeting",
                      "type": "boolean"
                    }
                  }
                },
                "zoom_rooms": {
                  "title": "zoom_rooms",
                  "type": "object",
                  "properties": {
                    "upcoming_meeting_alert": {
                      "description": "Upcoming meeting alert",
                      "type": "boolean"
                    },
                    "start_airplay_manually": {
                      "description": "Start AirPlay service manually",
                      "type": "boolean"
                    },
                    "weekly_system_restart": {
                      "description": "Weekly system restart",
                      "type": "boolean"
                    },
                    "list_meetings_with_calendar": {
                      "description": "Display meeting list with calendar integration",
                      "type": "boolean"
                    },
                    "zr_post_meeting_feedback": {
                      "description": "Zoom Room post meeting feedback",
                      "type": "boolean"
                    },
                    "ultrasonic": {
                      "description": "Automatic direct sharing using ultrasonic proximity signal",
                      "type": "boolean"
                    },
                    "force_private_meeting": {
                      "description": "Transform all meetings to private",
                      "type": "boolean"
                    },
                    "hide_host_information": {
                      "description": "Hide host and meeting ID from private meetings",
                      "type": "boolean"
                    },
                    "cmr_for_instant_meeting": {
                      "description": "Cloud recording for instant meetings",
                      "type": "boolean"
                    },
                    "auto_start_stop_scheduled_meetings": {
                      "description": "Automatic start/stop for scheduled meetings",
                      "type": "boolean"
                    }
                  }
                },
                "security": {
                  "title": "security",
                  "type": "object",
                  "properties": {
                    "admin_change_name_pic": {
                      "description": "Only account administrators can change user's username and picture",
                      "type": "boolean"
                    },
                    "import_photos_from_devices": {
                      "description": "Allow importing of photos from photo library on the user's device",
                      "type": "boolean"
                    },
                    "hide_billing_info": {
                      "description": "Hide billing information",
                      "type": "boolean"
                    }
                  }
                },
                "recording": {
                  "title": "recording",
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "description": "Allow hosts and participants to record the meeting to a local file",
                      "type": "boolean"
                    },
                    "cloud_recording": {
                      "description": "Allow hosts to record and save the meeting in the cloud",
                      "type": "boolean"
                    },
                    "record_speaker_view": {
                      "description": "Record active speaker with shared screen",
                      "type": "boolean"
                    },
                    "record_gallery_view": {
                      "description": "Record gallery view with shared screen",
                      "type": "boolean"
                    },
                    "record_audio_file": {
                      "description": "Record an audio only file",
                      "type": "boolean"
                    },
                    "save_chat_text": {
                      "description": "Save chat text from the meeting",
                      "type": "boolean"
                    },
                    "show_timestamp": {
                      "description": "Add a timestamp to the recording",
                      "type": "boolean"
                    },
                    "recording_audio_transcript": {
                      "description": "Automatically transcribe the audio of the meeting or webinar to the cloud",
                      "type": "boolean"
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "cloud_recording_download": {
                      "description": "Cloud Recording Downloads",
                      "type": "boolean"
                    },
                    "cloud_recording_download_host": {
                      "description": "Only the host can download cloud recordings",
                      "type": "boolean"
                    },
                    "account_user_access_recording": {
                      "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
                      "type": "boolean"
                    },
                    "auto_delete_cmr": {
                      "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
                      "type": "boolean"
                    },
                    "auto_delete_cmr_days": {
                      "description": "When `auto_delete_cmr` is 'true' this value will set the number of days before auto deletion of cloud recordings",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "telephony": {
                  "title": "telephony",
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "description": "Users can join the meeting using the existing 3rd party audio configuration",
                      "type": "boolean"
                    },
                    "audio_conference_info": {
                      "description": "3rd party audio conference info",
                      "type": "string"
                    }
                  }
                },
                "integration": {
                  "title": "integration",
                  "type": "object",
                  "properties": {
                    "google_calendar": {
                      "description": "Enables meetings to be scheduled using Google Calendars",
                      "type": "boolean"
                    },
                    "google_drive": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Google Drive",
                      "type": "boolean"
                    },
                    "dropbox": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account",
                      "type": "boolean"
                    },
                    "box": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Box account",
                      "type": "boolean"
                    },
                    "microsoft_one_drive": {
                      "description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account",
                      "type": "boolean"
                    },
                    "kubi": {
                      "description": "Enables users to control a connected Kubi device from within a Zoom meeting",
                      "type": "boolean"
                    }
                  }
                },
                "feature": {
                  "title": "feature",
                  "type": "object",
                  "properties": {
                    "meeting_capacity": {
                      "description": "Set the maximum number of participants this user can have in a single meeting",
                      "example": 100,
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account settings updated"
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/billing": {
      "get": {
        "description": "Retrieve billing information for a sub account under the master account",
        "summary": "Get billing information",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsBillingByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account billing contact information returned",
            "schema": {
              "title": "contact",
              "description": "Account billing contact information returned",
              "type": "object",
              "properties": {
                "first_name": {
                  "description": "Billing Contact's first name",
                  "type": "string"
                },
                "last_name": {
                  "description": "Billing Contact's last name",
                  "type": "string"
                },
                "email": {
                  "description": "Billing Contact's email address",
                  "type": "string"
                },
                "phone_number": {
                  "description": "Billing Contact's phone number",
                  "type": "string"
                },
                "address": {
                  "description": "Billing Contact's address",
                  "type": "string"
                },
                "city": {
                  "description": "Billing Contact's city",
                  "type": "string"
                },
                "state": {
                  "description": "Billing Contact's state",
                  "type": "string"
                },
                "zip": {
                  "description": "Billing Contact's zip/postal code",
                  "type": "string"
                },
                "country": {
                  "description": "Billing Contact's country",
                  "type": "string"
                },
                "apt": {
                  "description": "Billing Contact's apartment/suite",
                  "type": "string"
                }
              },
              "required": [
                "first_name",
                "last_name",
                "email",
                "phone_number",
                "address",
                "city",
                "state",
                "zip",
                "country"
              ]
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update billing information for a sub account under the master account <aside>Only for the sub account which is a paid account and paid by master account</aside>",
        "summary": "Update billing information",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsBillingByAccountIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "BillingContact",
              "description": "Billing Contact object",
              "type": "object",
              "properties": {
                "first_name": {
                  "description": "Billing Contact's first name",
                  "type": "string"
                },
                "last_name": {
                  "description": "Billing Contact's last name",
                  "type": "string"
                },
                "email": {
                  "description": "Billing Contact's email address",
                  "type": "string"
                },
                "phone_number": {
                  "description": "Billing Contact's phone number",
                  "type": "string"
                },
                "address": {
                  "description": "Billing Contact's address",
                  "type": "string"
                },
                "apt": {
                  "description": "Billing Contact's apartment/suite",
                  "type": "string"
                },
                "city": {
                  "description": "Billing Contact's city",
                  "type": "string"
                },
                "state": {
                  "description": "Billing Contact's state",
                  "type": "string"
                },
                "zip": {
                  "description": "Billing Contact's zip/postal code",
                  "type": "string"
                },
                "country": {
                  "description": "Billing Contact's country",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account billing contact information updated"
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/plans": {
      "get": {
        "description": "Retrieve plan information for a sub account under the master account  <aside>Only for the sub account which is paid by master account</aside>",
        "summary": "Get account plans",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsPlansByAccountIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Account plans returned",
            "schema": {
              "title": "AccountPlans",
              "description": "Account plans returned",
              "type": "object",
              "properties": {
                "plan_base": {
                  "title": "plan_base",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account base <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                "plan_zoom_rooms": {
                  "title": "plan_zoom_rooms",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_room_connector": {
                  "title": "plan_room_connector",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_large_meeting": {
                  "description": "Additional Large Meeting Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_large_meeting",
                    "description": "Additional Large Meeting Plans",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Additional Large Meeting Plans",
                        "type": "string"
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "description": "Additional Webinar Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_webinar",
                    "description": "Additional Webinar Plans",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Additional Webinar Plans",
                        "type": "string"
                      }
                    }
                  }
                },
                "plan_recording": {
                  "description": "Additional Cloud Recording Plan",
                  "type": "string"
                },
                "plan_audio": {
                  "title": "plan_audio",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "tollfree_countries": {
                      "description": "Toll-free countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "premium_countries": {
                      "description": "Premium countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "callout_countries": {
                      "description": "Call-out countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "ddi_numbers": {
                      "description": "Dedicated Dial-In Numbers",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Account not fond",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Subscribe plans for a sub account of the master account <aside>Can only subscribe plans for the sub account which is a free account and paid by master account</aside>",
        "summary": "Add a plan(s)",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsPlansByAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body",
              "type": "object",
              "properties": {
                "contact": {
                  "title": "contact",
                  "description": "Account billing contact information returned",
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "description": "Billing Contact's first name",
                      "type": "string"
                    },
                    "last_name": {
                      "description": "Billing Contact's last name",
                      "type": "string"
                    },
                    "email": {
                      "description": "Billing Contact's email address",
                      "type": "string"
                    },
                    "phone_number": {
                      "description": "Billing Contact's phone number",
                      "type": "string"
                    },
                    "address": {
                      "description": "Billing Contact's address",
                      "type": "string"
                    },
                    "city": {
                      "description": "Billing Contact's city",
                      "type": "string"
                    },
                    "state": {
                      "description": "Billing Contact's state",
                      "type": "string"
                    },
                    "zip": {
                      "description": "Billing Contact's zip/postal code",
                      "type": "string"
                    },
                    "country": {
                      "description": "Billing Contact's country",
                      "type": "string"
                    },
                    "apt": {
                      "description": "Billing Contact's apartment/suite",
                      "type": "string"
                    }
                  },
                  "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "phone_number",
                    "address",
                    "city",
                    "state",
                    "zip",
                    "country"
                  ]
                },
                "plan_base": {
                  "title": "plan_base",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account base <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                "plan_zoom_rooms": {
                  "title": "plan_zoom_rooms",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_room_connector": {
                  "title": "plan_zoom_rooms",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_large_meeting": {
                  "description": "Additional Large Meeting Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_zoom_rooms",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Account <a href=\"#plans\">plan type</a>",
                        "type": "string"
                      },
                      "hosts": {
                        "description": "Account plan number of hosts",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "description": "Additional Webinar Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_zoom_rooms",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Account <a href=\"#plans\">plan type</a>",
                        "type": "string"
                      },
                      "hosts": {
                        "description": "Account plan number of hosts",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                },
                "plan_recording": {
                  "description": "Additional Cloud Recording Plan",
                  "type": "string"
                },
                "plan_audio": {
                  "title": "plan_audio",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "tollfree_countries": {
                      "description": "Toll-free countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "premium_countries": {
                      "description": "Premium countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "callout_countries": {
                      "description": "Call-out countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "ddi_numbers": {
                      "description": "Dedicated Dial-In Numbers",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account plans updated",
            "schema": {
              "title": "AccountPlans",
              "description": "Account plans returned",
              "type": "object",
              "properties": {
                "plan_base": {
                  "title": "plan_base",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account base <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "required": [
                    "type",
                    "hosts"
                  ]
                },
                "plan_zoom_rooms": {
                  "title": "plan_zoom_rooms",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_room_connector": {
                  "title": "plan_room_connector",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Account <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "hosts": {
                      "description": "Account plan number of hosts",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                },
                "plan_large_meeting": {
                  "description": "Additional Large Meeting Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_large_meeting",
                    "description": "Additional Large Meeting Plans",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Additional Large Meeting Plans",
                        "type": "string"
                      }
                    }
                  }
                },
                "plan_webinar": {
                  "description": "Additional Webinar Plans",
                  "type": "array",
                  "items": {
                    "title": "plan_webinar",
                    "description": "Additional Webinar Plans",
                    "type": "object",
                    "properties": {
                      "type": {
                        "description": "Additional Webinar Plans",
                        "type": "string"
                      }
                    }
                  }
                },
                "plan_recording": {
                  "description": "Additional Cloud Recording Plan",
                  "type": "string"
                },
                "plan_audio": {
                  "title": "plan_audio",
                  "type": "object",
                  "properties": {
                    "type": {
                      "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
                      "type": "string"
                    },
                    "tollfree_countries": {
                      "description": "Toll-free countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "premium_countries": {
                      "description": "Premium countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "callout_countries": {
                      "description": "Call-out countries, multiple value separated by comma",
                      "type": "string"
                    },
                    "ddi_numbers": {
                      "description": "Dedicated Dial-In Numbers",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/plans/base": {
      "put": {
        "description": "Update a base plan for a sub account <aside>Can only update a base plan for the sub account which is a paid account and paid by master account</aside>",
        "summary": "Update plan base",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsPlansBaseByAccountIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "plan_base",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Account base <a href=\"#plans\">plan type</a>",
                  "type": "string"
                },
                "hosts": {
                  "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "required": [
                "type",
                "hosts"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account plans updated"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/accounts/{accountId}/plans/addons": {
      "put": {
        "description": "Update an additional plan for sub account<aside>Can only update an Additional plan for the sub account which is a paid account and paid by master account</aside>",
        "summary": "Update addons",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsPlansAddonsByAccountIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "AccountPlanRequired",
              "description": "Account plan object",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Account <a href=\"#plans\">plan type</a>",
                  "type": "string"
                },
                "hosts": {
                  "description": "Account plan number of hosts",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "required": [
                "type",
                "hosts"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Account plans updated"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add an additional plan for sub account <aside>Can only add an Additional plan for the sub account which is a paid account and paid by master account</aside>",
        "summary": "Add addition addons",
        "tags": [
          "Billing"
        ],
        "operationId": "AccountsPlansAddonsByAccountIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "accountId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The account ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "AccountPlanRequired",
              "description": "Account plan object",
              "type": "object",
              "properties": {
                "type": {
                  "description": "Account <a href=\"#plans\">plan type</a>",
                  "type": "string"
                },
                "hosts": {
                  "description": "Account plan number of hosts",
                  "type": "integer",
                  "format": "int32"
                }
              },
              "required": [
                "type",
                "hosts"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Account plans updated"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users": {
      "get": {
        "description": "List users on your account",
        "summary": "Get users",
        "tags": [
          "Users"
        ],
        "operationId": "UsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "active",
              "inactive",
              "pending"
            ],
            "x-enum-elements": [
              {
                "name": "active",
                "description": ""
              },
              {
                "name": "inactive",
                "description": ""
              },
              {
                "name": "pending",
                "description": ""
              }
            ],
            "type": "string",
            "description": "User status\n**default:** Active\n`active` users with active status\n`inactive` users with inactive status\n`pending` users with pending status"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "User list returned",
            "schema": {
              "title": "User List",
              "description": "User list returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "users": {
                  "description": "List of User objects",
                  "type": "array",
                  "items": {
                    "title": "User121",
                    "type": "object",
                    "properties": {
                      "email": {
                        "description": "User's email address",
                        "type": "string"
                      },
                      "type": {
                        "title": "type",
                        "example": 1,
                        "x-enum-elements": [
                          {
                            "name": "Enum_1",
                            "description": ""
                          },
                          {
                            "name": "Enum_2",
                            "description": ""
                          },
                          {
                            "name": "Enum_3",
                            "description": ""
                          }
                        ],
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "User's first name\n**max length:** 64",
                        "type": "string",
                        "maxLength": 64
                      },
                      "last_name": {
                        "description": "User's last name\n**max length:** 64",
                        "type": "string",
                        "maxLength": 64
                      },
                      "pmi": {
                        "description": "Personal Meeting ID",
                        "type": "string"
                      },
                      "timezone": {
                        "description": "Time Zone",
                        "type": "string"
                      },
                      "dept": {
                        "description": "Department",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "User create time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_login_time": {
                        "description": "User last login time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "last_client_version": {
                        "description": "User last login client version",
                        "type": "string"
                      },
                      "group_ids": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "im_group_ids": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "email",
                      "type"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/users?page_size=30&page_number=1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get users",
            "x-testDescription": "List users on your account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a user on your account",
        "summary": "Create user",
        "tags": [
          "Users"
        ],
        "operationId": "UsersPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User",
            "schema": {
              "title": "body258",
              "description": "User",
              "type": "object",
              "properties": {
                "action": {
                  "title": "action",
                  "example": "create",
                  "x-enum-elements": [
                    {
                      "name": "create",
                      "description": ""
                    },
                    {
                      "name": "autoCreate",
                      "description": ""
                    },
                    {
                      "name": "custCreate",
                      "description": ""
                    },
                    {
                      "name": "ssoCreate",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "create",
                    "autoCreate",
                    "custCreate",
                    "ssoCreate"
                  ]
                },
                "user_info": {
                  "title": "user_info",
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "User's email address\n**max length:** 128",
                      "type": "string",
                      "maxLength": 128
                    },
                    "type": {
                      "title": "type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "first_name": {
                      "description": "User's first name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
                      "type": "string",
                      "maxLength": 64
                    },
                    "last_name": {
                      "description": "User's last name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
                      "type": "string",
                      "maxLength": 64
                    },
                    "password": {
                      "description": "User’s password. Only for \"autoCreate\" action.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "type"
                  ]
                }
              },
              "required": [
                "action"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User Created",
            "schema": {
              "title": "userCreateResponse",
              "description": "User Created",
              "type": "object",
              "properties": {
                "id": {
                  "description": "User ID",
                  "type": "string"
                },
                "first_name": {
                  "description": "User's first name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "last_name": {
                  "description": "User's last name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "email": {
                  "description": "User's email address",
                  "type": "string"
                },
                "type": {
                  "title": "type",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ]
                }
              }
            }
          },
          "409": {
            "description": "User with that email already exists",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Retrieve a user on your account",
        "summary": "Get single user",
        "tags": [
          "Users"
        ],
        "operationId": "UsersByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "login_type",
            "in": "query",
            "required": false,
            "enum": [
              "0",
              "1",
              "99",
              "100",
              "101"
            ],
            "x-enum-elements": [
              {
                "name": "Enum_0",
                "description": ""
              },
              {
                "name": "Enum_1",
                "description": ""
              },
              {
                "name": "Enum_99",
                "description": ""
              },
              {
                "name": "Enum_100",
                "description": ""
              },
              {
                "name": "Enum_101",
                "description": ""
              }
            ],
            "type": "string",
            "description": "`0` Facebook\n`1` Google\n`99` API\n`100` Zoom\n`101` SSO"
          }
        ],
        "responses": {
          "200": {
            "description": "User object returned",
            "schema": {
              "title": "userResponse",
              "description": "User object returned",
              "type": "object",
              "properties": {
                "email": {
                  "description": "User's email address",
                  "type": "string"
                },
                "type": {
                  "title": "type",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ]
                },
                "id": {
                  "description": "User ID",
                  "type": "string"
                },
                "first_name": {
                  "description": "User's first name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "last_name": {
                  "description": "User's last name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "pmi": {
                  "description": "Personal Meeting ID",
                  "type": "string"
                },
                "timezone": {
                  "description": "Time Zone",
                  "type": "string"
                },
                "dept": {
                  "description": "Department",
                  "type": "string"
                },
                "created_at": {
                  "description": "User create time",
                  "type": "string",
                  "format": "date-time"
                },
                "last_login_time": {
                  "description": "User last login time",
                  "type": "string",
                  "format": "date-time"
                },
                "last_client_version": {
                  "description": "User last login client version",
                  "type": "string"
                },
                "vanity_url": {
                  "description": "",
                  "type": "string"
                },
                "personal_meeting_url": {
                  "description": "",
                  "type": "string"
                },
                "verified": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                },
                "pic_url": {
                  "description": "",
                  "type": "string"
                },
                "cms_user_id": {
                  "description": "",
                  "type": "string"
                },
                "account_id": {
                  "description": "",
                  "type": "string"
                },
                "host_key": {
                  "description": "",
                  "type": "string"
                },
                "group_ids": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "im_group_ids": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "email",
                "type"
              ]
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a user on your account",
        "summary": "Delete user",
        "tags": [
          "Users"
        ],
        "operationId": "UsersByUserIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "enum": [
              "disassociate",
              "delete"
            ],
            "x-enum-elements": [
              {
                "name": "disassociate",
                "description": ""
              },
              {
                "name": "delete",
                "description": ""
              }
            ],
            "type": "string",
            "description": "Delete action type\n**default:** disassociate\n`disassociate` Disassociate a user\n`delete` Permanently delete a user"
          },
          {
            "name": "transfer_email",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Transfer email"
          },
          {
            "name": "transfer_meeting",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Transfer meeting"
          },
          {
            "name": "transfer_webinar",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Transfer webinar"
          },
          {
            "name": "transfer_recording",
            "in": "query",
            "required": false,
            "type": "boolean",
            "description": "Transfer recording"
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a user on your account",
        "summary": "Update user",
        "tags": [
          "Users"
        ],
        "operationId": "UsersByUserIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User",
            "schema": {
              "title": "UserUpdate",
              "description": "User",
              "type": "object",
              "properties": {
                "first_name": {
                  "description": "User's first name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "last_name": {
                  "description": "User's last name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "type": {
                  "title": "type",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ]
                },
                "pmi": {
                  "description": "Personal Meeting ID,length must be 10\n**min length:** 10\n**max length:** 10",
                  "type": "string",
                  "minLength": 10,
                  "maxLength": 10
                },
                "timezone": {
                  "description": "The time zone id for user profile. For this parameter value please refer to the id value in [timezone](#timezones) list.",
                  "type": "string",
                  "format": "date-time"
                },
                "dept": {
                  "description": "Department for user profile, use for report",
                  "type": "string"
                },
                "vanity_name": {
                  "description": "Personal meeting room name",
                  "type": "string"
                },
                "host_key": {
                  "description": "Host Key, should be 6-digit number",
                  "type": "string",
                  "minLength": 6,
                  "maxLength": 6
                },
                "cms_user_id": {
                  "description": "Kaltura User Id",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/assistants": {
      "get": {
        "description": "List a user's assistants",
        "summary": "Get assistants",
        "tags": [
          "Users"
        ],
        "operationId": "UsersAssistantsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "User assistants List",
              "description": "Success",
              "type": "object",
              "properties": {
                "assistants": {
                  "description": "List of User's assistants",
                  "type": "array",
                  "items": {
                    "title": "Assistant",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email address. Must have id or email, if given id, the email is ignored.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add assistants to a user",
        "summary": "Add assistants",
        "tags": [
          "Users"
        ],
        "operationId": "UsersAssistantsByUserIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User assistant",
            "schema": {
              "title": "User assistants List",
              "description": "Success",
              "type": "object",
              "properties": {
                "assistants": {
                  "description": "List of User's assistants",
                  "type": "array",
                  "items": {
                    "title": "Assistant",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email address. Must have id or email, if given id, the email is ignored.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Assitant Added",
            "schema": {
              "title": "userAssistantCreateResponse",
              "description": "Assitant Added",
              "type": "object",
              "properties": {
                "ids": {
                  "description": "User ID",
                  "type": "string"
                },
                "add_at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete all of a user'sassitants",
        "summary": "Delete all assistants",
        "tags": [
          "Users"
        ],
        "operationId": "UsersAssistantsByUserIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "204": {
            "description": "Assitants deleted"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/assistants/{assistantId}": {
      "delete": {
        "description": "Delete one of a user's assistants",
        "summary": "Delete single assistant",
        "tags": [
          "Users"
        ],
        "operationId": "UsersAssistantsByUserIdAndAssistantIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "assistantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Assistant's ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Assitant deleted"
          },
          "404": {
            "description": "User or Assistant not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/schedulers": {
      "get": {
        "description": "List a user's schedulers",
        "summary": "Get schedulers",
        "tags": [
          "Users"
        ],
        "operationId": "UsersSchedulersByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "User schedulers List",
              "description": "Success",
              "type": "object",
              "properties": {
                "assistants": {
                  "description": "List of User's schedulers.",
                  "type": "array",
                  "items": {
                    "title": "Assistant",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email address. Must have id or email, if given id, the email is ignored.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete all of a user'schedulers",
        "summary": "Delete all schedulers",
        "tags": [
          "Users"
        ],
        "operationId": "UsersSchedulersByUserIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "204": {
            "description": "Schedulers deleted."
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/schedulers/{schedulerId}": {
      "delete": {
        "description": "Delete one of a user's schedulers",
        "summary": "Delete single scheduler",
        "tags": [
          "Users"
        ],
        "operationId": "UsersSchedulersByUserIdAndSchedulerIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "schedulerId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Scheduler's ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Scheduler deleted."
          },
          "404": {
            "description": "User or Scheduler not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/picture": {
      "post": {
        "description": "Upload a user's profile picture",
        "summary": "Upload user picture",
        "tags": [
          "Users"
        ],
        "operationId": "UsersPictureByUserIdPost",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "pic_file",
            "in": "formData",
            "required": true,
            "type": "file",
            "format": "file",
            "description": "User picture file, must be a jpg/jpeg file"
          }
        ],
        "responses": {
          "201": {
            "description": "Picture Uploaded"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/settings": {
      "get": {
        "description": "Retrieve a user's settings",
        "summary": "Get user settings",
        "tags": [
          "Users"
        ],
        "operationId": "UsersSettingsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "login_type",
            "in": "query",
            "required": false,
            "enum": [
              "0",
              "1",
              "99",
              "100",
              "101"
            ],
            "x-enum-elements": [
              {
                "name": "Enum_0",
                "description": ""
              },
              {
                "name": "Enum_1",
                "description": ""
              },
              {
                "name": "Enum_99",
                "description": ""
              },
              {
                "name": "Enum_100",
                "description": ""
              },
              {
                "name": "Enum_101",
                "description": ""
              }
            ],
            "type": "string",
            "description": "`0` Facebook\n`1` Google\n`99` API\n`100` Zoom\n`101` SSO"
          }
        ],
        "responses": {
          "200": {
            "description": "User settings returned",
            "schema": {
              "title": "User settings",
              "description": "User settings returned",
              "type": "object",
              "properties": {
                "scheduled_meeting": {
                  "title": "scheduled_meeting",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Host video",
                      "type": "boolean"
                    },
                    "participants_video": {
                      "description": "Participants video",
                      "type": "boolean"
                    },
                    "audio_type": {
                      "title": "audio_type",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        },
                        {
                          "name": "thirdParty",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip",
                        "thirdParty"
                      ]
                    },
                    "join_before_host": {
                      "description": "Join before host",
                      "type": "boolean"
                    },
                    "force_pmi_jbh_password": {
                      "description": "Require a password for Personal Meetings if attendees can join before host",
                      "type": "boolean"
                    },
                    "pstn_password_protected": {
                      "description": "Generate and require password for participants joining by phone",
                      "type": "boolean"
                    }
                  }
                },
                "in_meeting": {
                  "title": "in_meeting89",
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "description": "End-to-end encryption",
                      "type": "boolean"
                    },
                    "chat": {
                      "description": "Chat",
                      "example": false,
                      "type": "boolean"
                    },
                    "private_chat": {
                      "description": "Private chat",
                      "example": false,
                      "type": "boolean"
                    },
                    "auto_saving_chat": {
                      "description": "Auto saving chats",
                      "example": false,
                      "type": "boolean"
                    },
                    "entry_exit_chime": {
                      "title": "entry_exit_chime",
                      "example": "host",
                      "x-enum-elements": [
                        {
                          "name": "host",
                          "description": ""
                        },
                        {
                          "name": "all",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "host",
                        "all",
                        "none"
                      ]
                    },
                    "record_play_voice": {
                      "description": "Record and play their own voice",
                      "type": "boolean"
                    },
                    "file_transfer": {
                      "description": "File transfer",
                      "example": false,
                      "type": "boolean"
                    },
                    "feedback": {
                      "description": "Feedback to Zoom",
                      "example": false,
                      "type": "boolean"
                    },
                    "co_host": {
                      "description": "Co-host",
                      "example": false,
                      "type": "boolean"
                    },
                    "polling": {
                      "description": "Polling",
                      "example": false,
                      "type": "boolean"
                    },
                    "attendee_on_hold": {
                      "description": "Allow host to put attendee on hold",
                      "example": false,
                      "type": "boolean"
                    },
                    "annotation": {
                      "description": "Annotation",
                      "example": false,
                      "type": "boolean"
                    },
                    "remote_control": {
                      "description": "Remote control",
                      "example": false,
                      "type": "boolean"
                    },
                    "non_verbal_feedback": {
                      "description": "Non-verbal feedback",
                      "example": false,
                      "type": "boolean"
                    },
                    "breakout_room": {
                      "description": "Breakout room",
                      "example": false,
                      "type": "boolean"
                    },
                    "remote_support": {
                      "description": "Remote support",
                      "example": false,
                      "type": "boolean"
                    },
                    "closed_caption": {
                      "description": "Closed caption",
                      "example": false,
                      "type": "boolean"
                    },
                    "group_hd": {
                      "description": "Group HD video",
                      "example": false,
                      "type": "boolean"
                    },
                    "virtual_background": {
                      "description": "Virtual background",
                      "example": false,
                      "type": "boolean"
                    },
                    "far_end_camera_control": {
                      "description": "Far end camera control",
                      "example": false,
                      "type": "boolean"
                    },
                    "share_dual_camera": {
                      "description": "Share dual camera (Deprecated)",
                      "example": false,
                      "type": "boolean"
                    },
                    "attention_tracking": {
                      "description": "Attention tracking",
                      "example": false,
                      "type": "boolean"
                    },
                    "waiting_room": {
                      "description": "Waiting room",
                      "example": false,
                      "type": "boolean"
                    }
                  }
                },
                "email_notification": {
                  "title": "email_notification91",
                  "type": "object",
                  "properties": {
                    "jbh_reminder": {
                      "description": "When attendees join meeting before host",
                      "example": false,
                      "type": "boolean"
                    },
                    "cancel_meeting_reminder": {
                      "description": "When a meeting is cancelled",
                      "example": false,
                      "type": "boolean"
                    },
                    "alternative_host_reminder": {
                      "description": "When an alternative host is set or removed from a meeting",
                      "example": false,
                      "type": "boolean"
                    }
                  }
                },
                "recording": {
                  "title": "recording92",
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "description": "Local recording",
                      "type": "boolean"
                    },
                    "cloud_recording": {
                      "description": "Cloud recording",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_speaker_view": {
                      "description": "Record the active speaker view",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_gallery_view": {
                      "description": "Record the gallery view",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_audio_file": {
                      "description": "Record an audio only file",
                      "example": false,
                      "type": "boolean"
                    },
                    "save_chat_text": {
                      "description": "Save chat text from the meeting",
                      "example": false,
                      "type": "boolean"
                    },
                    "show_timestamp": {
                      "description": "Show timestamp on video",
                      "example": false,
                      "type": "boolean"
                    },
                    "recording_audio_transcript": {
                      "description": "Audio transcript",
                      "type": "boolean"
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "auto_delete_cmr": {
                      "description": "Auto delete cloud recordings",
                      "example": false,
                      "type": "boolean"
                    },
                    "auto_delete_cmr_days": {
                      "description": "A specified number of days of auto delete cloud recordings\n**minimum:** 1\n**maximum:** 10",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 60,
                      "format": "int32"
                    }
                  }
                },
                "telephony": {
                  "title": "telephony94",
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "description": "3rd party audio conference",
                      "type": "boolean"
                    },
                    "audio_conference_info": {
                      "description": "3rd party audio conference info\n**max length:** 2048",
                      "type": "string",
                      "maxLength": 2048
                    },
                    "show_international_numbers_link": {
                      "description": "Show international numbers link on the invitation email",
                      "type": "boolean"
                    }
                  }
                },
                "feature": {
                  "title": "User settings: Feature settings",
                  "type": "object",
                  "properties": {
                    "meeting_capacity": {
                      "description": "User’s meeting capacity",
                      "type": "integer",
                      "format": "int32"
                    },
                    "large_meeting": {
                      "description": "Large meting feature",
                      "type": "boolean"
                    },
                    "large_meeting_capacity": {
                      "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
                      "type": "integer",
                      "format": "int32"
                    },
                    "webinar": {
                      "description": "Webinar feature",
                      "type": "boolean"
                    },
                    "webinar_capacity": {
                      "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
                      "type": "integer",
                      "format": "int32"
                    },
                    "cn_meeting": {
                      "description": "CN meeting feature",
                      "type": "boolean"
                    },
                    "in_meeting": {
                      "description": "IN meeting feature",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a user's settings",
        "summary": "Update user settings",
        "tags": [
          "Users"
        ],
        "operationId": "UsersSettingsByUserIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User Settings",
            "schema": {
              "title": "User settings137",
              "description": "User Settings",
              "type": "object",
              "properties": {
                "scheduled_meeting": {
                  "title": "scheduled_meeting",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Host video",
                      "type": "boolean"
                    },
                    "participants_video": {
                      "description": "Participants video",
                      "type": "boolean"
                    },
                    "audio_type": {
                      "title": "audio_type",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        },
                        {
                          "name": "thirdParty",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip",
                        "thirdParty"
                      ]
                    },
                    "join_before_host": {
                      "description": "Join before host",
                      "type": "boolean"
                    },
                    "force_pmi_jbh_password": {
                      "description": "Require a password for Personal Meetings if attendees can join before host",
                      "type": "boolean"
                    },
                    "pstn_password_protected": {
                      "description": "Generate and require password for participants joining by phone",
                      "type": "boolean"
                    }
                  }
                },
                "in_meeting": {
                  "title": "in_meeting89",
                  "type": "object",
                  "properties": {
                    "e2e_encryption": {
                      "description": "End-to-end encryption",
                      "type": "boolean"
                    },
                    "chat": {
                      "description": "Chat",
                      "example": false,
                      "type": "boolean"
                    },
                    "private_chat": {
                      "description": "Private chat",
                      "example": false,
                      "type": "boolean"
                    },
                    "auto_saving_chat": {
                      "description": "Auto saving chats",
                      "example": false,
                      "type": "boolean"
                    },
                    "entry_exit_chime": {
                      "title": "entry_exit_chime",
                      "example": "host",
                      "x-enum-elements": [
                        {
                          "name": "host",
                          "description": ""
                        },
                        {
                          "name": "all",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "host",
                        "all",
                        "none"
                      ]
                    },
                    "record_play_voice": {
                      "description": "Record and play their own voice",
                      "type": "boolean"
                    },
                    "file_transfer": {
                      "description": "File transfer",
                      "example": false,
                      "type": "boolean"
                    },
                    "feedback": {
                      "description": "Feedback to Zoom",
                      "example": false,
                      "type": "boolean"
                    },
                    "co_host": {
                      "description": "Co-host",
                      "example": false,
                      "type": "boolean"
                    },
                    "polling": {
                      "description": "Polling",
                      "example": false,
                      "type": "boolean"
                    },
                    "attendee_on_hold": {
                      "description": "Allow host to put attendee on hold",
                      "example": false,
                      "type": "boolean"
                    },
                    "annotation": {
                      "description": "Annotation",
                      "example": false,
                      "type": "boolean"
                    },
                    "remote_control": {
                      "description": "Remote control",
                      "example": false,
                      "type": "boolean"
                    },
                    "non_verbal_feedback": {
                      "description": "Non-verbal feedback",
                      "example": false,
                      "type": "boolean"
                    },
                    "breakout_room": {
                      "description": "Breakout room",
                      "example": false,
                      "type": "boolean"
                    },
                    "remote_support": {
                      "description": "Remote support",
                      "example": false,
                      "type": "boolean"
                    },
                    "closed_caption": {
                      "description": "Closed caption",
                      "example": false,
                      "type": "boolean"
                    },
                    "group_hd": {
                      "description": "Group HD video",
                      "example": false,
                      "type": "boolean"
                    },
                    "virtual_background": {
                      "description": "Virtual background",
                      "example": false,
                      "type": "boolean"
                    },
                    "far_end_camera_control": {
                      "description": "Far end camera control",
                      "example": false,
                      "type": "boolean"
                    },
                    "share_dual_camera": {
                      "description": "Share dual camera (Deprecated)",
                      "example": false,
                      "type": "boolean"
                    },
                    "attention_tracking": {
                      "description": "Attention tracking",
                      "example": false,
                      "type": "boolean"
                    },
                    "waiting_room": {
                      "description": "Waiting room",
                      "example": false,
                      "type": "boolean"
                    }
                  }
                },
                "email_notification": {
                  "title": "email_notification91",
                  "type": "object",
                  "properties": {
                    "jbh_reminder": {
                      "description": "When attendees join meeting before host",
                      "example": false,
                      "type": "boolean"
                    },
                    "cancel_meeting_reminder": {
                      "description": "When a meeting is cancelled",
                      "example": false,
                      "type": "boolean"
                    },
                    "alternative_host_reminder": {
                      "description": "When an alternative host is set or removed from a meeting",
                      "example": false,
                      "type": "boolean"
                    }
                  }
                },
                "recording": {
                  "title": "recording92",
                  "type": "object",
                  "properties": {
                    "local_recording": {
                      "description": "Local recording",
                      "type": "boolean"
                    },
                    "cloud_recording": {
                      "description": "Cloud recording",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_speaker_view": {
                      "description": "Record the active speaker view",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_gallery_view": {
                      "description": "Record the gallery view",
                      "example": false,
                      "type": "boolean"
                    },
                    "record_audio_file": {
                      "description": "Record an audio only file",
                      "example": false,
                      "type": "boolean"
                    },
                    "save_chat_text": {
                      "description": "Save chat text from the meeting",
                      "example": false,
                      "type": "boolean"
                    },
                    "show_timestamp": {
                      "description": "Show timestamp on video",
                      "example": false,
                      "type": "boolean"
                    },
                    "recording_audio_transcript": {
                      "description": "Audio transcript",
                      "type": "boolean"
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "auto_delete_cmr": {
                      "description": "Auto delete cloud recordings",
                      "example": false,
                      "type": "boolean"
                    },
                    "auto_delete_cmr_days": {
                      "description": "A specified number of days of auto delete cloud recordings\n**minimum:** 1\n**maximum:** 10",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 60,
                      "format": "int32"
                    }
                  }
                },
                "telephony": {
                  "title": "telephony94",
                  "type": "object",
                  "properties": {
                    "third_party_audio": {
                      "description": "3rd party audio conference",
                      "type": "boolean"
                    },
                    "audio_conference_info": {
                      "description": "3rd party audio conference info\n**max length:** 2048",
                      "type": "string",
                      "maxLength": 2048
                    },
                    "show_international_numbers_link": {
                      "description": "Show international numbers link on the invitation email",
                      "type": "boolean"
                    }
                  }
                },
                "feature": {
                  "title": "feature105",
                  "type": "object",
                  "properties": {
                    "meeting_capacity": {
                      "description": "User’s meeting capacity",
                      "type": "integer",
                      "format": "int32"
                    },
                    "large_meeting": {
                      "description": "Large meting feature",
                      "type": "boolean"
                    },
                    "large_meeting_capacity": {
                      "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
                      "type": "integer",
                      "format": "int32"
                    },
                    "webinar": {
                      "description": "Webinar feature",
                      "type": "boolean"
                    },
                    "webinar_capacity": {
                      "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User setting's updated"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/status": {
      "put": {
        "description": "Update a user's status",
        "summary": "Update user status",
        "tags": [
          "Users"
        ],
        "operationId": "UsersStatusByUserIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User status",
            "schema": {
              "title": "body270",
              "description": "User status",
              "type": "object",
              "properties": {
                "action": {
                  "title": "action107",
                  "example": "activate",
                  "x-enum-elements": [
                    {
                      "name": "activate",
                      "description": ""
                    },
                    {
                      "name": "deactivate",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "activate",
                    "deactivate"
                  ]
                }
              },
              "required": [
                "action"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Status updated"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/password": {
      "put": {
        "description": "Update a user's password",
        "summary": "Update user password",
        "tags": [
          "Users"
        ],
        "operationId": "UsersPasswordByUserIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User password",
            "schema": {
              "title": "body272",
              "description": "User password",
              "type": "object",
              "properties": {
                "password": {
                  "description": "User’s password. Character length is less than 32,",
                  "type": "string"
                }
              },
              "required": [
                "password"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Password updated"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/permissions": {
      "get": {
        "description": "Retrieve a user's permissions",
        "summary": "Get user permissions",
        "tags": [
          "Users"
        ],
        "operationId": "UsersPermissionsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "200": {
            "description": "User permissions returned",
            "schema": {
              "title": "UserPermissions",
              "description": "User permissions returned",
              "type": "object",
              "properties": {
                "permissions": {
                  "description": "List of user permissions",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/token": {
      "get": {
        "description": "Retrieve a user's token",
        "summary": "Get user token",
        "tags": [
          "Users"
        ],
        "operationId": "UsersTokenByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "token",
              "zpk",
              "zak"
            ],
            "x-enum-elements": [
              {
                "name": "token",
                "description": ""
              },
              {
                "name": "zpk",
                "description": ""
              },
              {
                "name": "zak",
                "description": ""
              }
            ],
            "type": "string",
            "description": "User token type\n`token` Used for starting meeting with client SDK.\n`zpk` Used for generating the start meeting url. (Deprecated)\n`zak` Used for generating the start meeting url. The expiration time is two hours. For API users, the expiration time is 90 days."
          }
        ],
        "responses": {
          "200": {
            "description": "Token returned",
            "schema": {
              "title": "userTokenResponse",
              "description": "Token returned",
              "type": "object",
              "properties": {
                "token": {
                  "description": "User ID",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Revoke a user's SSO token",
        "summary": "Delete SSO Token",
        "tags": [
          "Users"
        ],
        "operationId": "UsersTokenByUserIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "204": {
            "description": "Token deleted"
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/zpk": {
      "get": {
        "description": "Check if the zpk is expired. The zpk is used to authenticate a user.",
        "summary": "Get ZPK",
        "tags": [
          "Users"
        ],
        "operationId": "UsersZpkGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "zpk",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "User zpk"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "userZPKResponse",
              "description": "Success",
              "type": "object",
              "properties": {
                "expire_in": {
                  "description": "",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/email": {
      "get": {
        "description": "Check if the user email exists",
        "summary": "Check user email",
        "tags": [
          "Users"
        ],
        "operationId": "UsersEmailGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Zoom work email"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "userEmailResponse",
              "description": "Success",
              "type": "object",
              "properties": {
                "existed_email": {
                  "description": "",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/vanity_name": {
      "get": {
        "description": "Check if the user's personal meeting room name exists",
        "summary": "Check vainity name",
        "tags": [
          "Users"
        ],
        "operationId": "UsersVanityNameGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vanity_name",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Personal meeting room name"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "userVanityNameResponse",
              "description": "Success",
              "type": "object",
              "properties": {
                "existed": {
                  "description": "",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/meetings": {
      "get": {
        "description": "List meetings for a user",
        "summary": "List meetings",
        "tags": [
          "Meetings"
        ],
        "operationId": "UsersMeetingsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "scheduled",
              "live",
              "upcoming"
            ],
            "x-enum-elements": [
              {
                "name": "scheduled",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              },
              {
                "name": "upcoming",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Meeting objects returned",
            "schema": {
              "title": "Group List66",
              "description": "List of Meeting objects returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "meetings": {
                  "description": "List of Meeting objects",
                  "type": "array",
                  "items": {
                    "title": "Meeting",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Meeting unique ID",
                        "type": "string"
                      },
                      "id": {
                        "description": "Meeting ID, also know as meeting number",
                        "type": "string"
                      },
                      "host_id": {
                        "description": "ID of the user set as host of meeting",
                        "type": "string"
                      },
                      "topic": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "type": {
                        "title": "type118",
                        "example": 1,
                        "x-enum-elements": [
                          {
                            "name": "Enum_1",
                            "description": ""
                          },
                          {
                            "name": "Enum_2",
                            "description": ""
                          },
                          {
                            "name": "Enum_3",
                            "description": ""
                          },
                          {
                            "name": "Enum_8",
                            "description": ""
                          }
                        ],
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "8"
                        ]
                      },
                      "start_time": {
                        "description": "Meeting start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "timezone": {
                        "description": "Timezone to format start_time",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "Create time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "join_url": {
                        "description": "Join url",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a meeting for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
        "summary": "Create meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "UsersMeetingsByUserIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Meeting object",
            "schema": {
              "title": "Session",
              "description": "Meeting object",
              "type": "object",
              "properties": {
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "type": {
                  "title": "type118",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    },
                    {
                      "name": "Enum_8",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "8"
                  ]
                },
                "start_time": {
                  "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time.",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration (minutes). Used for scheduled meetings only",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
                  "type": "string"
                },
                "password": {
                  "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
                  "type": "string"
                },
                "agenda": {
                  "description": "Meeting description",
                  "type": "string"
                },
                "recurrence": {
                  "title": "recurrence",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "repeat_interval": {
                      "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "weekly_days": {
                      "title": "weekly_days",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "monthly_day": {
                      "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "monthly_week": {
                      "title": "monthly_week",
                      "example": -1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_Minus1",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "-1",
                        "1",
                        "2",
                        "3",
                        "4"
                      ]
                    },
                    "monthly_week_day": {
                      "title": "monthly_week_day",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "end_times": {
                      "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
                      "example": 1,
                      "type": "integer",
                      "maximum": 50,
                      "format": "int32"
                    },
                    "end_date_time": {
                      "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "settings": {
                  "title": "settings",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins meeting",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start video when participants join meeting",
                      "type": "boolean"
                    },
                    "cn_meeting": {
                      "description": "Host meeting in China",
                      "example": false,
                      "type": "boolean"
                    },
                    "in_meeting": {
                      "description": "Host meeting in India",
                      "example": false,
                      "type": "boolean"
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "example": false,
                      "type": "boolean"
                    },
                    "mute_upon_entry": {
                      "description": "Mute participants upon entry",
                      "example": false,
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "example": false,
                      "type": "boolean"
                    },
                    "use_pmi": {
                      "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Meeting Created",
            "schema": {
              "title": "meetingCreateResponse",
              "description": "Meeting Created",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting unique ID",
                  "type": "string"
                },
                "id": {
                  "description": "Meeting ID, also known as meeting number",
                  "type": "string"
                },
                "host_id": {
                  "description": "ID of the user set as host of meeting",
                  "type": "string"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "type": {
                  "title": "type118",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    },
                    {
                      "name": "Enum_8",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "8"
                  ]
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time",
                  "type": "string"
                },
                "created_at": {
                  "description": "Create time",
                  "type": "string",
                  "format": "date-time"
                },
                "agenda": {
                  "description": "Agenda",
                  "type": "string"
                },
                "start_url": {
                  "description": "Start url",
                  "type": "string"
                },
                "join_url": {
                  "description": "Join url",
                  "type": "string"
                },
                "password": {
                  "description": "Meeting password",
                  "type": "string"
                },
                "h323_password": {
                  "description": "H.323/SIP room system password",
                  "type": "string"
                },
                "occurrences": {
                  "description": "Array of occurrence objects",
                  "type": "array",
                  "items": {
                    "title": "Occurrence",
                    "description": "Occurence object",
                    "type": "object",
                    "properties": {
                      "occurrence_id": {
                        "description": "Occurrence Id",
                        "type": "integer",
                        "format": "int32"
                      },
                      "start_time": {
                        "description": "Start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "status": {
                        "description": "Occurrence status",
                        "type": "string"
                      }
                    }
                  }
                },
                "settings": {
                  "title": "settings",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins meeting",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start video when participants join meeting",
                      "type": "boolean"
                    },
                    "cn_meeting": {
                      "description": "Host meeting in China",
                      "example": false,
                      "type": "boolean"
                    },
                    "in_meeting": {
                      "description": "Host meeting in India",
                      "example": false,
                      "type": "boolean"
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "example": false,
                      "type": "boolean"
                    },
                    "mute_upon_entry": {
                      "description": "Mute participants upon entry",
                      "example": false,
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "example": false,
                      "type": "boolean"
                    },
                    "use_pmi": {
                      "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}": {
      "get": {
        "description": "Retrieve a meeting's details",
        "summary": "Get meeting details",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting object returned",
            "schema": {
              "title": "meetingResponse",
              "description": "Meeting object returned",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting unique ID",
                  "type": "string"
                },
                "id": {
                  "description": "Meeting ID, also know as meeting number",
                  "type": "string"
                },
                "host_id": {
                  "description": "ID of the user set as host of meeting",
                  "type": "string"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "type": {
                  "title": "type118",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    },
                    {
                      "name": "Enum_8",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "8"
                  ]
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time",
                  "type": "string"
                },
                "created_at": {
                  "description": "Create time",
                  "type": "string",
                  "format": "date-time"
                },
                "agenda": {
                  "description": "Agenda",
                  "type": "string"
                },
                "start_url": {
                  "description": "Start url",
                  "type": "string"
                },
                "join_url": {
                  "description": "Join url",
                  "type": "string"
                },
                "password": {
                  "description": "Meeting password",
                  "type": "string"
                },
                "h323_password": {
                  "description": "H.323/SIP room system password",
                  "type": "string"
                },
                "occurrences": {
                  "description": "Array of occurrence objects",
                  "type": "array",
                  "items": {
                    "title": "Occurrence",
                    "description": "Occurence object",
                    "type": "object",
                    "properties": {
                      "occurrence_id": {
                        "description": "Occurrence Id",
                        "type": "integer",
                        "format": "int32"
                      },
                      "start_time": {
                        "description": "Start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "status": {
                        "description": "Occurrence status",
                        "type": "string"
                      }
                    }
                  }
                },
                "settings": {
                  "title": "settings",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins meeting",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start video when participants join meeting",
                      "type": "boolean"
                    },
                    "cn_meeting": {
                      "description": "Host meeting in China",
                      "example": false,
                      "type": "boolean"
                    },
                    "in_meeting": {
                      "description": "Host meeting in India",
                      "example": false,
                      "type": "boolean"
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "example": false,
                      "type": "boolean"
                    },
                    "mute_upon_entry": {
                      "description": "Mute participants upon entry",
                      "example": false,
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "example": false,
                      "type": "boolean"
                    },
                    "use_pmi": {
                      "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a meeting",
        "summary": "Delete meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsByMeetingIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting deleted"
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a meeting's details",
        "summary": "Update meeting",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsByMeetingIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Meeting",
            "schema": {
              "title": "SessionUpdate",
              "description": "Meeting",
              "type": "object",
              "properties": {
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "type": {
                  "title": "type118",
                  "example": 1,
                  "x-enum-elements": [
                    {
                      "name": "Enum_1",
                      "description": ""
                    },
                    {
                      "name": "Enum_2",
                      "description": ""
                    },
                    {
                      "name": "Enum_3",
                      "description": ""
                    },
                    {
                      "name": "Enum_8",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "1",
                    "2",
                    "3",
                    "8"
                  ]
                },
                "start_time": {
                  "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time.",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration (minutes). Used for scheduled meetings only",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
                  "type": "string"
                },
                "password": {
                  "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
                  "type": "string"
                },
                "agenda": {
                  "description": "Meeting description",
                  "type": "string"
                },
                "recurrence": {
                  "title": "recurrence",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "repeat_interval": {
                      "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "weekly_days": {
                      "title": "weekly_days",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "monthly_day": {
                      "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "monthly_week": {
                      "title": "monthly_week",
                      "example": -1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_Minus1",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "-1",
                        "1",
                        "2",
                        "3",
                        "4"
                      ]
                    },
                    "monthly_week_day": {
                      "title": "monthly_week_day",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "end_times": {
                      "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
                      "example": 1,
                      "type": "integer",
                      "maximum": 50,
                      "format": "int32"
                    },
                    "end_date_time": {
                      "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "settings": {
                  "title": "settings154",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins meeting",
                      "type": "boolean"
                    },
                    "participant_video": {
                      "description": "Start video when participants join meeting",
                      "type": "boolean"
                    },
                    "cn_meeting": {
                      "description": "Host meeting in China",
                      "example": false,
                      "type": "boolean"
                    },
                    "in_meeting": {
                      "description": "Host meeting in India",
                      "example": false,
                      "type": "boolean"
                    },
                    "join_before_host": {
                      "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
                      "example": false,
                      "type": "boolean"
                    },
                    "mute_upon_entry": {
                      "description": "Mute participants upon entry",
                      "example": false,
                      "type": "boolean"
                    },
                    "watermark": {
                      "description": "Add watermark when viewing shared screen",
                      "example": false,
                      "type": "boolean"
                    },
                    "use_pmi": {
                      "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
                      "type": "string"
                    },
                    "registrants_confirmation_email": {
                      "description": "Send confirmation Email to Registrants",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting Updated"
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/status": {
      "put": {
        "description": "Update a meeting's status",
        "summary": "Update meeting status",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsStatusByMeetingIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body190",
              "description": "`recover` recover meeting recording",
              "type": "object",
              "properties": {
                "action": {
                  "description": "",
                  "example": "end",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting updated"
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/registrants": {
      "get": {
        "description": "List registrants of a meeting",
        "summary": "Get meeting registrants",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsRegistrantsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "x-enum-elements": [
              {
                "name": "pending",
                "description": ""
              },
              {
                "name": "approved",
                "description": ""
              },
              {
                "name": "denied",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The registrant status\n**default:** approved\n`pending` registrants status is pending\n`approved` registrants status is approved\n`denied` registrants status is denied"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Registration List",
              "description": "Success",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "registrants": {
                  "description": "List of Registrant objects",
                  "type": "array",
                  "items": {
                    "title": "Registrant75",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "status": {
                        "description": "",
                        "type": "string"
                      },
                      "create_time": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "join_url": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Register a participant for a meeting",
        "summary": "Register meeting participant",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsRegistrantsByMeetingIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Registrant",
              "description": "Registrant base object",
              "type": "object",
              "properties": {
                "email": {
                  "description": "A valid email address",
                  "type": "string"
                },
                "first_name": {
                  "description": "User’s first name",
                  "type": "string"
                },
                "last_name": {
                  "description": "User’s last name",
                  "type": "string"
                },
                "address": {
                  "description": "Address",
                  "type": "string"
                },
                "city": {
                  "description": "City",
                  "type": "string"
                },
                "country": {
                  "description": "Country",
                  "type": "string"
                },
                "zip": {
                  "description": "Zip/Postal Code",
                  "type": "string"
                },
                "state": {
                  "description": "State/Province",
                  "type": "string"
                },
                "phone": {
                  "description": "Phone",
                  "type": "string"
                },
                "industry": {
                  "description": "Industry",
                  "type": "string"
                },
                "org": {
                  "description": "Organization",
                  "type": "string"
                },
                "job_title": {
                  "description": "Job Title",
                  "type": "string"
                },
                "purchasing_time_frame": {
                  "title": "purchasing_time_frame",
                  "example": "Within a month",
                  "x-enum-elements": [
                    {
                      "name": "Enum_Within a month",
                      "description": ""
                    },
                    {
                      "name": "Enum_1-3 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_4-6 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_More than 6 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_No timeframe",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "Within a month",
                    "1-3 months",
                    "4-6 months",
                    "More than 6 months",
                    "No timeframe"
                  ]
                },
                "role_in_purchase_process": {
                  "title": "role_in_purchase_process",
                  "example": "Decision Maker",
                  "x-enum-elements": [
                    {
                      "name": "Enum_Decision Maker",
                      "description": ""
                    },
                    {
                      "name": "Enum_EvaluatorRecommender",
                      "description": ""
                    },
                    {
                      "name": "Influencer",
                      "description": ""
                    },
                    {
                      "name": "Enum_Not involved",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "Decision Maker",
                    "Evaluator/Recommender",
                    "Influencer",
                    "Not involved"
                  ]
                },
                "no_of_employees": {
                  "title": "no_of_employees",
                  "example": "1-20",
                  "x-enum-elements": [
                    {
                      "name": "Enum_120",
                      "description": ""
                    },
                    {
                      "name": "Enum_2150",
                      "description": ""
                    },
                    {
                      "name": "Enum_51100",
                      "description": ""
                    },
                    {
                      "name": "Enum_101500",
                      "description": ""
                    },
                    {
                      "name": "Enum_5001000",
                      "description": ""
                    },
                    {
                      "name": "Enum_10015000",
                      "description": ""
                    },
                    {
                      "name": "Enum_500110000",
                      "description": ""
                    },
                    {
                      "name": "Enum_More than 10,000",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "1-20",
                    "21-50",
                    "51-100",
                    "101-500",
                    "500-1,000",
                    "1,001-5,000",
                    "5,001-10,000",
                    "More than 10,000"
                  ]
                },
                "comments": {
                  "description": "Questions & Comments",
                  "type": "string"
                },
                "custom_questions": {
                  "description": "Custom Questions",
                  "type": "array",
                  "items": {
                    "title": "custom_questions",
                    "description": "Custom Question",
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "",
                        "type": "string"
                      },
                      "value": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "email",
                "first_name",
                "last_name"
              ]
            }
          },
          {
            "name": "occurrence_ids",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Occurrence IDs. You can find these with the meeting get API. Multiple values separated by comma."
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "title": "meetingRegistrantCreateResponse",
              "description": "Registration created",
              "type": "object",
              "properties": {
                "registrant_id": {
                  "description": "Registrant ID",
                  "type": "string"
                },
                "id": {
                  "description": "Registrant ID",
                  "type": "string"
                },
                "topic": {
                  "description": "Topic",
                  "type": "string"
                },
                "start_time": {
                  "description": "Start time",
                  "type": "string",
                  "format": "date-time"
                },
                "join_url": {
                  "description": "Join URL for this registrant",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/registrants/status": {
      "put": {
        "description": "Update a meeting registrant's status",
        "summary": "Update meeting registrant status",
        "tags": [
          "Meetings"
        ],
        "operationId": "MeetingsRegistrantsStatusByMeetingIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The meeting ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "RegistrantStatus",
              "description": "Registrant Status",
              "type": "object",
              "properties": {
                "action": {
                  "title": "action170",
                  "example": "approve",
                  "x-enum-elements": [
                    {
                      "name": "approve",
                      "description": ""
                    },
                    {
                      "name": "cancel",
                      "description": ""
                    },
                    {
                      "name": "deny",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "approve",
                    "cancel",
                    "deny"
                  ]
                },
                "registrants": {
                  "description": "List of registrants",
                  "type": "array",
                  "items": {
                    "title": "Registrant95",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "email": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "action"
              ]
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Meeting or Registrant not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/past_meetings/{meetingUUID}": {
      "get": {
        "description": "Retrieve ended meeting details",
        "summary": "Get meeting details",
        "tags": [
          "Meetings"
        ],
        "operationId": "PastMeetingsByMeetingUUIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting UUID."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting detail Returned",
            "schema": {
              "title": "pastMeetingDetailsResponse",
              "description": "Meeting detail Returned",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "id": {
                  "description": "Meeting ID",
                  "type": "integer",
                  "format": "int32"
                },
                "host_id": {
                  "description": "Host ID",
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
                  "type": "integer",
                  "format": "int32"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "user_name": {
                  "description": "User display name",
                  "type": "string"
                },
                "user_email": {
                  "description": "User email",
                  "type": "string"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "end_time": {
                  "description": "Meeting end time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "total_minutes": {
                  "description": "Number of meeting minutes",
                  "type": "integer",
                  "format": "int32"
                },
                "participants_count": {
                  "description": "Number of meeting participants",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/past_meetings/{meetingUUID}/participants": {
      "get": {
        "description": "Retrieve ended meeting participants",
        "summary": "Get past meeting participants",
        "tags": [
          "Meetings"
        ],
        "operationId": "PastMeetingsParticipantsByMeetingUUIDGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingUUID",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting UUID."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "title": "pastMeetingParticipantsResponse",
              "description": "Meeting Participants Report Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of meeting participant objects",
                  "type": "array",
                  "items": {
                    "title": "Participant",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/webinars": {
      "get": {
        "description": "List webinars for a user",
        "summary": "Get webinars",
        "tags": [
          "Webinars"
        ],
        "operationId": "UsersWebinarsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webinar objects returned",
            "schema": {
              "title": "User List142",
              "description": "List of Webinar objects returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "webinars": {
                  "description": "List of Webinar objects",
                  "type": "array",
                  "items": {
                    "title": "Webinar",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Webinar unique ID",
                        "type": "string"
                      },
                      "id": {
                        "description": "Webinar ID, also know as webinar number",
                        "type": "string"
                      },
                      "host_id": {
                        "description": "ID of the user set as host of webinar",
                        "type": "string"
                      },
                      "topic": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "type": {
                        "title": "type177",
                        "example": 5,
                        "x-enum-elements": [
                          {
                            "name": "Enum_5",
                            "description": ""
                          },
                          {
                            "name": "Enum_6",
                            "description": ""
                          },
                          {
                            "name": "Enum_9",
                            "description": ""
                          }
                        ],
                        "type": "integer",
                        "format": "int32",
                        "enum": [
                          "5",
                          "6",
                          "9"
                        ]
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "timezone": {
                        "description": "Timezone to format start_time",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "Create time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "join_url": {
                        "description": "Join url",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a webinar for a user <aside>The expiration time of start_url is two hours. But for API users, the expiration time is 90 days.</aside>",
        "summary": "Create webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "UsersWebinarsByUserIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "User",
            "schema": {
              "title": "SessionWebinar",
              "description": "User",
              "type": "object",
              "properties": {
                "topic": {
                  "description": "Webinar topic",
                  "type": "string"
                },
                "type": {
                  "title": "type177",
                  "example": 5,
                  "x-enum-elements": [
                    {
                      "name": "Enum_5",
                      "description": ""
                    },
                    {
                      "name": "Enum_6",
                      "description": ""
                    },
                    {
                      "name": "Enum_9",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "5",
                    "6",
                    "9"
                  ]
                },
                "start_time": {
                  "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time.",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Webinar duration (minutes). Used for scheduled webinar only",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
                  "type": "string"
                },
                "password": {
                  "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
                  "type": "string"
                },
                "agenda": {
                  "description": "Webinar description",
                  "type": "string"
                },
                "recurrence": {
                  "title": "recurrence",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "repeat_interval": {
                      "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "weekly_days": {
                      "title": "weekly_days",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "monthly_day": {
                      "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "monthly_week": {
                      "title": "monthly_week",
                      "example": -1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_Minus1",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "-1",
                        "1",
                        "2",
                        "3",
                        "4"
                      ]
                    },
                    "monthly_week_day": {
                      "title": "monthly_week_day",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "end_times": {
                      "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
                      "example": 1,
                      "type": "integer",
                      "maximum": 50,
                      "format": "int32"
                    },
                    "end_date_time": {
                      "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "settings": {
                  "title": "settings185",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins webinar",
                      "type": "boolean"
                    },
                    "panelists_video": {
                      "description": "Start video when panelists join webinar",
                      "type": "boolean"
                    },
                    "practice_session": {
                      "description": "Enable Practice Session",
                      "example": false,
                      "type": "boolean"
                    },
                    "hd_video": {
                      "description": "Default to HD Video",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
                      "type": "string"
                    },
                    "close_registration": {
                      "description": "Close registration after event date",
                      "type": "boolean"
                    },
                    "show_share_button": {
                      "description": "Show social share buttons on registration page",
                      "type": "boolean"
                    },
                    "allow_multiple_devices": {
                      "description": "Allow attendees to join from multiple devices",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Webinar Created",
            "schema": {
              "title": "webinarCreateResponse",
              "description": "Webinar Created",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Webinar unique ID",
                  "type": "string"
                },
                "id": {
                  "description": "Webinar ID, also known as Webinar number",
                  "type": "string"
                },
                "host_id": {
                  "description": "ID of the user set as host of Webinar",
                  "type": "string"
                },
                "topic": {
                  "description": "Webinar topic",
                  "type": "string"
                },
                "type": {
                  "title": "type177",
                  "example": 5,
                  "x-enum-elements": [
                    {
                      "name": "Enum_5",
                      "description": ""
                    },
                    {
                      "name": "Enum_6",
                      "description": ""
                    },
                    {
                      "name": "Enum_9",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "5",
                    "6",
                    "9"
                  ]
                },
                "start_time": {
                  "description": "Webinar start time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Webinar duration",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time",
                  "type": "string"
                },
                "agenda": {
                  "description": "Webinar agenda",
                  "type": "string"
                },
                "created_at": {
                  "description": "Create time",
                  "type": "string",
                  "format": "date-time"
                },
                "start_url": {
                  "description": "Start url",
                  "type": "string"
                },
                "join_url": {
                  "description": "Join url",
                  "type": "string"
                },
                "occurrences": {
                  "description": "Array of occurrence objects",
                  "type": "array",
                  "items": {
                    "title": "Occurrence",
                    "description": "Occurence object",
                    "type": "object",
                    "properties": {
                      "occurrence_id": {
                        "description": "Occurrence Id",
                        "type": "integer",
                        "format": "int32"
                      },
                      "start_time": {
                        "description": "Start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "status": {
                        "description": "Occurrence status",
                        "type": "string"
                      }
                    }
                  }
                },
                "settings": {
                  "title": "settings185",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins webinar",
                      "type": "boolean"
                    },
                    "panelists_video": {
                      "description": "Start video when panelists join webinar",
                      "type": "boolean"
                    },
                    "practice_session": {
                      "description": "Enable Practice Session",
                      "example": false,
                      "type": "boolean"
                    },
                    "hd_video": {
                      "description": "Default to HD Video",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
                      "type": "string"
                    },
                    "close_registration": {
                      "description": "Close registration after event date",
                      "type": "boolean"
                    },
                    "show_share_button": {
                      "description": "Show social share buttons on registration page",
                      "type": "boolean"
                    },
                    "allow_multiple_devices": {
                      "description": "Allow attendees to join from multiple devices",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}": {
      "get": {
        "description": "Retrieve a webinar",
        "summary": "Get single webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar object returned",
            "schema": {
              "title": "webinarResponse",
              "description": "Webinar object returned",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Webinar unique ID",
                  "type": "string"
                },
                "id": {
                  "description": "Webinar ID, also know as webinar number",
                  "type": "string"
                },
                "host_id": {
                  "description": "ID of the user set as host of webinar",
                  "type": "string"
                },
                "topic": {
                  "description": "Webinar topic",
                  "type": "string"
                },
                "type": {
                  "title": "type177",
                  "example": 5,
                  "x-enum-elements": [
                    {
                      "name": "Enum_5",
                      "description": ""
                    },
                    {
                      "name": "Enum_6",
                      "description": ""
                    },
                    {
                      "name": "Enum_9",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "5",
                    "6",
                    "9"
                  ]
                },
                "start_time": {
                  "description": "Webinar start time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Webinar duration",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time",
                  "type": "string"
                },
                "agenda": {
                  "description": "Webinar agenda",
                  "type": "string"
                },
                "created_at": {
                  "description": "Create time",
                  "type": "string",
                  "format": "date-time"
                },
                "start_url": {
                  "description": "Start url",
                  "type": "string"
                },
                "join_url": {
                  "description": "Join url",
                  "type": "string"
                },
                "occurrences": {
                  "description": "Array of occurrence objects",
                  "type": "array",
                  "items": {
                    "title": "Occurrence",
                    "description": "Occurence object",
                    "type": "object",
                    "properties": {
                      "occurrence_id": {
                        "description": "Occurrence Id",
                        "type": "integer",
                        "format": "int32"
                      },
                      "start_time": {
                        "description": "Start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "status": {
                        "description": "Occurrence status",
                        "type": "string"
                      }
                    }
                  }
                },
                "settings": {
                  "title": "settings185",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins webinar",
                      "type": "boolean"
                    },
                    "panelists_video": {
                      "description": "Start video when panelists join webinar",
                      "type": "boolean"
                    },
                    "practice_session": {
                      "description": "Enable Practice Session",
                      "example": false,
                      "type": "boolean"
                    },
                    "hd_video": {
                      "description": "Default to HD Video",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
                      "type": "string"
                    },
                    "close_registration": {
                      "description": "Close registration after event date",
                      "type": "boolean"
                    },
                    "show_share_button": {
                      "description": "Show social share buttons on registration page",
                      "type": "boolean"
                    },
                    "allow_multiple_devices": {
                      "description": "Allow attendees to join from multiple devices",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a webinar",
        "summary": "Delete webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsByWebinarIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar deleted"
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a webinar",
        "summary": "Update webinar",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsByWebinarIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Webinar",
            "schema": {
              "title": "SessionWebinarUpdate",
              "description": "Webinar",
              "type": "object",
              "properties": {
                "topic": {
                  "description": "Webinar topic",
                  "type": "string"
                },
                "type": {
                  "title": "type177",
                  "example": 5,
                  "x-enum-elements": [
                    {
                      "name": "Enum_5",
                      "description": ""
                    },
                    {
                      "name": "Enum_6",
                      "description": ""
                    },
                    {
                      "name": "Enum_9",
                      "description": ""
                    }
                  ],
                  "type": "integer",
                  "format": "int32",
                  "enum": [
                    "5",
                    "6",
                    "9"
                  ]
                },
                "start_time": {
                  "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time.",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Webinar duration (minutes). Used for scheduled webinar only",
                  "type": "integer",
                  "format": "int32"
                },
                "timezone": {
                  "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
                  "type": "string"
                },
                "password": {
                  "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
                  "type": "string"
                },
                "agenda": {
                  "description": "Webinar description",
                  "type": "string"
                },
                "recurrence": {
                  "title": "recurrence",
                  "type": "object",
                  "properties": {
                    "type": {
                      "title": "type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "repeat_interval": {
                      "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "weekly_days": {
                      "title": "weekly_days",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "monthly_day": {
                      "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "monthly_week": {
                      "title": "monthly_week",
                      "example": -1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_Minus1",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "-1",
                        "1",
                        "2",
                        "3",
                        "4"
                      ]
                    },
                    "monthly_week_day": {
                      "title": "monthly_week_day",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        },
                        {
                          "name": "Enum_4",
                          "description": ""
                        },
                        {
                          "name": "Enum_5",
                          "description": ""
                        },
                        {
                          "name": "Enum_6",
                          "description": ""
                        },
                        {
                          "name": "Enum_7",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "5",
                        "6",
                        "7"
                      ]
                    },
                    "end_times": {
                      "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
                      "example": 1,
                      "type": "integer",
                      "maximum": 50,
                      "format": "int32"
                    },
                    "end_date_time": {
                      "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                },
                "settings": {
                  "title": "settings213",
                  "type": "object",
                  "properties": {
                    "host_video": {
                      "description": "Start video when host joins webinar",
                      "type": "boolean"
                    },
                    "panelists_video": {
                      "description": "Start video when panelists join webinar",
                      "type": "boolean"
                    },
                    "practice_session": {
                      "description": "Enable Practice Session",
                      "example": false,
                      "type": "boolean"
                    },
                    "hd_video": {
                      "description": "Default to HD Video",
                      "example": false,
                      "type": "boolean"
                    },
                    "approval_type": {
                      "title": "approval_type",
                      "example": 0,
                      "x-enum-elements": [
                        {
                          "name": "Enum_0",
                          "description": ""
                        },
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "0",
                        "1",
                        "2"
                      ]
                    },
                    "registration_type": {
                      "title": "registration_type",
                      "example": 1,
                      "x-enum-elements": [
                        {
                          "name": "Enum_1",
                          "description": ""
                        },
                        {
                          "name": "Enum_2",
                          "description": ""
                        },
                        {
                          "name": "Enum_3",
                          "description": ""
                        }
                      ],
                      "type": "integer",
                      "format": "int32",
                      "enum": [
                        "1",
                        "2",
                        "3"
                      ]
                    },
                    "audio": {
                      "title": "Audio",
                      "example": "both",
                      "x-enum-elements": [
                        {
                          "name": "both",
                          "description": ""
                        },
                        {
                          "name": "telephony",
                          "description": ""
                        },
                        {
                          "name": "voip",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "both",
                        "telephony",
                        "voip"
                      ]
                    },
                    "auto_recording": {
                      "title": "auto_recording",
                      "example": "local",
                      "x-enum-elements": [
                        {
                          "name": "local",
                          "description": ""
                        },
                        {
                          "name": "cloud",
                          "description": ""
                        },
                        {
                          "name": "none",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "local",
                        "cloud",
                        "none"
                      ]
                    },
                    "enforce_login": {
                      "description": "Only signed-in users can join this meeting",
                      "type": "boolean"
                    },
                    "enforce_login_domains": {
                      "description": "Only signed-in users with specified domains can join meetings",
                      "type": "string"
                    },
                    "alternative_hosts": {
                      "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
                      "type": "string"
                    },
                    "close_registration": {
                      "description": "Close registration after event date",
                      "type": "boolean"
                    },
                    "show_share_button": {
                      "description": "Show social share buttons on registration page",
                      "type": "boolean"
                    },
                    "allow_multiple_devices": {
                      "description": "Allow attendees to join from multiple devices",
                      "type": "boolean"
                    },
                    "registrants_confirmation_email": {
                      "description": "Send confirmation Email to Registrants",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar Updated"
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}/status": {
      "put": {
        "description": "Update a webinar's status",
        "summary": "Webinar status",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsStatusByWebinarIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body284",
              "description": "`end` end a webinar",
              "type": "object",
              "properties": {
                "status": {
                  "description": "",
                  "example": "end",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webinar updated"
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}/panelists": {
      "get": {
        "description": "List panelists for a webinar",
        "summary": "Get panelists",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsPanelistsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Panelist List",
              "description": "Success",
              "type": "object",
              "properties": {
                "total_records": {
                  "description": "Total records",
                  "type": "integer",
                  "format": "int32"
                },
                "panelists": {
                  "description": "List of Panelist objects",
                  "type": "array",
                  "items": {
                    "title": "Panelist82",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Panelist's ID",
                        "type": "string"
                      },
                      "name": {
                        "description": "Panelist's full name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Panelist's email",
                        "type": "string"
                      },
                      "join_url": {
                        "description": "Join url",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add panelist to webinar",
        "summary": "Add panelist",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsPanelistsByWebinarIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "WebinarPanelist",
              "description": "Webinar panelist",
              "type": "object",
              "properties": {
                "panelists": {
                  "description": "List of Panelist objects",
                  "type": "array",
                  "items": {
                    "title": "Panelist",
                    "description": "Panelist base object",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Panelist's full name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Panelist's email",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Panelist created",
            "schema": {
              "title": "webinarPanelistCreateResponse",
              "description": "Panelist created",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Panelist ID",
                  "type": "string"
                },
                "join_url": {
                  "description": "Join URL for this panelist",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Remove all panelists from a webinar",
        "summary": "Remove panelists",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsPanelistsByWebinarIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}/panelists/{panelistId}": {
      "delete": {
        "description": "Remove a panelist from a webinar",
        "summary": "Delete single panelist",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsPanelistsByWebinarIdAndPanelistIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "panelistId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The panelist ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Panelists removed"
          },
          "404": {
            "description": "Webinar or Panelist not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}/registrants": {
      "get": {
        "description": "List registrants for a webinar",
        "summary": "Get webinar registrants",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsRegistrantsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "enum": [
              "pending",
              "approved",
              "denied"
            ],
            "x-enum-elements": [
              {
                "name": "pending",
                "description": ""
              },
              {
                "name": "approved",
                "description": ""
              },
              {
                "name": "denied",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The registrant status\n**default:** approved\n`pending` registrants status is pending\n`approved` registrants status is approved\n`denied` registrants status is denied"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "title": "Registration List",
              "description": "Success",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "registrants": {
                  "description": "List of Registrant objects",
                  "type": "array",
                  "items": {
                    "title": "Registrant75",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "status": {
                        "description": "",
                        "type": "string"
                      },
                      "create_time": {
                        "description": "",
                        "type": "string",
                        "format": "date-time"
                      },
                      "join_url": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add a registrant for a webinar",
        "summary": "Add webinar registrant",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsRegistrantsByWebinarIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Registrant",
              "description": "Registrant base object",
              "type": "object",
              "properties": {
                "email": {
                  "description": "A valid email address",
                  "type": "string"
                },
                "first_name": {
                  "description": "User’s first name",
                  "type": "string"
                },
                "last_name": {
                  "description": "User’s last name",
                  "type": "string"
                },
                "address": {
                  "description": "Address",
                  "type": "string"
                },
                "city": {
                  "description": "City",
                  "type": "string"
                },
                "country": {
                  "description": "Country",
                  "type": "string"
                },
                "zip": {
                  "description": "Zip/Postal Code",
                  "type": "string"
                },
                "state": {
                  "description": "State/Province",
                  "type": "string"
                },
                "phone": {
                  "description": "Phone",
                  "type": "string"
                },
                "industry": {
                  "description": "Industry",
                  "type": "string"
                },
                "org": {
                  "description": "Organization",
                  "type": "string"
                },
                "job_title": {
                  "description": "Job Title",
                  "type": "string"
                },
                "purchasing_time_frame": {
                  "title": "purchasing_time_frame",
                  "example": "Within a month",
                  "x-enum-elements": [
                    {
                      "name": "Enum_Within a month",
                      "description": ""
                    },
                    {
                      "name": "Enum_1-3 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_4-6 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_More than 6 months",
                      "description": ""
                    },
                    {
                      "name": "Enum_No timeframe",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "Within a month",
                    "1-3 months",
                    "4-6 months",
                    "More than 6 months",
                    "No timeframe"
                  ]
                },
                "role_in_purchase_process": {
                  "title": "role_in_purchase_process",
                  "example": "Decision Maker",
                  "x-enum-elements": [
                    {
                      "name": "Enum_Decision Maker",
                      "description": ""
                    },
                    {
                      "name": "Enum_EvaluatorRecommender",
                      "description": ""
                    },
                    {
                      "name": "Influencer",
                      "description": ""
                    },
                    {
                      "name": "Enum_Not involved",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "Decision Maker",
                    "Evaluator/Recommender",
                    "Influencer",
                    "Not involved"
                  ]
                },
                "no_of_employees": {
                  "title": "no_of_employees",
                  "example": "1-20",
                  "x-enum-elements": [
                    {
                      "name": "Enum_120",
                      "description": ""
                    },
                    {
                      "name": "Enum_2150",
                      "description": ""
                    },
                    {
                      "name": "Enum_51100",
                      "description": ""
                    },
                    {
                      "name": "Enum_101500",
                      "description": ""
                    },
                    {
                      "name": "Enum_5001000",
                      "description": ""
                    },
                    {
                      "name": "Enum_10015000",
                      "description": ""
                    },
                    {
                      "name": "Enum_500110000",
                      "description": ""
                    },
                    {
                      "name": "Enum_More than 10,000",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "1-20",
                    "21-50",
                    "51-100",
                    "101-500",
                    "500-1,000",
                    "1,001-5,000",
                    "5,001-10,000",
                    "More than 10,000"
                  ]
                },
                "comments": {
                  "description": "Questions & Comments",
                  "type": "string"
                },
                "custom_questions": {
                  "description": "Custom Questions",
                  "type": "array",
                  "items": {
                    "title": "custom_questions",
                    "description": "Custom Question",
                    "type": "object",
                    "properties": {
                      "title": {
                        "description": "",
                        "type": "string"
                      },
                      "value": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "email",
                "first_name",
                "last_name"
              ]
            }
          },
          {
            "name": "occurrence_ids",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Occurrence IDs, could get this value from Webinar Get API. Multiple value separated by comma."
          }
        ],
        "responses": {
          "201": {
            "description": "Registration created",
            "schema": {
              "title": "webinarRegistrantCreateResponse",
              "description": "Registration created",
              "type": "object",
              "properties": {
                "registrant_id": {
                  "description": "Registrant ID",
                  "type": "string"
                },
                "id": {
                  "description": "Registrant ID",
                  "type": "string"
                },
                "topic": {
                  "description": "Topic",
                  "type": "string"
                },
                "start_time": {
                  "description": "Start time",
                  "type": "string",
                  "format": "date-time"
                },
                "join_url": {
                  "description": "Join URL for this registrant",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webinars/{webinarId}/registrants/status": {
      "put": {
        "description": "Update a webinar registrant's status",
        "summary": "Update registrant status",
        "tags": [
          "Webinars"
        ],
        "operationId": "WebinarsRegistrantsStatusByWebinarIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body288",
              "type": "object",
              "properties": {
                "action": {
                  "title": "action170",
                  "example": "approve",
                  "x-enum-elements": [
                    {
                      "name": "approve",
                      "description": ""
                    },
                    {
                      "name": "cancel",
                      "description": ""
                    },
                    {
                      "name": "deny",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "approve",
                    "cancel",
                    "deny"
                  ]
                },
                "registrants": {
                  "description": "List of registrants",
                  "type": "array",
                  "items": {
                    "title": "Registrant95",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "",
                        "type": "string"
                      },
                      "email": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "required": [
                "action"
              ]
            }
          },
          {
            "name": "occurrence_id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The meeting occurrence ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Registrant status updated"
          },
          "404": {
            "description": "Webinar or Registrant not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/past_webinars/{webinarId}/instances": {
      "get": {
        "description": "List of ended webinar instances",
        "summary": "Get past webinars",
        "tags": [
          "Webinars"
        ],
        "operationId": "PastWebinarsInstancesByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The webinar ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of ended webinar instances",
            "schema": {
              "title": "Webinar instances",
              "description": "List of ended webinar instances",
              "type": "object",
              "properties": {
                "webinars": {
                  "description": "List of ended webinar instances.",
                  "type": "array",
                  "items": {
                    "title": "Webinar146",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "WebinarUUID",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Start time",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/groups": {
      "get": {
        "description": "List groups under your account",
        "summary": "Get groups",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of groups returned",
            "schema": {
              "title": "GroupList",
              "description": "List of groups returned",
              "type": "object",
              "properties": {
                "total_records": {
                  "description": "Total records",
                  "type": "integer",
                  "format": "int32"
                },
                "groups": {
                  "description": "List of Group objects",
                  "type": "array",
                  "items": {
                    "title": "Group37",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Group ID",
                        "type": "string"
                      },
                      "name": {
                        "description": "Group name",
                        "type": "string"
                      },
                      "total_members": {
                        "description": "Total number of members in this group",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/groups"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get groups",
            "x-testDescription": "List groups under your account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a group under your account",
        "summary": "Create group",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body162",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Group name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Group created",
            "schema": {
              "title": "groupCreateResponse",
              "description": "Group created",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Group ID",
                  "type": "string"
                },
                "name": {
                  "description": "Group name",
                  "type": "string"
                },
                "total_members": {
                  "description": "Group member count",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/groups/{groupId}": {
      "get": {
        "description": "Retrieve a group under your account",
        "summary": "Get single group",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsByGroupIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Group object returned",
            "schema": {
              "title": "groupResponse",
              "description": "Group object returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Group ID",
                  "type": "string"
                },
                "name": {
                  "description": "Group name",
                  "type": "string"
                },
                "total_members": {
                  "description": "Total number of members in this group",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a group under your account",
        "summary": "Delete single group",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsByGroupIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Group deleted"
          },
          "404": {
            "description": "Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a group under your account",
        "summary": "Update group",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsByGroupIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body162",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Group name",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Group updated"
          },
          "404": {
            "description": "Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/groups/{groupId}/members": {
      "get": {
        "description": "List a group's members under your account",
        "summary": "Get group members",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsMembersByGroupIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Group member list returned",
            "schema": {
              "title": "Group Member List",
              "description": "Group member list returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "members": {
                  "description": "List of Group member objects",
                  "type": "array",
                  "items": {
                    "title": "GroupMember",
                    "description": "Group member object",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "User first name",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "User last name",
                        "type": "string"
                      },
                      "type": {
                        "description": "User type",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add members to a group under your account",
        "summary": "Add group members",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsMembersByGroupIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body166",
              "type": "object",
              "properties": {
                "members": {
                  "description": "List of Group members",
                  "type": "array",
                  "items": {
                    "title": "Member",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email. If ID given, email is ignored.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Member added",
            "schema": {
              "title": "groupMembersCreateResponse",
              "description": "Member added",
              "type": "object",
              "properties": {
                "ids": {
                  "description": "",
                  "type": "string"
                },
                "added_at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/groups/{groupId}/members/{memberId}": {
      "delete": {
        "description": "Delete a member from a group under your account",
        "summary": "Delete group member",
        "tags": [
          "Groups"
        ],
        "operationId": "GroupsMembersByGroupIdAndMemberIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The member ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Group member deleted"
          },
          "404": {
            "description": "Group or Group member not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/groups": {
      "get": {
        "description": "List IM groups under your account",
        "summary": "Get IM Groups",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of IM Groups returned",
            "schema": {
              "title": "IM Group List",
              "description": "List of IM Groups returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "groups": {
                  "description": "List of Group objects",
                  "type": "array",
                  "items": {
                    "title": "Group43",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "IM Group ID",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/im/groups"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get IM Groups",
            "x-testDescription": "List IM groups under your account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a IM Group under your account",
        "summary": "Creat IM group",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body172",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Group name, must be unique in one account\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "type": {
                  "title": "type252",
                  "example": "normal",
                  "x-enum-elements": [
                    {
                      "name": "normal",
                      "description": ""
                    },
                    {
                      "name": "shared",
                      "description": ""
                    },
                    {
                      "name": "restricted",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ]
                },
                "search_by_domain": {
                  "description": "Members can search others in the same email domain",
                  "type": "boolean"
                },
                "search_by_account": {
                  "description": "Members can search others under same account",
                  "type": "boolean"
                },
                "search_by_ma_account": {
                  "description": "Members can search others under same master account, including all sub accounts",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "IM Group created",
            "schema": {
              "title": "imGroupCreateResponse",
              "description": "IM Group created",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Group ID",
                  "type": "string"
                },
                "name": {
                  "description": "Group name",
                  "type": "string"
                },
                "total_members": {
                  "description": "Group member count",
                  "type": "integer",
                  "format": "int32"
                },
                "search_by_domain": {
                  "description": "Members can search others in the same email domain",
                  "type": "boolean"
                },
                "search_by_account": {
                  "description": "Members can search others under same account",
                  "type": "boolean"
                },
                "search_by_ma_account": {
                  "description": "Members can search others under same master account, including all sub accounts",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/groups/{groupId}": {
      "get": {
        "description": "Retrieve an IM Group under your account",
        "summary": "Get IM group",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsByGroupIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          }
        ],
        "responses": {
          "200": {
            "description": "IM Group object returned",
            "schema": {
              "title": "imGroupResponse",
              "description": "IM Group object returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Group ID",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "IM Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete an IM Group under your account",
        "summary": "Delete IM group",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsByGroupIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group deleted"
          },
          "404": {
            "description": "IM Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update an IM Group under your account",
        "summary": "Update IM group",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsByGroupIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body172",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Group name, must be unique in one account\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "type": {
                  "title": "type252",
                  "example": "normal",
                  "x-enum-elements": [
                    {
                      "name": "normal",
                      "description": ""
                    },
                    {
                      "name": "shared",
                      "description": ""
                    },
                    {
                      "name": "restricted",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "normal",
                    "shared",
                    "restricted"
                  ]
                },
                "search_by_domain": {
                  "description": "Members can search others in the same email domain",
                  "type": "boolean"
                },
                "search_by_account": {
                  "description": "Members can search others under same account",
                  "type": "boolean"
                },
                "search_by_ma_account": {
                  "description": "Members can search others under same master account, including all sub accounts",
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group updated"
          },
          "404": {
            "description": "IM Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/groups/{groupId}/members": {
      "get": {
        "description": "List an IM Group's members under your account",
        "summary": "Get IM group members",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsMembersByGroupIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "IM Group member list returned",
            "schema": {
              "title": "Group Member List",
              "description": "Group member list returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "members": {
                  "description": "List of Group member objects",
                  "type": "array",
                  "items": {
                    "title": "GroupMember",
                    "description": "Group member object",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "first_name": {
                        "description": "User first name",
                        "type": "string"
                      },
                      "last_name": {
                        "description": "User last name",
                        "type": "string"
                      },
                      "type": {
                        "description": "User type",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "IM Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add members to an IM Group under your account",
        "summary": "Add IM group member",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsMembersByGroupIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body166",
              "type": "object",
              "properties": {
                "members": {
                  "description": "List of Group members",
                  "type": "array",
                  "items": {
                    "title": "Member",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email. If ID given, email is ignored.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Member added",
            "schema": {
              "title": "imGroupMembersCreateResponse",
              "description": "Member added",
              "type": "object",
              "properties": {
                "ids": {
                  "description": "",
                  "type": "string"
                },
                "added_at": {
                  "description": "",
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "404": {
            "description": "IM Group not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/groups/{groupId}/members/{memberId}": {
      "delete": {
        "description": "Delete a member from an IM Group under your account",
        "summary": "Delete IM group member",
        "tags": [
          "IM Groups"
        ],
        "operationId": "ImGroupsMembersByGroupIdAndMemberIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The group ID"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The member ID"
          }
        ],
        "responses": {
          "204": {
            "description": "IM Group member deleted"
          },
          "404": {
            "description": "IM Group or IM Group member not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/chat/sessions": {
      "get": {
        "description": "Retrieve IM Chat sessions for a specified period <aside>This API only supports oauth2.</aside>",
        "summary": "Get chat sessions",
        "tags": [
          "IM Chat"
        ],
        "operationId": "ImChatSessionsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Archived IM Chat sessions Returned",
            "schema": {
              "title": "imChatSessionsResponse",
              "description": "Archived IM Chat sessions Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date",
                  "type": "string",
                  "format": "date"
                },
                "page_size": {
                  "description": "The amount of records returns within a single API call.\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
                  "type": "string"
                },
                "sessions": {
                  "description": "Array of session objects",
                  "type": "array",
                  "items": {
                    "title": "Session182",
                    "type": "object",
                    "properties": {
                      "session_id": {
                        "description": "IM Chat session ID",
                        "type": "string"
                      },
                      "type": {
                        "description": "IM Chat session type",
                        "type": "string"
                      },
                      "name": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "last_message_sent_time": {
                        "description": "Last message sent time",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/chat/messages": {
      "post": {
        "description": "Send messages from your app as a bot",
        "summary": "Send chat messages as a bot",
        "tags": [
          "IM Chat"
        ],
        "operationId": "ImChatMessagesPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "sendMessage",
              "type": "object",
              "properties": {
                "robot_jid": {
                  "description": "Robot JID",
                  "type": "string"
                },
                "to_jid": {
                  "description": "Unique JID of reciever. Can be a group or user.",
                  "type": "string"
                },
                "account_jid": {
                  "description": "Account ID of the authorized account",
                  "type": "string"
                },
                "content": {
                  "description": "JSON template describing how the message should be displayed to the user. For more information please see our [Send Message Templates](https://devdocs.zoom.us/v1.0/reference#send-message-templates)",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Message sent"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/im/chat/sessions/{sessionId}": {
      "get": {
        "description": "Retrieve IM Chat messages for a specified period <aside>This API only supports oauth2.</aside>",
        "summary": "Get chat messages",
        "tags": [
          "IM Chat"
        ],
        "operationId": "ImChatSessionsBySessionIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "IM Chat Session ID"
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Archived IM Chat messages Returned",
            "schema": {
              "title": "imChatMessagesResponse",
              "description": "Archived IM Chat messages Returned",
              "type": "object",
              "properties": {
                "session_id": {
                  "description": "IM Chat session ID",
                  "type": "string"
                },
                "from": {
                  "description": "Start date",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date",
                  "type": "string",
                  "format": "date"
                },
                "page_size": {
                  "description": "The amount of records returns within a single API call.\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
                  "type": "string"
                },
                "messages": {
                  "description": "Array of session objects",
                  "type": "array",
                  "items": {
                    "title": "Message",
                    "type": "object",
                    "properties": {
                      "message": {
                        "description": "IM Chat message content",
                        "type": "string"
                      },
                      "sender": {
                        "description": "IM Chat message sender",
                        "type": "string"
                      },
                      "date_time": {
                        "description": "IM Chat message sent time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "action": {
                        "description": "IM Chat message action",
                        "type": "string"
                      },
                      "action_time": {
                        "description": "Action time",
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/recordings": {
      "get": {
        "description": "List all the recordings",
        "summary": "Get all recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "UsersRecordingsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          },
          {
            "name": "mc",
            "in": "query",
            "required": false,
            "default": "false",
            "type": "string",
            "description": "Query mc\n**default:** false"
          },
          {
            "name": "trash",
            "in": "query",
            "required": false,
            "default": false,
            "type": "boolean",
            "description": "Query trash\n**default:** false"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Recording objects returned",
            "schema": {
              "title": "Recording List",
              "description": "List of Recording objects returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start Date,",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End Date",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "meetings": {
                  "description": "List of Recording",
                  "type": "array",
                  "items": {
                    "title": "RecordingMeeting",
                    "description": "The recording meeting object",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Meeting unique ID",
                        "type": "string"
                      },
                      "id": {
                        "description": "Meeting ID, also know as meeting number",
                        "type": "string"
                      },
                      "account_id": {
                        "description": "ID of the user account",
                        "type": "string"
                      },
                      "host_id": {
                        "description": "ID of the user set as host of meeting",
                        "type": "string"
                      },
                      "topic": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Meeting start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "total_size": {
                        "description": "Total size",
                        "type": "string"
                      },
                      "recording_count": {
                        "description": "Recording count",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/recordings": {
      "get": {
        "description": "Retrieve a meeting’s all recordings",
        "summary": "Get single recording",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "MeetingsRecordingsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Recording object returned",
            "schema": {
              "title": "RecordingMeeting",
              "description": "The recording meeting object",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting unique ID",
                  "type": "string"
                },
                "id": {
                  "description": "Meeting ID, also know as meeting number",
                  "type": "string"
                },
                "account_id": {
                  "description": "ID of the user account",
                  "type": "string"
                },
                "host_id": {
                  "description": "ID of the user set as host of meeting",
                  "type": "string"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "total_size": {
                  "description": "Total size",
                  "type": "string"
                },
                "recording_count": {
                  "description": "Recording count",
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Meeting recording not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a meeting's recordings",
        "summary": "Delete recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "MeetingsRecordingsByMeetingIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "enum": [
              "trash",
              "delete"
            ],
            "x-enum-elements": [
              {
                "name": "trash",
                "description": ""
              },
              {
                "name": "delete",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The recording delete action\n**default:** trash\n`trash` move recording to trash\n`delete` delete recording permanently"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording deleted"
          },
          "404": {
            "description": "Meeting recording not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}": {
      "delete": {
        "description": "Delete one meeting recording file",
        "summary": "Delete single recording",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "MeetingsRecordingsByMeetingIdAndRecordingIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The recording ID"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "enum": [
              "trash",
              "delete"
            ],
            "x-enum-elements": [
              {
                "name": "trash",
                "description": ""
              },
              {
                "name": "delete",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The recording delete action\n**default:** trash\n`trash` move recording to trash\n`delete` delete recording permanently"
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording file deleted"
          },
          "404": {
            "description": "Meeting recording file not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/recordings/status": {
      "put": {
        "description": "Recover a meeting's recordings",
        "summary": "Recover recordings",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "MeetingsRecordingsStatusByMeetingIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body190",
              "description": "`recover` recover meeting recording",
              "type": "object",
              "properties": {
                "action": {
                  "description": "",
                  "example": "end",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording recover"
          },
          "404": {
            "description": "Meeting recording not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/meetings/{meetingId}/recordings/{recordingId}/status": {
      "put": {
        "description": "Recover a single recording",
        "summary": "Recover single recording",
        "tags": [
          "Cloud Recording"
        ],
        "operationId": "MeetingsRecordingsStatusByMeetingIdAndRecordingIdPut",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "recordingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The recording ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body190",
              "description": "`recover` recover meeting recording",
              "type": "object",
              "properties": {
                "action": {
                  "description": "",
                  "example": "end",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Meeting recording recover"
          },
          "404": {
            "description": "Meeting recording not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/daily": {
      "get": {
        "description": "Retrieve daily report for one month, can only get daily report for recent 6 months",
        "summary": "Daily report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportDailyGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Year for this report"
          },
          {
            "name": "month",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Month for this report"
          }
        ],
        "responses": {
          "200": {
            "description": "Daily Report Returned",
            "schema": {
              "title": "reportDailyResponse",
              "description": "Daily Report Returned",
              "type": "object",
              "properties": {
                "year": {
                  "description": "Year for this report",
                  "type": "integer",
                  "format": "int32"
                },
                "month": {
                  "description": "Month for this report",
                  "type": "integer",
                  "format": "int32"
                },
                "dates": {
                  "description": "Array of date objects",
                  "type": "array",
                  "items": {
                    "title": "Date232",
                    "type": "object",
                    "properties": {
                      "date": {
                        "description": "Date for this object",
                        "type": "string",
                        "format": "date"
                      },
                      "new_users": {
                        "description": "Number of new users on this date",
                        "type": "integer",
                        "format": "int32"
                      },
                      "meetings": {
                        "description": "Number of meetings on this date",
                        "type": "integer",
                        "format": "int32"
                      },
                      "participants": {
                        "description": "Number of participants on this date",
                        "type": "integer",
                        "format": "int32"
                      },
                      "meeting_minutes": {
                        "description": "Number of meeting minutes on this date",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/report/daily"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Daily report",
            "x-testDescription": "Retrieve daily report for one month, can only get daily report for recent 6 months"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/users": {
      "get": {
        "description": "Retrieve active or inactive hosts report for a specified period",
        "summary": "User report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportUsersGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "active",
              "inactive"
            ],
            "x-enum-elements": [
              {
                "name": "active",
                "description": ""
              },
              {
                "name": "inactive",
                "description": ""
              }
            ],
            "type": "string",
            "description": "Active hosts or inactive hosts\n`active` Active hosts\n`inactive` Inactive hosts"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Active/Inactive Hosts Report Returned",
            "schema": {
              "title": "reportUsersResponse",
              "description": "Active/Inactive Hosts Report Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "total_meetings": {
                  "description": "Number of meetings for this range",
                  "type": "integer",
                  "format": "int32"
                },
                "total_participants": {
                  "description": "Number of participants for this range",
                  "type": "integer",
                  "format": "int32"
                },
                "total_meeting_minutes": {
                  "description": "Number of meeting minutes for this range",
                  "type": "integer",
                  "format": "int32"
                },
                "users": {
                  "description": "Array of user objects",
                  "type": "array",
                  "items": {
                    "title": "User235",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "User ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "type": {
                        "description": "User type",
                        "type": "integer",
                        "format": "int32"
                      },
                      "dept": {
                        "description": "User department",
                        "type": "string"
                      },
                      "meetings": {
                        "description": "Number of meetings for user",
                        "type": "integer",
                        "format": "int32"
                      },
                      "participants": {
                        "description": "Number of participants in meetings for user",
                        "type": "integer",
                        "format": "int32"
                      },
                      "meeting_minutes": {
                        "description": "Number of meeting minutes for user",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/users/{userId}/meetings": {
      "get": {
        "description": "Retrieve ended meetings report for a specified period",
        "summary": "Meetings report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportUsersMeetingsByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Active/Inactive Hosts Report Returned",
            "schema": {
              "title": "reportMeetingsResponse",
              "description": "Active/Inactive Hosts Report Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "meetings": {
                  "description": "Array of meeting objects",
                  "type": "array",
                  "items": {
                    "title": "Meeting237",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Meeting UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "id": {
                        "description": "Meeting ID",
                        "type": "integer",
                        "format": "int32"
                      },
                      "type": {
                        "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
                        "type": "integer",
                        "format": "int32"
                      },
                      "topic": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "user_email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Meeting start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_time": {
                        "description": "Meeting end time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "total_minutes": {
                        "description": "Number of meeting minutes",
                        "type": "integer",
                        "format": "int32"
                      },
                      "participants_count": {
                        "description": "Number of meeting participants",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/meetings/{meetingId}": {
      "get": {
        "description": "Retrieve ended meeting details report",
        "summary": "Meeting details report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportMeetingsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting detail Returned",
            "schema": {
              "title": "reportMeetingDetailsResponse",
              "description": "Meeting detail Returned",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "id": {
                  "description": "Meeting ID",
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
                  "type": "integer",
                  "format": "int32"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "user_name": {
                  "description": "User display name",
                  "type": "string"
                },
                "user_email": {
                  "description": "User email",
                  "type": "string"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "end_time": {
                  "description": "Meeting end time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "total_minutes": {
                  "description": "Number of meeting minutes",
                  "type": "integer",
                  "format": "int32"
                },
                "participants_count": {
                  "description": "Number of meeting participants",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/meetings/{meetingId}/participants": {
      "get": {
        "description": "Retrieve ended meeting participants report",
        "summary": "Meeting participants report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportMeetingsParticipantsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "title": "reportMeetingParticipantsResponse",
              "description": "Meeting Participants Report Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of meeting participant objects",
                  "type": "array",
                  "items": {
                    "title": "Participant240",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "user_email": {
                        "description": "Participant email",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Participant duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "attentiveness_score": {
                        "description": "Participant attentiveness score",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/meetings/{meetingId}/polls": {
      "get": {
        "description": "Retrieve ended meeting polls report",
        "summary": "Meetings polls report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportMeetingsPollsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Polls Report Returned",
            "schema": {
              "title": "reportMeetingPollsResponse",
              "description": "Meeting Polls Report Returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Meeting ID",
                  "type": "integer",
                  "format": "int32"
                },
                "uuid": {
                  "description": "Meeting UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "questions": {
                  "description": "Array of Meeting question objects",
                  "type": "array",
                  "items": {
                    "title": "Question",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Participant email",
                        "type": "string"
                      },
                      "question_details": {
                        "description": "Array of questions from user",
                        "type": "array",
                        "items": {
                          "title": "QuestionDetail",
                          "type": "object",
                          "properties": {
                            "question": {
                              "description": "Asked question",
                              "type": "string"
                            },
                            "answer": {
                              "description": "Given answer",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Meeting not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/webinars/{webinarId}": {
      "get": {
        "description": "Retrieve ended webinar details report",
        "summary": "Webinar details report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportWebinarsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar detail Returned",
            "schema": {
              "title": "reportWebinarDetailsResponse",
              "description": "Webinar detail Returned",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "id": {
                  "description": "Meeting ID",
                  "type": "integer",
                  "format": "int32"
                },
                "type": {
                  "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
                  "type": "integer",
                  "format": "int32"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "user_name": {
                  "description": "User display name",
                  "type": "string"
                },
                "user_email": {
                  "description": "User email",
                  "type": "string"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "end_time": {
                  "description": "Meeting end time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "integer",
                  "format": "int32"
                },
                "total_minutes": {
                  "description": "Number of meeting minutes",
                  "type": "integer",
                  "format": "int32"
                },
                "participants_count": {
                  "description": "Number of meeting participants",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/webinars/{webinarId}/participants": {
      "get": {
        "description": "Retrieve ended webinar participants report",
        "summary": "Webinar participants report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportWebinarsParticipantsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Report Returned",
            "schema": {
              "title": "reportWebinarParticipantsResponse",
              "description": "Meeting Participants Report Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of webinar participant objects",
                  "type": "array",
                  "items": {
                    "title": "Participant246",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "user_email": {
                        "description": "Participant email",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Participant duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "attentiveness_score": {
                        "description": "Participant attentiveness score",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/webinars/{webinarId}/polls": {
      "get": {
        "description": "Retrieve ended webinar polls report",
        "summary": "Webinar polls report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportWebinarsPollsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Polls Report Returned",
            "schema": {
              "title": "reportWebinarPollsResponse",
              "description": "Webinar Polls Report Returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Webinar ID",
                  "type": "integer",
                  "format": "int32"
                },
                "uuid": {
                  "description": "Webinar UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "start_time": {
                  "description": "Webinar start time",
                  "type": "string",
                  "format": "date-time"
                },
                "questions": {
                  "description": "Array of webinar question objects",
                  "type": "array",
                  "items": {
                    "title": "Question",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Participant email",
                        "type": "string"
                      },
                      "question_details": {
                        "description": "Array of questions from user",
                        "type": "array",
                        "items": {
                          "title": "QuestionDetail",
                          "type": "object",
                          "properties": {
                            "question": {
                              "description": "Asked question",
                              "type": "string"
                            },
                            "answer": {
                              "description": "Given answer",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/webinars/{webinarId}/qa": {
      "get": {
        "description": "Retrieve ended webinar Q&A report",
        "summary": "Webinar Q&A report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportWebinarsQaByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Q&A Report Returned",
            "schema": {
              "title": "reportWebinarQAResponse",
              "description": "Webinar Q&A Report Returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Webinar ID",
                  "type": "integer",
                  "format": "int32"
                },
                "uuid": {
                  "description": "Webinar UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "start_time": {
                  "description": "Webinar start time",
                  "type": "string",
                  "format": "date-time"
                },
                "questions": {
                  "description": "Array of webinar question objects",
                  "type": "array",
                  "items": {
                    "title": "Question",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Participant email",
                        "type": "string"
                      },
                      "question_details": {
                        "description": "Array of questions from user",
                        "type": "array",
                        "items": {
                          "title": "QuestionDetail",
                          "type": "object",
                          "properties": {
                            "question": {
                              "description": "Asked question",
                              "type": "string"
                            },
                            "answer": {
                              "description": "Given answer",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/report/telephone": {
      "get": {
        "description": "Retrieve telephone report for a specified period \n>Toll Report option would be removed",
        "summary": "Telphone report",
        "tags": [
          "Reports"
        ],
        "operationId": "ReportTelephoneGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "1"
            ],
            "x-enum-elements": [
              {
                "name": "Enum_1",
                "description": ""
              }
            ],
            "type": "string",
            "description": "Audio type\n`1` Toll-free Call-in & Call-out"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Telephone Report Returned",
            "schema": {
              "title": "reportTelephoneResponse",
              "description": "Telephone Report Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "telephony_usage": {
                  "description": "Array of telephony objects",
                  "type": "array",
                  "items": {
                    "title": "TelephonyUsage",
                    "type": "object",
                    "properties": {
                      "meeting_id": {
                        "description": "Meeting ID",
                        "type": "integer",
                        "format": "int32"
                      },
                      "phone_number": {
                        "description": "Telephone Number",
                        "type": "string"
                      },
                      "host_name": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "host_email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "dept": {
                        "description": "User department",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Meeting start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_time": {
                        "description": "Meeting end time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "integer",
                        "format": "int32"
                      },
                      "total": {
                        "description": "Total",
                        "type": "number",
                        "format": "double"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings": {
      "get": {
        "description": "List live meetings or past meetings for a specified period",
        "summary": "Meetings dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "pastOne",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meetings Returned",
            "schema": {
              "title": "dashboardMeetingsResponse",
              "description": "Meetings Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "meetings": {
                  "description": "Array of meeting objects",
                  "type": "array",
                  "items": {
                    "title": "Meeting Metrics",
                    "description": "Meeting metric details",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Meeting UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "id": {
                        "description": "Meeting ID",
                        "type": "integer",
                        "format": "int32"
                      },
                      "topic": {
                        "description": "Meeting topic",
                        "type": "string"
                      },
                      "host": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "user_type": {
                        "description": "User type",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Meeting start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_time": {
                        "description": "Meeting end time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Meeting duration",
                        "type": "string"
                      },
                      "participants": {
                        "description": "Meeting participant count",
                        "type": "integer",
                        "format": "int32"
                      },
                      "has_pstn": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_voip": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_3rd_party_audio": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_video": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_screen_share": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_recording": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_sip": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings/{meetingId}": {
      "get": {
        "description": "Retrieve live or past meetings detail",
        "summary": "Meeting details dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "pastOne",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Returned",
            "schema": {
              "title": "Meeting Metrics",
              "description": "Meeting metric details",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Meeting UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "id": {
                  "description": "Meeting ID",
                  "type": "integer",
                  "format": "int32"
                },
                "topic": {
                  "description": "Meeting topic",
                  "type": "string"
                },
                "host": {
                  "description": "User display name",
                  "type": "string"
                },
                "email": {
                  "description": "User email",
                  "type": "string"
                },
                "user_type": {
                  "description": "User type",
                  "type": "string"
                },
                "start_time": {
                  "description": "Meeting start time",
                  "type": "string",
                  "format": "date-time"
                },
                "end_time": {
                  "description": "Meeting end time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Meeting duration",
                  "type": "string"
                },
                "participants": {
                  "description": "Meeting participant count",
                  "type": "integer",
                  "format": "int32"
                },
                "has_pstn": {
                  "description": "",
                  "type": "boolean"
                },
                "has_voip": {
                  "description": "",
                  "type": "boolean"
                },
                "has_3rd_party_audio": {
                  "description": "",
                  "type": "boolean"
                },
                "has_video": {
                  "description": "",
                  "type": "boolean"
                },
                "has_screen_share": {
                  "description": "",
                  "type": "boolean"
                },
                "has_recording": {
                  "description": "",
                  "type": "boolean"
                },
                "has_sip": {
                  "description": "",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants": {
      "get": {
        "description": "Retrieve live or past meetings participants",
        "summary": "Meeting participants dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsParticipantsByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "pastOne",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "pastOne",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "title": "dashboardMeetingParticipantsResponse",
              "description": "Meeting Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of user objects",
                  "type": "array",
                  "items": {
                    "title": "Participant205",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "device": {
                        "description": "Participant device",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Participant IP Address",
                        "type": "string"
                      },
                      "location": {
                        "description": "Participant location",
                        "type": "string"
                      },
                      "network_type": {
                        "description": "Participant network type",
                        "type": "string"
                      },
                      "microphone": {
                        "description": "Participant microphone",
                        "type": "string"
                      },
                      "speaker": {
                        "description": "Participant speaker",
                        "type": "string"
                      },
                      "data_center": {
                        "description": "Participant data center",
                        "type": "string"
                      },
                      "connection_type": {
                        "description": "Participant connection type",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "share_application": {
                        "description": "Did participant share application",
                        "type": "boolean"
                      },
                      "share_desktop": {
                        "description": "Did participant share desktop",
                        "type": "boolean"
                      },
                      "share_whiteboard": {
                        "description": "Did participant share whiteboard",
                        "type": "boolean"
                      },
                      "recording": {
                        "description": "Participant record",
                        "type": "boolean"
                      },
                      "pc_name": {
                        "description": "Participant PC name",
                        "type": "string"
                      },
                      "domain": {
                        "description": "Participant domain",
                        "type": "string"
                      },
                      "mac_addr": {
                        "description": "Participant MAC Address",
                        "type": "string"
                      },
                      "harddisk_id": {
                        "description": "Participant hard disk id",
                        "type": "string"
                      },
                      "version": {
                        "description": "Participant version",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/{participantId}/qos": {
      "get": {
        "description": "Retrieve live or past meetings participant quality of service",
        "summary": "Meeting QOS dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsParticipantsQosByMeetingIdAndParticipantIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Participant ID"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participant QOS Returned",
            "schema": {
              "title": "Participant QOS",
              "description": "Meeting Participant QOS Returned",
              "type": "object",
              "properties": {
                "user_id": {
                  "description": "Participant ID",
                  "type": "string",
                  "format": "uuid"
                },
                "user_name": {
                  "description": "Participant display name",
                  "type": "string"
                },
                "device": {
                  "description": "Participant device",
                  "type": "string"
                },
                "ip_address": {
                  "description": "Participant IP Address",
                  "type": "string"
                },
                "location": {
                  "description": "Participant location",
                  "type": "string"
                },
                "join_time": {
                  "description": "Participant join time",
                  "type": "string",
                  "format": "date-time"
                },
                "leave_time": {
                  "description": "Participant leave time",
                  "type": "string",
                  "format": "date-time"
                },
                "pc_name": {
                  "description": "Participant PC name",
                  "type": "string"
                },
                "domain": {
                  "description": "Participant domain",
                  "type": "string"
                },
                "mac_addr": {
                  "description": "Participant MAC Address",
                  "type": "string"
                },
                "harddisk_id": {
                  "description": "Participant hard disk id",
                  "type": "string"
                },
                "version": {
                  "description": "Participant version",
                  "type": "string"
                },
                "user_qos": {
                  "title": "UserQos",
                  "type": "object",
                  "properties": {
                    "date_time": {
                      "description": "Datetime of QOS",
                      "type": "string",
                      "format": "date-time"
                    },
                    "audio_input": {
                      "title": "QOS Object",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        }
                      }
                    },
                    "audio_output": {
                      "title": "QOS Object",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        }
                      }
                    },
                    "video_input": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "video_output": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "as_input": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "as_output": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "cpu_usage": {
                      "title": "CpuUsage",
                      "type": "object",
                      "properties": {
                        "zoom_min_cpu_usage": {
                          "description": "Zoom Minimum CPU Usage",
                          "type": "string"
                        },
                        "zoom_avg_cpu_usage": {
                          "description": "Zoom Average CPU Usage",
                          "type": "string"
                        },
                        "zoom_max_cpu_usage": {
                          "description": "Zoom Maximum CPU Usage",
                          "type": "string"
                        },
                        "system_max_cpu_usage": {
                          "description": "System Maximum CPU Usage",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/qos": {
      "get": {
        "description": "Retrieve list of live or past meetings participants quality of service",
        "summary": "Meeting participants QOS dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsParticipantsQosByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "maximum": 10,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of items returned per page\nDefualt: 1\n**maximum:** 10"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "title": "Participant QOS List",
              "description": "Meeting Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int64"
                },
                "page_size": {
                  "description": "The number of items per page\n**maximum:** 10",
                  "example": 1,
                  "type": "integer",
                  "maximum": 10,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int64"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of user objects",
                  "type": "array",
                  "items": {
                    "title": "Participant QOS",
                    "description": "Meeting Participant QOS Returned",
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "device": {
                        "description": "Participant device",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Participant IP Address",
                        "type": "string"
                      },
                      "location": {
                        "description": "Participant location",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "pc_name": {
                        "description": "Participant PC name",
                        "type": "string"
                      },
                      "domain": {
                        "description": "Participant domain",
                        "type": "string"
                      },
                      "mac_addr": {
                        "description": "Participant MAC Address",
                        "type": "string"
                      },
                      "harddisk_id": {
                        "description": "Participant hard disk id",
                        "type": "string"
                      },
                      "version": {
                        "description": "Participant version",
                        "type": "string"
                      },
                      "user_qos": {
                        "title": "UserQos",
                        "type": "object",
                        "properties": {
                          "date_time": {
                            "description": "Datetime of QOS",
                            "type": "string",
                            "format": "date-time"
                          },
                          "audio_input": {
                            "title": "QOS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              }
                            }
                          },
                          "audio_output": {
                            "title": "QOS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              }
                            }
                          },
                          "video_input": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "video_output": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "as_input": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "as_output": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "cpu_usage": {
                            "title": "CpuUsage",
                            "type": "object",
                            "properties": {
                              "zoom_min_cpu_usage": {
                                "description": "Zoom Minimum CPU Usage",
                                "type": "string"
                              },
                              "zoom_avg_cpu_usage": {
                                "description": "Zoom Average CPU Usage",
                                "type": "string"
                              },
                              "zoom_max_cpu_usage": {
                                "description": "Zoom Maximum CPU Usage",
                                "type": "string"
                              },
                              "system_max_cpu_usage": {
                                "description": "System Maximum CPU Usage",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/meetings/{meetingId}/participants/sharing": {
      "get": {
        "description": "Retrieve sharing/recording details of live or past meetings participant",
        "summary": "Sharing/recording dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsMeetingsParticipantsSharingByMeetingIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "meetingId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The meeting ID or meeting UUID. If given meeting ID, will take the last meeting instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The meeting type\n**default:** live\n`scheduled` all the scheduled meetings\n`live` all the live meetings\n`upcoming` all the upcoming meetings"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meeting Participants Returned",
            "schema": {
              "title": "dashboardMeetingParticipantShareResponse",
              "description": "Meeting Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of participants",
                  "type": "array",
                  "items": {
                    "title": "Participant210",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "details": {
                        "description": "Array of sharing and recording details",
                        "type": "array",
                        "items": {
                          "title": "Detail",
                          "type": "object",
                          "properties": {
                            "content": {
                              "description": "Type of content shared",
                              "type": "string"
                            },
                            "start_time": {
                              "description": "Start time of sharing",
                              "type": "string"
                            },
                            "end_time": {
                              "description": "End time of sharing",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars": {
      "get": {
        "description": "List live webinars or past webinars for a specified period",
        "summary": "Webinars dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Meetings Returned",
            "schema": {
              "title": "dashboardWebinarsResponse",
              "description": "Meetings Returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "webinars": {
                  "description": "Array of webinar objects",
                  "type": "array",
                  "items": {
                    "title": "Webinar Metrics",
                    "description": "Webinar metric details",
                    "type": "object",
                    "properties": {
                      "uuid": {
                        "description": "Webinar UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "id": {
                        "description": "Webinar ID",
                        "type": "integer",
                        "format": "int32"
                      },
                      "topic": {
                        "description": "Webinar topic",
                        "type": "string"
                      },
                      "host": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "user_type": {
                        "description": "User type",
                        "type": "string"
                      },
                      "start_time": {
                        "description": "Webinar start time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "end_time": {
                        "description": "Webinar end time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "duration": {
                        "description": "Webinar duration",
                        "type": "string"
                      },
                      "participants": {
                        "description": "Webinar participant count",
                        "type": "integer",
                        "format": "int32"
                      },
                      "has_pstn": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_voip": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_3rd_party_audio": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_video": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_screen_share": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_recording": {
                        "description": "",
                        "type": "boolean"
                      },
                      "has_sip": {
                        "description": "",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars/{webinarId}": {
      "get": {
        "description": "Retrieve live  or past webinars detail",
        "summary": "Webinar details dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Returned",
            "schema": {
              "title": "Webinar Metrics",
              "description": "Webinar metric details",
              "type": "object",
              "properties": {
                "uuid": {
                  "description": "Webinar UUID",
                  "type": "string",
                  "format": "uuid"
                },
                "id": {
                  "description": "Webinar ID",
                  "type": "integer",
                  "format": "int32"
                },
                "topic": {
                  "description": "Webinar topic",
                  "type": "string"
                },
                "host": {
                  "description": "User display name",
                  "type": "string"
                },
                "email": {
                  "description": "User email",
                  "type": "string"
                },
                "user_type": {
                  "description": "User type",
                  "type": "string"
                },
                "start_time": {
                  "description": "Webinar start time",
                  "type": "string",
                  "format": "date-time"
                },
                "end_time": {
                  "description": "Webinar end time",
                  "type": "string",
                  "format": "date-time"
                },
                "duration": {
                  "description": "Webinar duration",
                  "type": "string"
                },
                "participants": {
                  "description": "Webinar participant count",
                  "type": "integer",
                  "format": "int32"
                },
                "has_pstn": {
                  "description": "",
                  "type": "boolean"
                },
                "has_voip": {
                  "description": "",
                  "type": "boolean"
                },
                "has_3rd_party_audio": {
                  "description": "",
                  "type": "boolean"
                },
                "has_video": {
                  "description": "",
                  "type": "boolean"
                },
                "has_screen_share": {
                  "description": "",
                  "type": "boolean"
                },
                "has_recording": {
                  "description": "",
                  "type": "boolean"
                },
                "has_sip": {
                  "description": "",
                  "type": "boolean"
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants": {
      "get": {
        "description": "Retrieve live or past webinar participants",
        "summary": "Webinar participants dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsParticipantsByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "title": "dashboardWebinarParticipantsResponse",
              "description": "Webinar Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of user objects",
                  "type": "array",
                  "items": {
                    "title": "Participant205",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "device": {
                        "description": "Participant device",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Participant IP Address",
                        "type": "string"
                      },
                      "location": {
                        "description": "Participant location",
                        "type": "string"
                      },
                      "network_type": {
                        "description": "Participant network type",
                        "type": "string"
                      },
                      "microphone": {
                        "description": "Participant microphone",
                        "type": "string"
                      },
                      "speaker": {
                        "description": "Participant speaker",
                        "type": "string"
                      },
                      "data_center": {
                        "description": "Participant data center",
                        "type": "string"
                      },
                      "connection_type": {
                        "description": "Participant connection type",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "share_application": {
                        "description": "Did participant share application",
                        "type": "boolean"
                      },
                      "share_desktop": {
                        "description": "Did participant share desktop",
                        "type": "boolean"
                      },
                      "share_whiteboard": {
                        "description": "Did participant share whiteboard",
                        "type": "boolean"
                      },
                      "recording": {
                        "description": "Participant record",
                        "type": "boolean"
                      },
                      "pc_name": {
                        "description": "Participant PC name",
                        "type": "string"
                      },
                      "domain": {
                        "description": "Participant domain",
                        "type": "string"
                      },
                      "mac_addr": {
                        "description": "Participant MAC Address",
                        "type": "string"
                      },
                      "harddisk_id": {
                        "description": "Participant hard disk id",
                        "type": "string"
                      },
                      "version": {
                        "description": "Participant version",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/{participantId}/qos": {
      "get": {
        "description": "Retrieve live or past webinar participant quality of service",
        "summary": "Webinar participant QOS dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsParticipantsQosByWebinarIdAndParticipantIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "participantId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Participant ID"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participant QOS Returned",
            "schema": {
              "title": "Participant QOS",
              "description": "Meeting Participant QOS Returned",
              "type": "object",
              "properties": {
                "user_id": {
                  "description": "Participant ID",
                  "type": "string",
                  "format": "uuid"
                },
                "user_name": {
                  "description": "Participant display name",
                  "type": "string"
                },
                "device": {
                  "description": "Participant device",
                  "type": "string"
                },
                "ip_address": {
                  "description": "Participant IP Address",
                  "type": "string"
                },
                "location": {
                  "description": "Participant location",
                  "type": "string"
                },
                "join_time": {
                  "description": "Participant join time",
                  "type": "string",
                  "format": "date-time"
                },
                "leave_time": {
                  "description": "Participant leave time",
                  "type": "string",
                  "format": "date-time"
                },
                "pc_name": {
                  "description": "Participant PC name",
                  "type": "string"
                },
                "domain": {
                  "description": "Participant domain",
                  "type": "string"
                },
                "mac_addr": {
                  "description": "Participant MAC Address",
                  "type": "string"
                },
                "harddisk_id": {
                  "description": "Participant hard disk id",
                  "type": "string"
                },
                "version": {
                  "description": "Participant version",
                  "type": "string"
                },
                "user_qos": {
                  "title": "UserQos",
                  "type": "object",
                  "properties": {
                    "date_time": {
                      "description": "Datetime of QOS",
                      "type": "string",
                      "format": "date-time"
                    },
                    "audio_input": {
                      "title": "QOS Object",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        }
                      }
                    },
                    "audio_output": {
                      "title": "QOS Object",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        }
                      }
                    },
                    "video_input": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "video_output": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "as_input": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "as_output": {
                      "title": "QOS Object86",
                      "type": "object",
                      "properties": {
                        "bitrate": {
                          "description": "Bitrate",
                          "type": "string"
                        },
                        "latency": {
                          "description": "Latency",
                          "type": "string"
                        },
                        "jitter": {
                          "description": "Jitter",
                          "type": "string"
                        },
                        "avg_loss": {
                          "description": "Average Loss",
                          "type": "string"
                        },
                        "max_loss": {
                          "description": "Max Loss",
                          "type": "string"
                        },
                        "resolution": {
                          "description": "Resolution",
                          "type": "string"
                        },
                        "frame_rate": {
                          "description": "Frame Rate",
                          "type": "string"
                        }
                      }
                    },
                    "cpu_usage": {
                      "title": "CpuUsage",
                      "type": "object",
                      "properties": {
                        "zoom_min_cpu_usage": {
                          "description": "Zoom Minimum CPU Usage",
                          "type": "string"
                        },
                        "zoom_avg_cpu_usage": {
                          "description": "Zoom Average CPU Usage",
                          "type": "string"
                        },
                        "zoom_max_cpu_usage": {
                          "description": "Zoom Maximum CPU Usage",
                          "type": "string"
                        },
                        "system_max_cpu_usage": {
                          "description": "System Maximum CPU Usage",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/qos": {
      "get": {
        "description": "Retrieve list of live or past webinar participants quality of service",
        "summary": "Webinar participants QOS dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsParticipantsQosByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "maximum": 10,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of items returned per page\n**default:** 1\n**maximum:** 10"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "title": "Participant QOS List",
              "description": "Meeting Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int64"
                },
                "page_size": {
                  "description": "The number of items per page\n**maximum:** 10",
                  "example": 1,
                  "type": "integer",
                  "maximum": 10,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int64"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of user objects",
                  "type": "array",
                  "items": {
                    "title": "Participant QOS",
                    "description": "Meeting Participant QOS Returned",
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string",
                        "format": "uuid"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "device": {
                        "description": "Participant device",
                        "type": "string"
                      },
                      "ip_address": {
                        "description": "Participant IP Address",
                        "type": "string"
                      },
                      "location": {
                        "description": "Participant location",
                        "type": "string"
                      },
                      "join_time": {
                        "description": "Participant join time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "leave_time": {
                        "description": "Participant leave time",
                        "type": "string",
                        "format": "date-time"
                      },
                      "pc_name": {
                        "description": "Participant PC name",
                        "type": "string"
                      },
                      "domain": {
                        "description": "Participant domain",
                        "type": "string"
                      },
                      "mac_addr": {
                        "description": "Participant MAC Address",
                        "type": "string"
                      },
                      "harddisk_id": {
                        "description": "Participant hard disk id",
                        "type": "string"
                      },
                      "version": {
                        "description": "Participant version",
                        "type": "string"
                      },
                      "user_qos": {
                        "title": "UserQos",
                        "type": "object",
                        "properties": {
                          "date_time": {
                            "description": "Datetime of QOS",
                            "type": "string",
                            "format": "date-time"
                          },
                          "audio_input": {
                            "title": "QOS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              }
                            }
                          },
                          "audio_output": {
                            "title": "QOS Object",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              }
                            }
                          },
                          "video_input": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "video_output": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "as_input": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "as_output": {
                            "title": "QOS Object86",
                            "type": "object",
                            "properties": {
                              "bitrate": {
                                "description": "Bitrate",
                                "type": "string"
                              },
                              "latency": {
                                "description": "Latency",
                                "type": "string"
                              },
                              "jitter": {
                                "description": "Jitter",
                                "type": "string"
                              },
                              "avg_loss": {
                                "description": "Average Loss",
                                "type": "string"
                              },
                              "max_loss": {
                                "description": "Max Loss",
                                "type": "string"
                              },
                              "resolution": {
                                "description": "Resolution",
                                "type": "string"
                              },
                              "frame_rate": {
                                "description": "Frame Rate",
                                "type": "string"
                              }
                            }
                          },
                          "cpu_usage": {
                            "title": "CpuUsage",
                            "type": "object",
                            "properties": {
                              "zoom_min_cpu_usage": {
                                "description": "Zoom Minimum CPU Usage",
                                "type": "string"
                              },
                              "zoom_avg_cpu_usage": {
                                "description": "Zoom Average CPU Usage",
                                "type": "string"
                              },
                              "zoom_max_cpu_usage": {
                                "description": "Zoom Maximum CPU Usage",
                                "type": "string"
                              },
                              "system_max_cpu_usage": {
                                "description": "System Maximum CPU Usage",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/webinars/{webinarId}/participants/sharing": {
      "get": {
        "description": "Retrieve sharing/recording details of live or past webinar participant",
        "summary": "Webinar sharing/recording dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsWebinarsParticipantsSharingByWebinarIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webinarId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webinar ID or webinar UUID. If given webinar ID, will take the last webinar instance."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "enum": [
              "past",
              "live"
            ],
            "x-enum-elements": [
              {
                "name": "past",
                "description": ""
              },
              {
                "name": "live",
                "description": ""
              }
            ],
            "type": "string",
            "description": "The webinar type\n**default:** live"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "Webinar Participants Returned",
            "schema": {
              "title": "dashboardWebinarParticipantShareResponse",
              "description": "Webinar Participants Returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "participants": {
                  "description": "Array of participants",
                  "type": "array",
                  "items": {
                    "title": "Participant210",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Participant UUID",
                        "type": "string"
                      },
                      "user_id": {
                        "description": "Participant ID",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "Participant display name",
                        "type": "string"
                      },
                      "details": {
                        "description": "Array of sharing and recording details",
                        "type": "array",
                        "items": {
                          "title": "Detail",
                          "type": "object",
                          "properties": {
                            "content": {
                              "description": "Type of content shared",
                              "type": "string"
                            },
                            "start_time": {
                              "description": "Start time of sharing",
                              "type": "string"
                            },
                            "end_time": {
                              "description": "End time of sharing",
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/zoomrooms": {
      "get": {
        "description": "List all zoom rooms on account",
        "summary": "Zoom Rooms dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsZoomroomsGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Zoom Rooms returned",
            "schema": {
              "title": "Zoom Room List",
              "description": "List of Zoom Rooms returned",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "zoom_rooms": {
                  "description": "Array of Zoom Rooms",
                  "type": "array",
                  "items": {
                    "title": "Zoom Room",
                    "description": "Zoom Room",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "Zoom Room ID",
                        "type": "string"
                      },
                      "room_name": {
                        "description": "Zoom Room name",
                        "type": "string"
                      },
                      "calender_name": {
                        "description": "Zoom Calendar name",
                        "type": "string"
                      },
                      "email": {
                        "description": "Zoom Room email",
                        "type": "string"
                      },
                      "account_type": {
                        "description": "Zoom Room email type",
                        "type": "string"
                      },
                      "status": {
                        "description": "Zoom Room status",
                        "type": "string"
                      },
                      "device_ip": {
                        "description": "Zoom Room device IP",
                        "type": "string"
                      },
                      "camera": {
                        "description": "Zoom Room camera",
                        "type": "string"
                      },
                      "microphone": {
                        "description": "Zoom Room microphone",
                        "type": "string"
                      },
                      "speaker": {
                        "description": "Zoom Room speaker",
                        "type": "string"
                      },
                      "last_start_time": {
                        "description": "Zoom Room last start time",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/metrics/zoomrooms?page_size=30&page_number=1"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Zoom Rooms dashboard",
            "x-testDescription": "List all zoom rooms on account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/zoomrooms/{zoomroomId}": {
      "get": {
        "description": "Retrieve zoom room on account",
        "summary": "Zoom Room dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsZoomroomsByZoomroomIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "zoomroomId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The Zoom Room ID"
          },
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "page_number",
            "in": "query",
            "required": false,
            "default": 1,
            "type": "integer",
            "format": "int32",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Current page number of returned records\n**default:** 1"
          }
        ],
        "responses": {
          "200": {
            "description": "Zoom Room returned",
            "schema": {
              "title": "dashboardZoomRoomResponse",
              "description": "Zoom Room returned",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Zoom Room ID",
                  "type": "string"
                },
                "room_name": {
                  "description": "Zoom Room name",
                  "type": "string"
                },
                "calender_name": {
                  "description": "Zoom Calendar name",
                  "type": "string"
                },
                "email": {
                  "description": "Zoom Room email",
                  "type": "string"
                },
                "account_type": {
                  "description": "Zoom Room email type",
                  "type": "string"
                },
                "status": {
                  "description": "Zoom Room status",
                  "type": "string"
                },
                "device_ip": {
                  "description": "Zoom Room device IP",
                  "type": "string"
                },
                "camera": {
                  "description": "Zoom Room camera",
                  "type": "string"
                },
                "microphone": {
                  "description": "Zoom Room microphone",
                  "type": "string"
                },
                "speaker": {
                  "description": "Zoom Room speaker",
                  "type": "string"
                },
                "last_start_time": {
                  "description": "Zoom Room last start time",
                  "type": "string"
                },
                "live_meeting": {
                  "title": "Meeting Metrics",
                  "description": "Meeting metric details",
                  "type": "object",
                  "properties": {
                    "uuid": {
                      "description": "Meeting UUID",
                      "type": "string",
                      "format": "uuid"
                    },
                    "id": {
                      "description": "Meeting ID",
                      "type": "integer",
                      "format": "int32"
                    },
                    "topic": {
                      "description": "Meeting topic",
                      "type": "string"
                    },
                    "host": {
                      "description": "User display name",
                      "type": "string"
                    },
                    "email": {
                      "description": "User email",
                      "type": "string"
                    },
                    "user_type": {
                      "description": "User type",
                      "type": "string"
                    },
                    "start_time": {
                      "description": "Meeting start time",
                      "type": "string",
                      "format": "date-time"
                    },
                    "end_time": {
                      "description": "Meeting end time",
                      "type": "string",
                      "format": "date-time"
                    },
                    "duration": {
                      "description": "Meeting duration",
                      "type": "string"
                    },
                    "participants": {
                      "description": "Meeting participant count",
                      "type": "integer",
                      "format": "int32"
                    },
                    "has_pstn": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_voip": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_3rd_party_audio": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_video": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_screen_share": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_recording": {
                      "description": "",
                      "type": "boolean"
                    },
                    "has_sip": {
                      "description": "",
                      "type": "boolean"
                    }
                  }
                },
                "past_meetings": {
                  "title": "PastMeetings",
                  "type": "object",
                  "properties": {
                    "from": {
                      "description": "Start date for this report",
                      "type": "string",
                      "format": "date"
                    },
                    "to": {
                      "description": "End date for this report",
                      "type": "string",
                      "format": "date"
                    },
                    "page_count": {
                      "description": "The number of items returned on this page",
                      "type": "integer",
                      "format": "int32"
                    },
                    "page_size": {
                      "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                      "example": 30,
                      "type": "integer",
                      "maximum": 300,
                      "format": "int32"
                    },
                    "total_records": {
                      "description": "The number of all records available across pages",
                      "type": "integer",
                      "format": "int32"
                    },
                    "next_page_token": {
                      "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                      "type": "string"
                    },
                    "meetings": {
                      "description": "Array of meeting objects",
                      "type": "array",
                      "items": {
                        "title": "Meeting Metrics",
                        "description": "Meeting metric details",
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "description": "Meeting UUID",
                            "type": "string",
                            "format": "uuid"
                          },
                          "id": {
                            "description": "Meeting ID",
                            "type": "integer",
                            "format": "int32"
                          },
                          "topic": {
                            "description": "Meeting topic",
                            "type": "string"
                          },
                          "host": {
                            "description": "User display name",
                            "type": "string"
                          },
                          "email": {
                            "description": "User email",
                            "type": "string"
                          },
                          "user_type": {
                            "description": "User type",
                            "type": "string"
                          },
                          "start_time": {
                            "description": "Meeting start time",
                            "type": "string",
                            "format": "date-time"
                          },
                          "end_time": {
                            "description": "Meeting end time",
                            "type": "string",
                            "format": "date-time"
                          },
                          "duration": {
                            "description": "Meeting duration",
                            "type": "string"
                          },
                          "participants": {
                            "description": "Meeting participant count",
                            "type": "integer",
                            "format": "int32"
                          },
                          "has_pstn": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_voip": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_3rd_party_audio": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_video": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_screen_share": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_recording": {
                            "description": "",
                            "type": "boolean"
                          },
                          "has_sip": {
                            "description": "",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/crc": {
      "get": {
        "description": "Get CRC Port usage hour by hour for a specified time period <aside class='notice'>We will report a maximum of one month. For example, if \"from\" is set to \"2017-08-05\" and \"to\" is \"2017-10-10\" we will adjust \"from\" to \"2017-09-10\"</aside>.",
        "summary": "CRC usage dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsCrcGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          }
        ],
        "responses": {
          "200": {
            "description": "CRC Usage returned",
            "schema": {
              "title": "dashboardCRCResponse",
              "description": "CRC Usage returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "crc_ports_usage": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "title": "CrcPortsUsage",
                    "type": "object",
                    "properties": {
                      "date_time": {
                        "description": "Date and time",
                        "type": "string"
                      },
                      "crc_ports_hour_usage": {
                        "description": "",
                        "type": "array",
                        "items": {
                          "title": "CrcPortsHourUsage",
                          "type": "object",
                          "properties": {
                            "hour": {
                              "description": "",
                              "type": "string"
                            },
                            "max_usage": {
                              "description": "",
                              "type": "integer",
                              "format": "int32"
                            },
                            "total_usage": {
                              "description": "",
                              "type": "integer",
                              "format": "int32"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/metrics/im": {
      "get": {
        "description": "Retrieve metrics of Zoom IM",
        "summary": "IM dashboard",
        "tags": [
          "Dashboards"
        ],
        "operationId": "MetricsImGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "Start Date"
          },
          {
            "name": "to",
            "in": "query",
            "required": true,
            "type": "string",
            "format": "date",
            "description": "End Date"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "default": 30,
            "type": "integer",
            "format": "int32",
            "maximum": 300,
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300"
          },
          {
            "name": "next_page_token",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes."
          }
        ],
        "responses": {
          "200": {
            "description": "IM setails returned",
            "schema": {
              "title": "dashboardIMResponse",
              "description": "IM setails returned",
              "type": "object",
              "properties": {
                "from": {
                  "description": "Start date for this report",
                  "type": "string",
                  "format": "date"
                },
                "to": {
                  "description": "End date for this report",
                  "type": "string",
                  "format": "date"
                },
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "next_page_token": {
                  "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
                  "type": "string"
                },
                "users": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "title": "User230",
                    "type": "object",
                    "properties": {
                      "user_id": {
                        "description": "User ID",
                        "type": "string"
                      },
                      "user_name": {
                        "description": "User display name",
                        "type": "string"
                      },
                      "email": {
                        "description": "User email",
                        "type": "string"
                      },
                      "total_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "total_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "group_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "group_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "calls_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "calls_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "files_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "files_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "images_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "images_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "voice_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "voice_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "videos_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "videos_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "emoji_send": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      },
                      "emoji_receive": {
                        "description": "",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webhooks/options": {
      "patch": {
        "description": "Switch webhook version",
        "summary": "Update webhook version",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksOptionsPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "body293",
              "description": "`v1` Version 1\n`v2` Version 2",
              "type": "object",
              "properties": {
                "version": {
                  "title": "version",
                  "example": "v1",
                  "x-enum-elements": [
                    {
                      "name": "v1",
                      "description": ""
                    },
                    {
                      "name": "v2",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "v1",
                    "v2"
                  ]
                }
              },
              "required": [
                "version"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook Subscribe version update"
          },
          "404": {
            "description": "Webhook Subscribe not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webhooks": {
      "get": {
        "description": "List webhooks for a account",
        "summary": "Get webhooks",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of Webhook objects returned",
            "schema": {
              "title": "Webhook List",
              "description": "List of Webhook objects returned",
              "type": "object",
              "properties": {
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "webhooks": {
                  "description": "List of Webhook objects",
                  "type": "array",
                  "items": {
                    "title": "Webhook154",
                    "type": "object",
                    "properties": {
                      "url": {
                        "description": "Webhook endpoint\n**max length:** 256",
                        "type": "string",
                        "maxLength": 256
                      },
                      "auth_user": {
                        "description": "Webhook auth user name\n**max length:** 128",
                        "type": "string",
                        "maxLength": 128
                      },
                      "auth_password": {
                        "description": "Webhook auth password\n**max length:** 64",
                        "type": "string",
                        "maxLength": 64
                      },
                      "events": {
                        "title": "events",
                        "example": "meeting_started",
                        "x-enum-elements": [
                          {
                            "name": "meeting_started",
                            "description": ""
                          },
                          {
                            "name": "meeting_ended",
                            "description": ""
                          },
                          {
                            "name": "meeting_jbh",
                            "description": ""
                          },
                          {
                            "name": "meeting_join",
                            "description": ""
                          },
                          {
                            "name": "recording_completed",
                            "description": ""
                          },
                          {
                            "name": "participant_joined",
                            "description": ""
                          },
                          {
                            "name": "participant_left",
                            "description": ""
                          },
                          {
                            "name": "meeting_registered",
                            "description": ""
                          },
                          {
                            "name": "recording_transcript_completed",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "meeting_started",
                          "meeting_ended",
                          "meeting_jbh",
                          "meeting_join",
                          "recording_completed",
                          "participant_joined",
                          "participant_left",
                          "meeting_registered",
                          "recording_transcript_completed"
                        ]
                      },
                      "webhook_id": {
                        "description": "Webhook Id",
                        "type": "string"
                      },
                      "created_at": {
                        "description": "Webhook create time",
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "url",
                      "auth_user",
                      "auth_password",
                      "events"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "Webhook not found",
            "schema": {}
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/webhooks"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get webhooks",
            "x-testDescription": "List webhooks for a account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a webhook for a account",
        "summary": "Create webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Webhook",
            "schema": {
              "title": "Webhook",
              "description": "Webhook",
              "type": "object",
              "properties": {
                "url": {
                  "description": "Webhook endpoint\n**max length:** 256",
                  "type": "string",
                  "maxLength": 256
                },
                "auth_user": {
                  "description": "Webhook auth user name\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "auth_password": {
                  "description": "Webhook auth password\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "events": {
                  "title": "events",
                  "example": "meeting_started",
                  "x-enum-elements": [
                    {
                      "name": "meeting_started",
                      "description": ""
                    },
                    {
                      "name": "meeting_ended",
                      "description": ""
                    },
                    {
                      "name": "meeting_jbh",
                      "description": ""
                    },
                    {
                      "name": "meeting_join",
                      "description": ""
                    },
                    {
                      "name": "recording_completed",
                      "description": ""
                    },
                    {
                      "name": "participant_joined",
                      "description": ""
                    },
                    {
                      "name": "participant_left",
                      "description": ""
                    },
                    {
                      "name": "meeting_registered",
                      "description": ""
                    },
                    {
                      "name": "recording_transcript_completed",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "meeting_started",
                    "meeting_ended",
                    "meeting_jbh",
                    "meeting_join",
                    "recording_completed",
                    "participant_joined",
                    "participant_left",
                    "meeting_registered",
                    "recording_transcript_completed"
                  ]
                }
              },
              "required": [
                "url",
                "auth_user",
                "auth_password",
                "events"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Webhook Created",
            "schema": {
              "title": "webhookCreateResponse",
              "description": "Webhook Created",
              "type": "object",
              "properties": {
                "url": {
                  "description": "Webhook endpoint\n**max length:** 456",
                  "type": "string",
                  "maxLength": 256
                },
                "auth_user": {
                  "description": "Webhook auth user name\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "auth_password": {
                  "description": "Webhook auth password\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "events": {
                  "title": "events",
                  "example": "meeting_started",
                  "x-enum-elements": [
                    {
                      "name": "meeting_started",
                      "description": ""
                    },
                    {
                      "name": "meeting_ended",
                      "description": ""
                    },
                    {
                      "name": "meeting_jbh",
                      "description": ""
                    },
                    {
                      "name": "meeting_join",
                      "description": ""
                    },
                    {
                      "name": "recording_completed",
                      "description": ""
                    },
                    {
                      "name": "participant_joined",
                      "description": ""
                    },
                    {
                      "name": "participant_left",
                      "description": ""
                    },
                    {
                      "name": "meeting_registered",
                      "description": ""
                    },
                    {
                      "name": "recording_transcript_completed",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "meeting_started",
                    "meeting_ended",
                    "meeting_jbh",
                    "meeting_join",
                    "recording_completed",
                    "participant_joined",
                    "participant_left",
                    "meeting_registered",
                    "recording_transcript_completed"
                  ]
                },
                "webhook_id": {
                  "description": "Webhook Id",
                  "type": "string"
                },
                "created_at": {
                  "description": "Webhook create time",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "url",
                "auth_user",
                "auth_password",
                "events"
              ]
            }
          },
          "404": {
            "description": "Account not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/webhooks/{webhookId}": {
      "get": {
        "description": "Retrieve a webhook",
        "summary": "Get single webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksByWebhookIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webhook ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook object returned",
            "schema": {
              "title": "webhookResponse",
              "description": "Webhook object returned",
              "type": "object",
              "properties": {
                "url": {
                  "description": "Webhook endpoint\n**max length:** 256",
                  "type": "string",
                  "maxLength": 256
                },
                "auth_user": {
                  "description": "Webhook auth user name\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "auth_password": {
                  "description": "Webhook auth password\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "events": {
                  "title": "events",
                  "example": "meeting_started",
                  "x-enum-elements": [
                    {
                      "name": "meeting_started",
                      "description": ""
                    },
                    {
                      "name": "meeting_ended",
                      "description": ""
                    },
                    {
                      "name": "meeting_jbh",
                      "description": ""
                    },
                    {
                      "name": "meeting_join",
                      "description": ""
                    },
                    {
                      "name": "recording_completed",
                      "description": ""
                    },
                    {
                      "name": "participant_joined",
                      "description": ""
                    },
                    {
                      "name": "participant_left",
                      "description": ""
                    },
                    {
                      "name": "meeting_registered",
                      "description": ""
                    },
                    {
                      "name": "recording_transcript_completed",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "meeting_started",
                    "meeting_ended",
                    "meeting_jbh",
                    "meeting_join",
                    "recording_completed",
                    "participant_joined",
                    "participant_left",
                    "meeting_registered",
                    "recording_transcript_completed"
                  ]
                },
                "webhook_id": {
                  "description": "Webhook Id",
                  "type": "string"
                },
                "created_at": {
                  "description": "Webhook create time",
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "url",
                "auth_user",
                "auth_password",
                "events"
              ]
            }
          },
          "404": {
            "description": "Webinar not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a webhook",
        "summary": "Delete single webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksByWebhookIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webhook ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook deleted"
          },
          "404": {
            "description": "Webhook not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a webhook",
        "summary": "Update webhook",
        "tags": [
          "Webhooks"
        ],
        "operationId": "WebhooksByWebhookIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "webhookId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The webhook ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "Webhook",
            "schema": {
              "title": "WebhookUpdate",
              "description": "Webhook",
              "type": "object",
              "properties": {
                "url": {
                  "description": "Webhook endpoint\n**max length:** 256",
                  "type": "string",
                  "maxLength": 256
                },
                "auth_user": {
                  "description": "Webhook auth user name\n**max length:** 128",
                  "type": "string",
                  "maxLength": 128
                },
                "auth_password": {
                  "description": "Webhook auth password\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "events": {
                  "title": "events",
                  "example": "meeting_started",
                  "x-enum-elements": [
                    {
                      "name": "meeting_started",
                      "description": ""
                    },
                    {
                      "name": "meeting_ended",
                      "description": ""
                    },
                    {
                      "name": "meeting_jbh",
                      "description": ""
                    },
                    {
                      "name": "meeting_join",
                      "description": ""
                    },
                    {
                      "name": "recording_completed",
                      "description": ""
                    },
                    {
                      "name": "participant_joined",
                      "description": ""
                    },
                    {
                      "name": "participant_left",
                      "description": ""
                    },
                    {
                      "name": "meeting_registered",
                      "description": ""
                    },
                    {
                      "name": "recording_transcript_completed",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "meeting_started",
                    "meeting_ended",
                    "meeting_jbh",
                    "meeting_join",
                    "recording_completed",
                    "participant_joined",
                    "participant_left",
                    "meeting_registered",
                    "recording_transcript_completed"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook Updated"
          },
          "404": {
            "description": "Webhook not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/tsp": {
      "get": {
        "description": "List TSP dial-in numbers under account",
        "summary": "Get TSP numbers",
        "tags": [
          "TSP"
        ],
        "operationId": "TspGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "TSP dial-in numbers returned",
            "schema": {
              "title": "tspResponse",
              "description": "TSP dial-in numbers returned",
              "type": "object",
              "properties": {
                "tsp_provider": {
                  "description": "",
                  "type": "string"
                },
                "dial_in_numbers": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "title": "DialInNumber256",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Country Code",
                        "type": "string"
                      },
                      "number": {
                        "description": "Dial-in number, length is less than 16",
                        "type": "string"
                      },
                      "type": {
                        "description": "",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/tsp"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get TSP numbers",
            "x-testDescription": "List TSP dial-in numbers under account"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/tsp": {
      "get": {
        "description": "List user's TSP accounts",
        "summary": "Get user's TSP numbers",
        "tags": [
          "TSP"
        ],
        "operationId": "UsersTspByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "200": {
            "description": "TSP Account list returned",
            "schema": {
              "title": "userTSPsResponse",
              "description": "TSP Account list returned",
              "type": "object",
              "properties": {
                "tsp_accounts": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "title": "TSP Accounts List",
                    "description": "List of TSP Accounts",
                    "type": "object",
                    "properties": {
                      "conference_code": {
                        "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "leader_pin": {
                        "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "dial_in_numbers": {
                        "description": "List of Dial In Numbers",
                        "type": "array",
                        "items": {
                          "title": "DialInNumber",
                          "type": "object",
                          "properties": {
                            "code": {
                              "description": "Country Code\n**max length:** 6",
                              "type": "string",
                              "maxLength": 6
                            },
                            "number": {
                              "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                              "type": "string",
                              "minLength": 1,
                              "maxLength": 16
                            },
                            "type": {
                              "title": "type394",
                              "example": "toll",
                              "x-enum-elements": [
                                {
                                  "name": "toll",
                                  "description": ""
                                },
                                {
                                  "name": "tollfree",
                                  "description": ""
                                },
                                {
                                  "name": "media_link",
                                  "description": ""
                                }
                              ],
                              "type": "string",
                              "enum": [
                                "toll",
                                "tollfree",
                                "media_link"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "required": [
                      "conference_code",
                      "leader_pin"
                    ]
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Add a user's TSP account",
        "summary": "Add user TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "UsersTspByUserIdPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "TSP Account",
            "schema": {
              "title": "TSP Accounts List",
              "description": "List of TSP Accounts",
              "type": "object",
              "properties": {
                "conference_code": {
                  "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "description": "List of Dial In Numbers",
                  "type": "array",
                  "items": {
                    "title": "DialInNumber",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Country Code\n**max length:** 6",
                        "type": "string",
                        "maxLength": 6
                      },
                      "number": {
                        "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "title": "type394",
                        "example": "toll",
                        "x-enum-elements": [
                          {
                            "name": "toll",
                            "description": ""
                          },
                          {
                            "name": "tollfree",
                            "description": ""
                          },
                          {
                            "name": "media_link",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "TSP Account added",
            "schema": {
              "title": "TSP Accounts List",
              "description": "List of TSP Accounts",
              "type": "object",
              "properties": {
                "conference_code": {
                  "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "description": "List of Dial In Numbers",
                  "type": "array",
                  "items": {
                    "title": "DialInNumber",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Country Code\n**max length:** 6",
                        "type": "string",
                        "maxLength": 6
                      },
                      "number": {
                        "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "title": "type394",
                        "example": "toll",
                        "x-enum-elements": [
                          {
                            "name": "toll",
                            "description": ""
                          },
                          {
                            "name": "tollfree",
                            "description": ""
                          },
                          {
                            "name": "media_link",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/tsp/{tspId}": {
      "get": {
        "description": "Retrieve a user's TSP account",
        "summary": "Get user TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "UsersTspByUserIdAndTspIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "tspId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "TSP account index"
          }
        ],
        "responses": {
          "200": {
            "description": "TSP Account returned",
            "schema": {
              "title": "TSP Accounts List",
              "description": "List of TSP Accounts",
              "type": "object",
              "properties": {
                "conference_code": {
                  "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "description": "List of Dial In Numbers",
                  "type": "array",
                  "items": {
                    "title": "DialInNumber",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Country Code\n**max length:** 6",
                        "type": "string",
                        "maxLength": 6
                      },
                      "number": {
                        "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "title": "type394",
                        "example": "toll",
                        "x-enum-elements": [
                          {
                            "name": "toll",
                            "description": ""
                          },
                          {
                            "name": "tollfree",
                            "description": ""
                          },
                          {
                            "name": "media_link",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Delete a user's TSP account",
        "summary": "Delete TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "UsersTspByUserIdAndTspIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "tspId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "TSP account index"
          }
        ],
        "responses": {
          "204": {
            "description": "TSP Account deleted"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a user's TSP account",
        "summary": "Update TSP account",
        "tags": [
          "TSP"
        ],
        "operationId": "UsersTspByUserIdAndTspIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          },
          {
            "name": "tspId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "TSP account index"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "TSP Account",
            "schema": {
              "title": "TSP Accounts List",
              "description": "List of TSP Accounts",
              "type": "object",
              "properties": {
                "conference_code": {
                  "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "leader_pin": {
                  "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                  "type": "string",
                  "minLength": 1,
                  "maxLength": 16
                },
                "dial_in_numbers": {
                  "description": "List of Dial In Numbers",
                  "type": "array",
                  "items": {
                    "title": "DialInNumber",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "Country Code\n**max length:** 6",
                        "type": "string",
                        "maxLength": 6
                      },
                      "number": {
                        "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 16
                      },
                      "type": {
                        "title": "type394",
                        "example": "toll",
                        "x-enum-elements": [
                          {
                            "name": "toll",
                            "description": ""
                          },
                          {
                            "name": "tollfree",
                            "description": ""
                          },
                          {
                            "name": "media_link",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "toll",
                          "tollfree",
                          "media_link"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "conference_code",
                "leader_pin"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "TSP Account updated"
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/pac": {
      "get": {
        "description": "List user's PAC accounts",
        "summary": "Get PAC accounts",
        "tags": [
          "PAC"
        ],
        "operationId": "UsersPacByUserIdGet",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The user ID or email address"
          }
        ],
        "responses": {
          "200": {
            "description": "PAC Account list returned",
            "schema": {
              "title": "userPACsResponse",
              "description": "PAC Account list returned",
              "type": "object",
              "properties": {
                "tsp_accounts": {
                  "description": "",
                  "type": "array",
                  "items": {
                    "title": "PAC Accounts List",
                    "description": "List of PAC Accounts",
                    "type": "object",
                    "properties": {
                      "dedicated_dial_in_number": {
                        "description": "List of Dedicated Dial In Numbers",
                        "type": "array",
                        "items": {
                          "title": "DedicatedDialInNumber",
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Dial-in number, length is less than 16",
                              "type": "string"
                            },
                            "country": {
                              "description": "Country Code",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "global_dial_in_numbers": {
                        "description": "List of Global Dial In Numbers",
                        "type": "array",
                        "items": {
                          "title": "GlobalDialInNumber",
                          "type": "object",
                          "properties": {
                            "number": {
                              "description": "Dial-in number, length is less than 16",
                              "type": "string"
                            },
                            "country": {
                              "description": "Country Code",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "conference_id": {
                        "description": "Conference ID",
                        "type": "integer",
                        "format": "int32"
                      },
                      "participant_password": {
                        "description": "Participant Password, numeric value, length is less than 6",
                        "type": "string"
                      },
                      "listen_only_password": {
                        "description": "Listen-Only Password, numeric value, length is less than 6",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/h323/devices": {
      "get": {
        "description": "List H.323/SIP Devices on your Zoom account.",
        "summary": "Get devices",
        "tags": [
          "Devices"
        ],
        "operationId": "H323DevicesGet",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "List of H.323/SIP Devices returned.",
            "schema": {
              "title": "H.323/SIP Device List",
              "description": "List of H.323/SIP Devices returned.",
              "type": "object",
              "properties": {
                "page_count": {
                  "description": "The number of items returned on this page",
                  "type": "integer",
                  "format": "int32"
                },
                "page_number": {
                  "description": "The page number of current results",
                  "example": 1,
                  "type": "integer",
                  "format": "int32"
                },
                "page_size": {
                  "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
                  "example": 30,
                  "type": "integer",
                  "maximum": 300,
                  "format": "int32"
                },
                "total_records": {
                  "description": "The number of all records available across pages",
                  "type": "integer",
                  "format": "int32"
                },
                "devices": {
                  "description": "List of H.323/SIP Device objects",
                  "type": "array",
                  "items": {
                    "title": "Device",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Device name\n**max length:** 64",
                        "type": "string",
                        "maxLength": 64
                      },
                      "protocol": {
                        "title": "Protocol",
                        "example": "H.323",
                        "x-enum-elements": [
                          {
                            "name": "Enum_H323",
                            "description": ""
                          },
                          {
                            "name": "SIP",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "H.323",
                          "SIP"
                        ]
                      },
                      "ip": {
                        "description": "Device Ip",
                        "type": "string"
                      },
                      "encryption": {
                        "title": "encryption",
                        "example": "auto",
                        "x-enum-elements": [
                          {
                            "name": "auto",
                            "description": ""
                          },
                          {
                            "name": "yes",
                            "description": ""
                          },
                          {
                            "name": "no",
                            "description": ""
                          }
                        ],
                        "type": "string",
                        "enum": [
                          "auto",
                          "yes",
                          "no"
                        ]
                      },
                      "id": {
                        "description": "Device ID",
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "protocol",
                      "ip",
                      "encryption"
                    ]
                  }
                }
              }
            }
          }
        },
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/h323/devices"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Test Get devices",
            "x-testDescription": "List H.323/SIP Devices on your Zoom account."
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Create a H.323/SIP Device on your Zoom account",
        "summary": "Create device",
        "tags": [
          "Devices"
        ],
        "operationId": "H323DevicesPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "H.323/SIP Device",
            "schema": {
              "title": "The H.323/SIP device object.",
              "description": "H.323/SIP Device",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Device name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "protocol": {
                  "title": "Protocol",
                  "example": "H.323",
                  "x-enum-elements": [
                    {
                      "name": "Enum_H323",
                      "description": ""
                    },
                    {
                      "name": "SIP",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "H.323",
                    "SIP"
                  ]
                },
                "ip": {
                  "description": "Device Ip",
                  "type": "string"
                },
                "encryption": {
                  "title": "encryption",
                  "example": "auto",
                  "x-enum-elements": [
                    {
                      "name": "auto",
                      "description": ""
                    },
                    {
                      "name": "yes",
                      "description": ""
                    },
                    {
                      "name": "no",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "auto",
                    "yes",
                    "no"
                  ]
                }
              },
              "required": [
                "name",
                "protocol",
                "ip",
                "encryption"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "H.323/SIP Device created",
            "schema": {
              "title": "deviceCreateResponse",
              "description": "H.323/SIP Device created",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Device name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "protocol": {
                  "title": "Protocol",
                  "example": "H.323",
                  "x-enum-elements": [
                    {
                      "name": "Enum_H323",
                      "description": ""
                    },
                    {
                      "name": "SIP",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "H.323",
                    "SIP"
                  ]
                },
                "ip": {
                  "description": "Device Ip",
                  "type": "string"
                },
                "encryption": {
                  "title": "encryption",
                  "example": "auto",
                  "x-enum-elements": [
                    {
                      "name": "auto",
                      "description": ""
                    },
                    {
                      "name": "yes",
                      "description": ""
                    },
                    {
                      "name": "no",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "auto",
                    "yes",
                    "no"
                  ]
                },
                "id": {
                  "description": "Device ID",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "protocol",
                "ip",
                "encryption"
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/h323/devices/{deviceId}": {
      "delete": {
        "description": "Delete a H.323/SIP Device on your Zoom account",
        "summary": "Delete device",
        "tags": [
          "Devices"
        ],
        "operationId": "H323DevicesByDeviceIdDelete",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The device ID"
          }
        ],
        "responses": {
          "204": {
            "description": "H.323/SIP Device deleted"
          },
          "404": {
            "description": "H.323/SIP Device not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Update a H.323/SIP Device on your Zoom account",
        "summary": "Update device",
        "tags": [
          "Devices"
        ],
        "operationId": "H323DevicesByDeviceIdPatch",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The device ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "The H.323/SIP device object.",
              "description": "H.323/SIP Device",
              "type": "object",
              "properties": {
                "name": {
                  "description": "Device name\n**max length:** 64",
                  "type": "string",
                  "maxLength": 64
                },
                "protocol": {
                  "title": "Protocol",
                  "example": "H.323",
                  "x-enum-elements": [
                    {
                      "name": "Enum_H323",
                      "description": ""
                    },
                    {
                      "name": "SIP",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "H.323",
                    "SIP"
                  ]
                },
                "ip": {
                  "description": "Device Ip",
                  "type": "string"
                },
                "encryption": {
                  "title": "encryption",
                  "example": "auto",
                  "x-enum-elements": [
                    {
                      "name": "auto",
                      "description": ""
                    },
                    {
                      "name": "yes",
                      "description": ""
                    },
                    {
                      "name": "no",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "auto",
                    "yes",
                    "no"
                  ]
                }
              },
              "required": [
                "name",
                "protocol",
                "ip",
                "encryption"
              ]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "H.323/SIP Device updated"
          },
          "404": {
            "description": "H.323/SIP Device not found",
            "schema": {}
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "AccountList": {
      "title": "Account List",
      "description": "Account list returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "accounts": {
          "description": "List of Account objects",
          "type": "array",
          "items": {
            "title": "Account4",
            "type": "object",
            "properties": {
              "id": {
                "description": "Account ID",
                "type": "string",
                "format": "uuid"
              },
              "account_name": {
                "description": "Account name",
                "type": "string"
              },
              "owner_email": {
                "description": "Account owner email",
                "type": "string"
              },
              "account_type": {
                "description": "Account type",
                "type": "string"
              },
              "seats": {
                "description": "Account seats",
                "type": "integer",
                "format": "int32"
              },
              "subscription_start_time": {
                "description": "Account subscription start date/time",
                "type": "string",
                "format": "date-time"
              },
              "subscription_end_time": {
                "description": "Account subscription end date/time",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "description": "Account creation date/time",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "Account4": {
      "title": "Account4",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account ID",
          "type": "string",
          "format": "uuid"
        },
        "account_name": {
          "description": "Account name",
          "type": "string"
        },
        "owner_email": {
          "description": "Account owner email",
          "type": "string"
        },
        "account_type": {
          "description": "Account type",
          "type": "string"
        },
        "seats": {
          "description": "Account seats",
          "type": "integer",
          "format": "int32"
        },
        "subscription_start_time": {
          "description": "Account subscription start date/time",
          "type": "string",
          "format": "date-time"
        },
        "subscription_end_time": {
          "description": "Account subscription end date/time",
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "description": "Account creation date/time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Account": {
      "title": "Account",
      "description": "Account",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "User's first name",
          "type": "string"
        },
        "last_name": {
          "description": "User's last name",
          "type": "string"
        },
        "email": {
          "description": "User's email address",
          "type": "string"
        },
        "password": {
          "description": "User's password",
          "type": "string"
        },
        "options": {
          "title": "options",
          "type": "object",
          "properties": {
            "share_rc": {
              "description": "Enable Share Virtual Room Connector",
              "example": false,
              "type": "boolean"
            },
            "room_connectors": {
              "description": "Virtual Room Connector, multiple value separated by comma",
              "type": "string"
            },
            "share_mc": {
              "description": "Enable Share Meeting Connector",
              "example": false,
              "type": "boolean"
            },
            "meeting_connectors": {
              "description": "Meeting Connector, multiple values separated by comma",
              "type": "string"
            },
            "pay_mode": {
              "title": "pay_mode",
              "example": "master",
              "x-enum-elements": [
                {
                  "name": "master",
                  "description": ""
                },
                {
                  "name": "sub",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "master",
                "sub"
              ]
            }
          }
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "password"
      ]
    },
    "Options": {
      "title": "options",
      "type": "object",
      "properties": {
        "share_rc": {
          "description": "Enable Share Virtual Room Connector",
          "example": false,
          "type": "boolean"
        },
        "room_connectors": {
          "description": "Virtual Room Connector, multiple value separated by comma",
          "type": "string"
        },
        "share_mc": {
          "description": "Enable Share Meeting Connector",
          "example": false,
          "type": "boolean"
        },
        "meeting_connectors": {
          "description": "Meeting Connector, multiple values separated by comma",
          "type": "string"
        },
        "pay_mode": {
          "title": "pay_mode",
          "example": "master",
          "x-enum-elements": [
            {
              "name": "master",
              "description": ""
            },
            {
              "name": "sub",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "master",
            "sub"
          ]
        }
      }
    },
    "PayMode": {
      "title": "pay_mode",
      "example": "master",
      "x-enum-elements": [
        {
          "name": "master",
          "description": ""
        },
        {
          "name": "sub",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "master",
        "sub"
      ]
    },
    "AccountCreateResponse": {
      "title": "accountCreateResponse",
      "description": "Account Created",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account ID",
          "type": "string"
        },
        "owner_id": {
          "description": "Account Owner ID",
          "type": "string"
        },
        "owner_email": {
          "description": "Account owner email",
          "type": "string"
        },
        "created_at": {
          "description": "Account created date time",
          "type": "string"
        }
      }
    },
    "AccountResponse": {
      "title": "accountResponse",
      "description": "Account object returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Account ID",
          "type": "string"
        },
        "owner_id": {
          "description": "Account Owner ID",
          "type": "string"
        },
        "owner_email": {
          "description": "Account Owner email",
          "type": "string"
        },
        "created_at": {
          "description": "Account creation date/time",
          "type": "string",
          "format": "date-time"
        },
        "options": {
          "title": "options",
          "type": "object",
          "properties": {
            "share_rc": {
              "description": "Enable Share Virtual Room Connector",
              "example": false,
              "type": "boolean"
            },
            "room_connectors": {
              "description": "Virtual Room Connector, multiple value separated by comma",
              "type": "string"
            },
            "share_mc": {
              "description": "Enable Share Meeting Connector",
              "example": false,
              "type": "boolean"
            },
            "meeting_connectors": {
              "description": "Meeting Connector, multiple values separated by comma",
              "type": "string"
            },
            "pay_mode": {
              "title": "pay_mode",
              "example": "master",
              "x-enum-elements": [
                {
                  "name": "master",
                  "description": ""
                },
                {
                  "name": "sub",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "master",
                "sub"
              ]
            }
          }
        }
      }
    },
    "AccountSettings": {
      "title": "Account settings",
      "description": "Account settings returned",
      "type": "object",
      "properties": {
        "schedule_meting": {
          "title": "schedule_meeting",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start meetings with host video on",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start meetings with participant video on. Participants can change this during the meeting\n`both` Telephony and VoIP\n`telephony` Audio PSTN telephony only\n`voip` VoIP only\n`thirdParty` 3rd party audio conference.",
              "type": "boolean"
            },
            "audio_type": {
              "title": "audio_type",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                },
                {
                  "name": "thirdParty",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ]
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host arrives",
              "type": "boolean"
            },
            "enforce_login": {
              "description": "Only signed-in (Zoom users) users can join meetings",
              "type": "boolean"
            },
            "enforce_login_with_domains": {
              "description": "Only signed-in users with a specific domain can join meetings",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with a specified domains",
              "type": "string"
            },
            "not_store_meeting_topic": {
              "description": "Always display \"Zoom Meeting\" as the meeting topic",
              "type": "boolean"
            },
            "force_pmi_jbh_password": {
              "description": "Require a password for Personal Meetings if attendees can join before host",
              "type": "boolean"
            }
          }
        },
        "in_meeting": {
          "title": "in_meeting",
          "type": "object",
          "properties": {
            "e2e_encryption": {
              "description": "Require that all meetings are encrypted using AES",
              "type": "boolean"
            },
            "chat": {
              "description": "Allow meeting participants to send a message visible to all participants",
              "type": "boolean"
            },
            "private_chat": {
              "description": "Allow meeting participants to send a private 1:1 message to another participants",
              "type": "boolean"
            },
            "auto_saving_chat": {
              "description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts",
              "type": "boolean"
            },
            "file_transfer": {
              "description": "Hosts and participants can send files through the in-meeting chat",
              "type": "boolean"
            },
            "feedback": {
              "description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting",
              "type": "boolean"
            },
            "post_meeting_feedback": {
              "description": "Display a thumbs up/down survey at the end of each meeting",
              "type": "boolean"
            },
            "co_host": {
              "description": "Allow the host to add co-hosts",
              "type": "boolean"
            },
            "polling": {
              "description": "Add 'Polls' to the meeting controls.",
              "type": "boolean"
            },
            "attendee_on_hold": {
              "description": "Allow hosts to temporarily remove an attendee from the meeting",
              "type": "boolean"
            },
            "show_meeting_control_toolbar": {
              "description": "Always show meeting control toolbar",
              "type": "boolean"
            },
            "allow_show_zoom_windows": {
              "description": "Show Zoom Desktop application when sharing screen",
              "type": "boolean"
            },
            "annotation": {
              "description": "Allow participants to use annotation tools to add information to shared screens",
              "type": "boolean"
            },
            "whiteboard": {
              "description": "Allow participants to share a whiteboard that includes annotation tools",
              "type": "boolean"
            },
            "webinar_question_answer": {
              "description": "Q&A in webinar",
              "type": "boolean"
            },
            "anonymous_question_answer": {
              "description": "Allow Anonymous Q&A in Webinar",
              "type": "boolean"
            },
            "breakout_room": {
              "description": "Allow host to split meeting participants into separate, smaller rooms",
              "type": "boolean"
            },
            "closed_caption": {
              "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions",
              "type": "boolean"
            },
            "far_end_camera_control": {
              "description": "Allow another user to take control of your camera during a meeting",
              "type": "boolean"
            },
            "group_hd": {
              "description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
              "type": "boolean"
            },
            "virtual_background": {
              "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "type": "boolean"
            },
            "alert_guest_join": {
              "description": "Identify guest participants in the meeting/webinar",
              "type": "boolean"
            },
            "auto_answer": {
              "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
              "type": "boolean"
            },
            "p2p_connetion": {
              "description": "Peer to Peer connection while only 2 people are in a meeting",
              "type": "boolean"
            },
            "p2p_ports": {
              "description": "P2P listening ports range",
              "type": "boolean"
            },
            "ports_range": {
              "description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
              "type": "string"
            },
            "sending_default_email_invites": {
              "description": "Only show default email when sending email invites",
              "type": "boolean"
            },
            "use_html_format_email": {
              "description": "Use HTML format email for Outlook plugin",
              "type": "boolean"
            },
            "dscp_marking": {
              "description": "DSCP marking",
              "type": "boolean"
            },
            "dscp_audio": {
              "description": "DSCP Audio\n**minimum:** 1\n**maximum:** 63",
              "type": "integer",
              "minimum": 1,
              "maximum": 63,
              "format": "int32"
            },
            "dscp_video": {
              "description": "DSCP Video\n**minimum:** 1\n**maximum:** 63",
              "type": "integer",
              "minimum": 1,
              "maximum": 63,
              "format": "int32"
            },
            "stereo_audio": {
              "description": "Allow users to select stereo audio in their client settings",
              "type": "boolean"
            },
            "original_audio": {
              "description": "Allow users to select original sound in their client settings",
              "type": "boolean"
            },
            "screen_sharing": {
              "description": "Allow screen sharing",
              "type": "boolean"
            },
            "remote_control": {
              "description": "Allow users to request remote control",
              "type": "boolean"
            },
            "attention_tracking": {
              "description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing",
              "type": "boolean"
            }
          }
        },
        "email_notification": {
          "title": "email_notification",
          "type": "object",
          "properties": {
            "cloud_recording_avaliable_reminder": {
              "description": "Notify host when cloud recording is available",
              "type": "boolean"
            },
            "jbh_reminder": {
              "description": "Notify host when participants join the meeting before them",
              "type": "boolean"
            },
            "cancel_meeting_reminder": {
              "description": "Notify host and participants when the meeting is cancelled",
              "type": "boolean"
            },
            "low_host_count_reminder": {
              "description": "Notify when host licenses are running low",
              "type": "boolean"
            },
            "alternative_host_reminder": {
              "description": "Notify when an alternative host is set or removed from a meeting",
              "type": "boolean"
            }
          }
        },
        "zoom_rooms": {
          "title": "zoom_rooms",
          "type": "object",
          "properties": {
            "upcoming_meeting_alert": {
              "description": "Upcoming meeting alert",
              "type": "boolean"
            },
            "start_airplay_manually": {
              "description": "Start AirPlay service manually",
              "type": "boolean"
            },
            "weekly_system_restart": {
              "description": "Weekly system restart",
              "type": "boolean"
            },
            "list_meetings_with_calendar": {
              "description": "Display meeting list with calendar integration",
              "type": "boolean"
            },
            "zr_post_meeting_feedback": {
              "description": "Zoom Room post meeting feedback",
              "type": "boolean"
            },
            "ultrasonic": {
              "description": "Automatic direct sharing using ultrasonic proximity signal",
              "type": "boolean"
            },
            "force_private_meeting": {
              "description": "Transform all meetings to private",
              "type": "boolean"
            },
            "hide_host_information": {
              "description": "Hide host and meeting ID from private meetings",
              "type": "boolean"
            },
            "cmr_for_instant_meeting": {
              "description": "Cloud recording for instant meetings",
              "type": "boolean"
            },
            "auto_start_stop_scheduled_meetings": {
              "description": "Automatic start/stop for scheduled meetings",
              "type": "boolean"
            }
          }
        },
        "security": {
          "title": "security",
          "type": "object",
          "properties": {
            "admin_change_name_pic": {
              "description": "Only account administrators can change user's username and picture",
              "type": "boolean"
            },
            "import_photos_from_devices": {
              "description": "Allow importing of photos from photo library on the user's device",
              "type": "boolean"
            },
            "hide_billing_info": {
              "description": "Hide billing information",
              "type": "boolean"
            }
          }
        },
        "recording": {
          "title": "recording",
          "type": "object",
          "properties": {
            "local_recording": {
              "description": "Allow hosts and participants to record the meeting to a local file",
              "type": "boolean"
            },
            "cloud_recording": {
              "description": "Allow hosts to record and save the meeting in the cloud",
              "type": "boolean"
            },
            "record_speaker_view": {
              "description": "Record active speaker with shared screen",
              "type": "boolean"
            },
            "record_gallery_view": {
              "description": "Record gallery view with shared screen",
              "type": "boolean"
            },
            "record_audio_file": {
              "description": "Record an audio only file",
              "type": "boolean"
            },
            "save_chat_text": {
              "description": "Save chat text from the meeting",
              "type": "boolean"
            },
            "show_timestamp": {
              "description": "Add a timestamp to the recording",
              "type": "boolean"
            },
            "recording_audio_transcript": {
              "description": "Automatically transcribe the audio of the meeting or webinar to the cloud",
              "type": "boolean"
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "cloud_recording_download": {
              "description": "Cloud Recording Downloads",
              "type": "boolean"
            },
            "cloud_recording_download_host": {
              "description": "Only the host can download cloud recordings",
              "type": "boolean"
            },
            "account_user_access_recording": {
              "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
              "type": "boolean"
            },
            "auto_delete_cmr": {
              "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
              "type": "boolean"
            },
            "auto_delete_cmr_days": {
              "description": "When `auto_delete_cmr` is 'true' this value will set the number of days before auto deletion of cloud recordings",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "telephony": {
          "title": "telephony",
          "type": "object",
          "properties": {
            "third_party_audio": {
              "description": "Users can join the meeting using the existing 3rd party audio configuration",
              "type": "boolean"
            },
            "audio_conference_info": {
              "description": "3rd party audio conference info",
              "type": "string"
            }
          }
        },
        "integration": {
          "title": "integration",
          "type": "object",
          "properties": {
            "google_calendar": {
              "description": "Enables meetings to be scheduled using Google Calendars",
              "type": "boolean"
            },
            "google_drive": {
              "description": "Enables users who join a meeting from their mobile device to share content from their Google Drive",
              "type": "boolean"
            },
            "dropbox": {
              "description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account",
              "type": "boolean"
            },
            "box": {
              "description": "Enables users who join a meeting from their mobile device to share content from their Box account",
              "type": "boolean"
            },
            "microsoft_one_drive": {
              "description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account",
              "type": "boolean"
            },
            "kubi": {
              "description": "Enables users to control a connected Kubi device from within a Zoom meeting",
              "type": "boolean"
            }
          }
        },
        "feature": {
          "title": "feature",
          "type": "object",
          "properties": {
            "meeting_capacity": {
              "description": "Set the maximum number of participants this user can have in a single meeting",
              "example": 100,
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "ScheduleMeeting": {
      "title": "schedule_meeting",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Start meetings with host video on",
          "type": "boolean"
        },
        "participant_video": {
          "description": "Start meetings with participant video on. Participants can change this during the meeting\n`both` Telephony and VoIP\n`telephony` Audio PSTN telephony only\n`voip` VoIP only\n`thirdParty` 3rd party audio conference.",
          "type": "boolean"
        },
        "audio_type": {
          "title": "audio_type",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            },
            {
              "name": "thirdParty",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ]
        },
        "join_before_host": {
          "description": "Allow participants to join the meeting before the host arrives",
          "type": "boolean"
        },
        "enforce_login": {
          "description": "Only signed-in (Zoom users) users can join meetings",
          "type": "boolean"
        },
        "enforce_login_with_domains": {
          "description": "Only signed-in users with a specific domain can join meetings",
          "type": "boolean"
        },
        "enforce_login_domains": {
          "description": "Only signed-in users with a specified domains",
          "type": "string"
        },
        "not_store_meeting_topic": {
          "description": "Always display \"Zoom Meeting\" as the meeting topic",
          "type": "boolean"
        },
        "force_pmi_jbh_password": {
          "description": "Require a password for Personal Meetings if attendees can join before host",
          "type": "boolean"
        }
      }
    },
    "AudioType": {
      "title": "audio_type",
      "example": "both",
      "x-enum-elements": [
        {
          "name": "both",
          "description": ""
        },
        {
          "name": "telephony",
          "description": ""
        },
        {
          "name": "voip",
          "description": ""
        },
        {
          "name": "thirdParty",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "both",
        "telephony",
        "voip",
        "thirdParty"
      ]
    },
    "InMeeting": {
      "title": "in_meeting",
      "type": "object",
      "properties": {
        "e2e_encryption": {
          "description": "Require that all meetings are encrypted using AES",
          "type": "boolean"
        },
        "chat": {
          "description": "Allow meeting participants to send a message visible to all participants",
          "type": "boolean"
        },
        "private_chat": {
          "description": "Allow meeting participants to send a private 1:1 message to another participants",
          "type": "boolean"
        },
        "auto_saving_chat": {
          "description": "Automatically save all in-meeting chats so that hosts do not need to manually save the text of the chat after the meeting starts",
          "type": "boolean"
        },
        "file_transfer": {
          "description": "Hosts and participants can send files through the in-meeting chat",
          "type": "boolean"
        },
        "feedback": {
          "description": "Add a Feedback tab to the Windows Settings or Mac Preferences dialog, and also enable users to provide feedback to Zoom at the end of the meeting",
          "type": "boolean"
        },
        "post_meeting_feedback": {
          "description": "Display a thumbs up/down survey at the end of each meeting",
          "type": "boolean"
        },
        "co_host": {
          "description": "Allow the host to add co-hosts",
          "type": "boolean"
        },
        "polling": {
          "description": "Add 'Polls' to the meeting controls.",
          "type": "boolean"
        },
        "attendee_on_hold": {
          "description": "Allow hosts to temporarily remove an attendee from the meeting",
          "type": "boolean"
        },
        "show_meeting_control_toolbar": {
          "description": "Always show meeting control toolbar",
          "type": "boolean"
        },
        "allow_show_zoom_windows": {
          "description": "Show Zoom Desktop application when sharing screen",
          "type": "boolean"
        },
        "annotation": {
          "description": "Allow participants to use annotation tools to add information to shared screens",
          "type": "boolean"
        },
        "whiteboard": {
          "description": "Allow participants to share a whiteboard that includes annotation tools",
          "type": "boolean"
        },
        "webinar_question_answer": {
          "description": "Q&A in webinar",
          "type": "boolean"
        },
        "anonymous_question_answer": {
          "description": "Allow Anonymous Q&A in Webinar",
          "type": "boolean"
        },
        "breakout_room": {
          "description": "Allow host to split meeting participants into separate, smaller rooms",
          "type": "boolean"
        },
        "closed_caption": {
          "description": "Allow host to type closed captions or assign a participant/third party device to add closed captions",
          "type": "boolean"
        },
        "far_end_camera_control": {
          "description": "Allow another user to take control of your camera during a meeting",
          "type": "boolean"
        },
        "group_hd": {
          "description": "Activate higher quality video for host and participants. (This will use more bandwidth.)",
          "type": "boolean"
        },
        "virtual_background": {
          "description": "Allow users to replace their background with any selected image. Choose or upload an image in the Zoom Desktop application settings.",
          "type": "boolean"
        },
        "watermark": {
          "description": "Add watermark when viewing shared screen",
          "type": "boolean"
        },
        "alert_guest_join": {
          "description": "Identify guest participants in the meeting/webinar",
          "type": "boolean"
        },
        "auto_answer": {
          "description": "Enable users to see and add contacts to 'auto-answer group' in the contact list on chat. Any call from members of this group will be automatically answered.",
          "type": "boolean"
        },
        "p2p_connetion": {
          "description": "Peer to Peer connection while only 2 people are in a meeting",
          "type": "boolean"
        },
        "p2p_ports": {
          "description": "P2P listening ports range",
          "type": "boolean"
        },
        "ports_range": {
          "description": "Listening ports range, separated by comma (ex 55,56). The ports range must be between 1 to 65535.",
          "type": "string"
        },
        "sending_default_email_invites": {
          "description": "Only show default email when sending email invites",
          "type": "boolean"
        },
        "use_html_format_email": {
          "description": "Use HTML format email for Outlook plugin",
          "type": "boolean"
        },
        "dscp_marking": {
          "description": "DSCP marking",
          "type": "boolean"
        },
        "dscp_audio": {
          "description": "DSCP Audio\n**minimum:** 1\n**maximum:** 63",
          "type": "integer",
          "minimum": 1,
          "maximum": 63,
          "format": "int32"
        },
        "dscp_video": {
          "description": "DSCP Video\n**minimum:** 1\n**maximum:** 63",
          "type": "integer",
          "minimum": 1,
          "maximum": 63,
          "format": "int32"
        },
        "stereo_audio": {
          "description": "Allow users to select stereo audio in their client settings",
          "type": "boolean"
        },
        "original_audio": {
          "description": "Allow users to select original sound in their client settings",
          "type": "boolean"
        },
        "screen_sharing": {
          "description": "Allow screen sharing",
          "type": "boolean"
        },
        "remote_control": {
          "description": "Allow users to request remote control",
          "type": "boolean"
        },
        "attention_tracking": {
          "description": "Lets the host see an indicator in the participant panel if a meeting/webinar attendee does not have Zoom in focus during screen sharing",
          "type": "boolean"
        }
      }
    },
    "EmailNotification": {
      "title": "email_notification",
      "type": "object",
      "properties": {
        "cloud_recording_avaliable_reminder": {
          "description": "Notify host when cloud recording is available",
          "type": "boolean"
        },
        "jbh_reminder": {
          "description": "Notify host when participants join the meeting before them",
          "type": "boolean"
        },
        "cancel_meeting_reminder": {
          "description": "Notify host and participants when the meeting is cancelled",
          "type": "boolean"
        },
        "low_host_count_reminder": {
          "description": "Notify when host licenses are running low",
          "type": "boolean"
        },
        "alternative_host_reminder": {
          "description": "Notify when an alternative host is set or removed from a meeting",
          "type": "boolean"
        }
      }
    },
    "ZoomRooms": {
      "title": "zoom_rooms",
      "type": "object",
      "properties": {
        "upcoming_meeting_alert": {
          "description": "Upcoming meeting alert",
          "type": "boolean"
        },
        "start_airplay_manually": {
          "description": "Start AirPlay service manually",
          "type": "boolean"
        },
        "weekly_system_restart": {
          "description": "Weekly system restart",
          "type": "boolean"
        },
        "list_meetings_with_calendar": {
          "description": "Display meeting list with calendar integration",
          "type": "boolean"
        },
        "zr_post_meeting_feedback": {
          "description": "Zoom Room post meeting feedback",
          "type": "boolean"
        },
        "ultrasonic": {
          "description": "Automatic direct sharing using ultrasonic proximity signal",
          "type": "boolean"
        },
        "force_private_meeting": {
          "description": "Transform all meetings to private",
          "type": "boolean"
        },
        "hide_host_information": {
          "description": "Hide host and meeting ID from private meetings",
          "type": "boolean"
        },
        "cmr_for_instant_meeting": {
          "description": "Cloud recording for instant meetings",
          "type": "boolean"
        },
        "auto_start_stop_scheduled_meetings": {
          "description": "Automatic start/stop for scheduled meetings",
          "type": "boolean"
        }
      }
    },
    "Security": {
      "title": "security",
      "type": "object",
      "properties": {
        "admin_change_name_pic": {
          "description": "Only account administrators can change user's username and picture",
          "type": "boolean"
        },
        "import_photos_from_devices": {
          "description": "Allow importing of photos from photo library on the user's device",
          "type": "boolean"
        },
        "hide_billing_info": {
          "description": "Hide billing information",
          "type": "boolean"
        }
      }
    },
    "Recording": {
      "title": "recording",
      "type": "object",
      "properties": {
        "local_recording": {
          "description": "Allow hosts and participants to record the meeting to a local file",
          "type": "boolean"
        },
        "cloud_recording": {
          "description": "Allow hosts to record and save the meeting in the cloud",
          "type": "boolean"
        },
        "record_speaker_view": {
          "description": "Record active speaker with shared screen",
          "type": "boolean"
        },
        "record_gallery_view": {
          "description": "Record gallery view with shared screen",
          "type": "boolean"
        },
        "record_audio_file": {
          "description": "Record an audio only file",
          "type": "boolean"
        },
        "save_chat_text": {
          "description": "Save chat text from the meeting",
          "type": "boolean"
        },
        "show_timestamp": {
          "description": "Add a timestamp to the recording",
          "type": "boolean"
        },
        "recording_audio_transcript": {
          "description": "Automatically transcribe the audio of the meeting or webinar to the cloud",
          "type": "boolean"
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "cloud_recording_download": {
          "description": "Cloud Recording Downloads",
          "type": "boolean"
        },
        "cloud_recording_download_host": {
          "description": "Only the host can download cloud recordings",
          "type": "boolean"
        },
        "account_user_access_recording": {
          "description": "Cloud recordings are only accessible to account members. People outside of your organization cannot open links that provide access to cloud recordings.",
          "type": "boolean"
        },
        "auto_delete_cmr": {
          "description": "Allow Zoom to automatically delete recordings permanently after a specified number of days",
          "type": "boolean"
        },
        "auto_delete_cmr_days": {
          "description": "When `auto_delete_cmr` is 'true' this value will set the number of days before auto deletion of cloud recordings",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "AutoRecording": {
      "title": "auto_recording",
      "example": "local",
      "x-enum-elements": [
        {
          "name": "local",
          "description": ""
        },
        {
          "name": "cloud",
          "description": ""
        },
        {
          "name": "none",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "local",
        "cloud",
        "none"
      ]
    },
    "Telephony": {
      "title": "telephony",
      "type": "object",
      "properties": {
        "third_party_audio": {
          "description": "Users can join the meeting using the existing 3rd party audio configuration",
          "type": "boolean"
        },
        "audio_conference_info": {
          "description": "3rd party audio conference info",
          "type": "string"
        }
      }
    },
    "Integration": {
      "title": "integration",
      "type": "object",
      "properties": {
        "google_calendar": {
          "description": "Enables meetings to be scheduled using Google Calendars",
          "type": "boolean"
        },
        "google_drive": {
          "description": "Enables users who join a meeting from their mobile device to share content from their Google Drive",
          "type": "boolean"
        },
        "dropbox": {
          "description": "Enables users who join a meeting from their mobile device to share content from their Dropbox account",
          "type": "boolean"
        },
        "box": {
          "description": "Enables users who join a meeting from their mobile device to share content from their Box account",
          "type": "boolean"
        },
        "microsoft_one_drive": {
          "description": "Enables users who join a meeting from their mobile device to share content from their Microsoft OneDrive account",
          "type": "boolean"
        },
        "kubi": {
          "description": "Enables users to control a connected Kubi device from within a Zoom meeting",
          "type": "boolean"
        }
      }
    },
    "Feature": {
      "title": "feature",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "description": "Set the maximum number of participants this user can have in a single meeting",
          "example": 100,
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Contact": {
      "title": "contact",
      "description": "Account billing contact information returned",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "Billing Contact's first name",
          "type": "string"
        },
        "last_name": {
          "description": "Billing Contact's last name",
          "type": "string"
        },
        "email": {
          "description": "Billing Contact's email address",
          "type": "string"
        },
        "phone_number": {
          "description": "Billing Contact's phone number",
          "type": "string"
        },
        "address": {
          "description": "Billing Contact's address",
          "type": "string"
        },
        "city": {
          "description": "Billing Contact's city",
          "type": "string"
        },
        "state": {
          "description": "Billing Contact's state",
          "type": "string"
        },
        "zip": {
          "description": "Billing Contact's zip/postal code",
          "type": "string"
        },
        "country": {
          "description": "Billing Contact's country",
          "type": "string"
        },
        "apt": {
          "description": "Billing Contact's apartment/suite",
          "type": "string"
        }
      },
      "required": [
        "first_name",
        "last_name",
        "email",
        "phone_number",
        "address",
        "city",
        "state",
        "zip",
        "country"
      ]
    },
    "BillingContact": {
      "title": "BillingContact",
      "description": "Billing Contact object",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "Billing Contact's first name",
          "type": "string"
        },
        "last_name": {
          "description": "Billing Contact's last name",
          "type": "string"
        },
        "email": {
          "description": "Billing Contact's email address",
          "type": "string"
        },
        "phone_number": {
          "description": "Billing Contact's phone number",
          "type": "string"
        },
        "address": {
          "description": "Billing Contact's address",
          "type": "string"
        },
        "apt": {
          "description": "Billing Contact's apartment/suite",
          "type": "string"
        },
        "city": {
          "description": "Billing Contact's city",
          "type": "string"
        },
        "state": {
          "description": "Billing Contact's state",
          "type": "string"
        },
        "zip": {
          "description": "Billing Contact's zip/postal code",
          "type": "string"
        },
        "country": {
          "description": "Billing Contact's country",
          "type": "string"
        }
      }
    },
    "AccountPlans": {
      "title": "AccountPlans",
      "description": "Account plans returned",
      "type": "object",
      "properties": {
        "plan_base": {
          "title": "plan_base",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account base <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "type",
            "hosts"
          ]
        },
        "plan_zoom_rooms": {
          "title": "plan_zoom_rooms",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account plan number of hosts",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "plan_room_connector": {
          "title": "plan_room_connector",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account plan number of hosts",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "plan_large_meeting": {
          "description": "Additional Large Meeting Plans",
          "type": "array",
          "items": {
            "title": "plan_large_meeting",
            "description": "Additional Large Meeting Plans",
            "type": "object",
            "properties": {
              "type": {
                "description": "Additional Large Meeting Plans",
                "type": "string"
              }
            }
          }
        },
        "plan_webinar": {
          "description": "Additional Webinar Plans",
          "type": "array",
          "items": {
            "title": "plan_webinar",
            "description": "Additional Webinar Plans",
            "type": "object",
            "properties": {
              "type": {
                "description": "Additional Webinar Plans",
                "type": "string"
              }
            }
          }
        },
        "plan_recording": {
          "description": "Additional Cloud Recording Plan",
          "type": "string"
        },
        "plan_audio": {
          "title": "plan_audio",
          "type": "object",
          "properties": {
            "type": {
              "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "tollfree_countries": {
              "description": "Toll-free countries, multiple value separated by comma",
              "type": "string"
            },
            "premium_countries": {
              "description": "Premium countries, multiple value separated by comma",
              "type": "string"
            },
            "callout_countries": {
              "description": "Call-out countries, multiple value separated by comma",
              "type": "string"
            },
            "ddi_numbers": {
              "description": "Dedicated Dial-In Numbers",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "PlanBase": {
      "title": "plan_base",
      "type": "object",
      "properties": {
        "type": {
          "description": "Account base <a href=\"#plans\">plan type</a>",
          "type": "string"
        },
        "hosts": {
          "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "type",
        "hosts"
      ]
    },
    "PlanZoomRooms": {
      "title": "plan_zoom_rooms",
      "type": "object",
      "properties": {
        "type": {
          "description": "Account <a href=\"#plans\">plan type</a>",
          "type": "string"
        },
        "hosts": {
          "description": "Account plan number of hosts",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PlanRoomConnector": {
      "title": "plan_room_connector",
      "type": "object",
      "properties": {
        "type": {
          "description": "Account <a href=\"#plans\">plan type</a>",
          "type": "string"
        },
        "hosts": {
          "description": "Account plan number of hosts",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PlanLargeMeeting": {
      "title": "plan_large_meeting",
      "description": "Additional Large Meeting Plans",
      "type": "object",
      "properties": {
        "type": {
          "description": "Additional Large Meeting Plans",
          "type": "string"
        }
      }
    },
    "PlanWebinar": {
      "title": "plan_webinar",
      "description": "Additional Webinar Plans",
      "type": "object",
      "properties": {
        "type": {
          "description": "Additional Webinar Plans",
          "type": "string"
        }
      }
    },
    "PlanAudio": {
      "title": "plan_audio",
      "type": "object",
      "properties": {
        "type": {
          "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
          "type": "string"
        },
        "tollfree_countries": {
          "description": "Toll-free countries, multiple value separated by comma",
          "type": "string"
        },
        "premium_countries": {
          "description": "Premium countries, multiple value separated by comma",
          "type": "string"
        },
        "callout_countries": {
          "description": "Call-out countries, multiple value separated by comma",
          "type": "string"
        },
        "ddi_numbers": {
          "description": "Dedicated Dial-In Numbers",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Body": {
      "title": "body",
      "type": "object",
      "properties": {
        "contact": {
          "title": "contact",
          "description": "Account billing contact information returned",
          "type": "object",
          "properties": {
            "first_name": {
              "description": "Billing Contact's first name",
              "type": "string"
            },
            "last_name": {
              "description": "Billing Contact's last name",
              "type": "string"
            },
            "email": {
              "description": "Billing Contact's email address",
              "type": "string"
            },
            "phone_number": {
              "description": "Billing Contact's phone number",
              "type": "string"
            },
            "address": {
              "description": "Billing Contact's address",
              "type": "string"
            },
            "city": {
              "description": "Billing Contact's city",
              "type": "string"
            },
            "state": {
              "description": "Billing Contact's state",
              "type": "string"
            },
            "zip": {
              "description": "Billing Contact's zip/postal code",
              "type": "string"
            },
            "country": {
              "description": "Billing Contact's country",
              "type": "string"
            },
            "apt": {
              "description": "Billing Contact's apartment/suite",
              "type": "string"
            }
          },
          "required": [
            "first_name",
            "last_name",
            "email",
            "phone_number",
            "address",
            "city",
            "state",
            "zip",
            "country"
          ]
        },
        "plan_base": {
          "title": "plan_base",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account base <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account base plan number of hosts. For a Pro Plan, please select a value between 1 and 9. For a Business Plan, please select a value between 10 and 49. For a Education Plan, please select a value between 20 and 149. For a Free Trial Plan, please select a value between 1 and 9999.",
              "type": "integer",
              "format": "int32"
            }
          },
          "required": [
            "type",
            "hosts"
          ]
        },
        "plan_zoom_rooms": {
          "title": "plan_zoom_rooms",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account plan number of hosts",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "plan_room_connector": {
          "title": "plan_zoom_rooms",
          "type": "object",
          "properties": {
            "type": {
              "description": "Account <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "hosts": {
              "description": "Account plan number of hosts",
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "plan_large_meeting": {
          "description": "Additional Large Meeting Plans",
          "type": "array",
          "items": {
            "title": "plan_zoom_rooms",
            "type": "object",
            "properties": {
              "type": {
                "description": "Account <a href=\"#plans\">plan type</a>",
                "type": "string"
              },
              "hosts": {
                "description": "Account plan number of hosts",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "plan_webinar": {
          "description": "Additional Webinar Plans",
          "type": "array",
          "items": {
            "title": "plan_zoom_rooms",
            "type": "object",
            "properties": {
              "type": {
                "description": "Account <a href=\"#plans\">plan type</a>",
                "type": "string"
              },
              "hosts": {
                "description": "Account plan number of hosts",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "plan_recording": {
          "description": "Additional Cloud Recording Plan",
          "type": "string"
        },
        "plan_audio": {
          "title": "plan_audio",
          "type": "object",
          "properties": {
            "type": {
              "description": "Additional Audio Conferencing <a href=\"#plans\">plan type</a>",
              "type": "string"
            },
            "tollfree_countries": {
              "description": "Toll-free countries, multiple value separated by comma",
              "type": "string"
            },
            "premium_countries": {
              "description": "Premium countries, multiple value separated by comma",
              "type": "string"
            },
            "callout_countries": {
              "description": "Call-out countries, multiple value separated by comma",
              "type": "string"
            },
            "ddi_numbers": {
              "description": "Dedicated Dial-In Numbers",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "AccountPlanRequired": {
      "title": "AccountPlanRequired",
      "description": "Account plan object",
      "type": "object",
      "properties": {
        "type": {
          "description": "Account <a href=\"#plans\">plan type</a>",
          "type": "string"
        },
        "hosts": {
          "description": "Account plan number of hosts",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "type",
        "hosts"
      ]
    },
    "Status257": {
      "title": "status257",
      "example": "active",
      "x-enum-elements": [
        {
          "name": "active",
          "description": ""
        },
        {
          "name": "inactive",
          "description": ""
        },
        {
          "name": "pending",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "active",
        "inactive",
        "pending"
      ]
    },
    "UserList": {
      "title": "User List",
      "description": "User list returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "description": "List of User objects",
          "type": "array",
          "items": {
            "title": "User121",
            "type": "object",
            "properties": {
              "email": {
                "description": "User's email address",
                "type": "string"
              },
              "type": {
                "title": "type",
                "example": 1,
                "x-enum-elements": [
                  {
                    "name": "Enum_1",
                    "description": ""
                  },
                  {
                    "name": "Enum_2",
                    "description": ""
                  },
                  {
                    "name": "Enum_3",
                    "description": ""
                  }
                ],
                "type": "integer",
                "format": "int32",
                "enum": [
                  "1",
                  "2",
                  "3"
                ]
              },
              "id": {
                "description": "User ID",
                "type": "string"
              },
              "first_name": {
                "description": "User's first name\n**max length:** 64",
                "type": "string",
                "maxLength": 64
              },
              "last_name": {
                "description": "User's last name\n**max length:** 64",
                "type": "string",
                "maxLength": 64
              },
              "pmi": {
                "description": "Personal Meeting ID",
                "type": "string"
              },
              "timezone": {
                "description": "Time Zone",
                "type": "string"
              },
              "dept": {
                "description": "Department",
                "type": "string"
              },
              "created_at": {
                "description": "User create time",
                "type": "string",
                "format": "date-time"
              },
              "last_login_time": {
                "description": "User last login time",
                "type": "string",
                "format": "date-time"
              },
              "last_client_version": {
                "description": "User last login client version",
                "type": "string"
              },
              "group_ids": {
                "description": "",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "im_group_ids": {
                "description": "",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "email",
              "type"
            ]
          }
        }
      }
    },
    "User121": {
      "title": "User121",
      "type": "object",
      "properties": {
        "email": {
          "description": "User's email address",
          "type": "string"
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "first_name": {
          "description": "User's first name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "pmi": {
          "description": "Personal Meeting ID",
          "type": "string"
        },
        "timezone": {
          "description": "Time Zone",
          "type": "string"
        },
        "dept": {
          "description": "Department",
          "type": "string"
        },
        "created_at": {
          "description": "User create time",
          "type": "string",
          "format": "date-time"
        },
        "last_login_time": {
          "description": "User last login time",
          "type": "string",
          "format": "date-time"
        },
        "last_client_version": {
          "description": "User last login client version",
          "type": "string"
        },
        "group_ids": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "im_group_ids": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "email",
        "type"
      ]
    },
    "Type": {
      "title": "type",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3"
      ]
    },
    "Body258": {
      "title": "body258",
      "description": "User",
      "type": "object",
      "properties": {
        "action": {
          "title": "action",
          "example": "create",
          "x-enum-elements": [
            {
              "name": "create",
              "description": ""
            },
            {
              "name": "autoCreate",
              "description": ""
            },
            {
              "name": "custCreate",
              "description": ""
            },
            {
              "name": "ssoCreate",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "create",
            "autoCreate",
            "custCreate",
            "ssoCreate"
          ]
        },
        "user_info": {
          "title": "user_info",
          "type": "object",
          "properties": {
            "email": {
              "description": "User's email address\n**max length:** 128",
              "type": "string",
              "maxLength": 128
            },
            "type": {
              "title": "type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "first_name": {
              "description": "User's first name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
              "type": "string",
              "maxLength": 64
            },
            "last_name": {
              "description": "User's last name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
              "type": "string",
              "maxLength": 64
            },
            "password": {
              "description": "User’s password. Only for \"autoCreate\" action.",
              "type": "string"
            }
          },
          "required": [
            "email",
            "type"
          ]
        }
      },
      "required": [
        "action"
      ]
    },
    "Action": {
      "title": "action",
      "example": "create",
      "x-enum-elements": [
        {
          "name": "create",
          "description": ""
        },
        {
          "name": "autoCreate",
          "description": ""
        },
        {
          "name": "custCreate",
          "description": ""
        },
        {
          "name": "ssoCreate",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "create",
        "autoCreate",
        "custCreate",
        "ssoCreate"
      ]
    },
    "UserInfo": {
      "title": "user_info",
      "type": "object",
      "properties": {
        "email": {
          "description": "User's email address\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "first_name": {
          "description": "User's first name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "password": {
          "description": "User’s password. Only for \"autoCreate\" action.",
          "type": "string"
        }
      },
      "required": [
        "email",
        "type"
      ]
    },
    "UserCreateResponse": {
      "title": "userCreateResponse",
      "description": "User Created",
      "type": "object",
      "properties": {
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "first_name": {
          "description": "User's first name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "email": {
          "description": "User's email address",
          "type": "string"
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        }
      }
    },
    "LoginType": {
      "title": "login_type",
      "example": 0,
      "x-enum-elements": [
        {
          "name": "Enum_0",
          "description": ""
        },
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_99",
          "description": ""
        },
        {
          "name": "Enum_100",
          "description": ""
        },
        {
          "name": "Enum_101",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "99",
        "100",
        "101"
      ]
    },
    "UserResponse": {
      "title": "userResponse",
      "description": "User object returned",
      "type": "object",
      "properties": {
        "email": {
          "description": "User's email address",
          "type": "string"
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "first_name": {
          "description": "User's first name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "pmi": {
          "description": "Personal Meeting ID",
          "type": "string"
        },
        "timezone": {
          "description": "Time Zone",
          "type": "string"
        },
        "dept": {
          "description": "Department",
          "type": "string"
        },
        "created_at": {
          "description": "User create time",
          "type": "string",
          "format": "date-time"
        },
        "last_login_time": {
          "description": "User last login time",
          "type": "string",
          "format": "date-time"
        },
        "last_client_version": {
          "description": "User last login client version",
          "type": "string"
        },
        "vanity_url": {
          "description": "",
          "type": "string"
        },
        "personal_meeting_url": {
          "description": "",
          "type": "string"
        },
        "verified": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "pic_url": {
          "description": "",
          "type": "string"
        },
        "cms_user_id": {
          "description": "",
          "type": "string"
        },
        "account_id": {
          "description": "",
          "type": "string"
        },
        "host_key": {
          "description": "",
          "type": "string"
        },
        "group_ids": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "im_group_ids": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "email",
        "type"
      ]
    },
    "Action75": {
      "title": "action75",
      "example": "disassociate",
      "x-enum-elements": [
        {
          "name": "disassociate",
          "description": ""
        },
        {
          "name": "delete",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "disassociate",
        "delete"
      ]
    },
    "UserUpdate": {
      "title": "UserUpdate",
      "description": "User",
      "type": "object",
      "properties": {
        "first_name": {
          "description": "User's first name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name. Cannot contain more than 5 Chinese words.\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "pmi": {
          "description": "Personal Meeting ID,length must be 10\n**min length:** 10\n**max length:** 10",
          "type": "string",
          "minLength": 10,
          "maxLength": 10
        },
        "timezone": {
          "description": "The time zone id for user profile. For this parameter value please refer to the id value in [timezone](#timezones) list.",
          "type": "string",
          "format": "date-time"
        },
        "dept": {
          "description": "Department for user profile, use for report",
          "type": "string"
        },
        "vanity_name": {
          "description": "Personal meeting room name",
          "type": "string"
        },
        "host_key": {
          "description": "Host Key, should be 6-digit number",
          "type": "string",
          "minLength": 6,
          "maxLength": 6
        },
        "cms_user_id": {
          "description": "Kaltura User Id",
          "type": "string"
        }
      }
    },
    "UserAssistantsList": {
      "title": "User assistants List",
      "description": "Success",
      "type": "object",
      "properties": {
        "assistants": {
          "description": "List of User's assistants",
          "type": "array",
          "items": {
            "title": "Assistant",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID",
                "type": "string"
              },
              "email": {
                "description": "User email address. Must have id or email, if given id, the email is ignored.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Assistant": {
      "title": "Assistant",
      "type": "object",
      "properties": {
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "email": {
          "description": "User email address. Must have id or email, if given id, the email is ignored.",
          "type": "string"
        }
      }
    },
    "UserAssistantCreateResponse": {
      "title": "userAssistantCreateResponse",
      "description": "Assitant Added",
      "type": "object",
      "properties": {
        "ids": {
          "description": "User ID",
          "type": "string"
        },
        "add_at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "UserSchedulersList": {
      "title": "User schedulers List",
      "description": "Success",
      "type": "object",
      "properties": {
        "assistants": {
          "description": "List of User's schedulers.",
          "type": "array",
          "items": {
            "title": "Assistant",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID",
                "type": "string"
              },
              "email": {
                "description": "User email address. Must have id or email, if given id, the email is ignored.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "UserSettings": {
      "title": "User settings",
      "description": "User settings returned",
      "type": "object",
      "properties": {
        "scheduled_meeting": {
          "title": "scheduled_meeting",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Host video",
              "type": "boolean"
            },
            "participants_video": {
              "description": "Participants video",
              "type": "boolean"
            },
            "audio_type": {
              "title": "audio_type",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                },
                {
                  "name": "thirdParty",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ]
            },
            "join_before_host": {
              "description": "Join before host",
              "type": "boolean"
            },
            "force_pmi_jbh_password": {
              "description": "Require a password for Personal Meetings if attendees can join before host",
              "type": "boolean"
            },
            "pstn_password_protected": {
              "description": "Generate and require password for participants joining by phone",
              "type": "boolean"
            }
          }
        },
        "in_meeting": {
          "title": "in_meeting89",
          "type": "object",
          "properties": {
            "e2e_encryption": {
              "description": "End-to-end encryption",
              "type": "boolean"
            },
            "chat": {
              "description": "Chat",
              "example": false,
              "type": "boolean"
            },
            "private_chat": {
              "description": "Private chat",
              "example": false,
              "type": "boolean"
            },
            "auto_saving_chat": {
              "description": "Auto saving chats",
              "example": false,
              "type": "boolean"
            },
            "entry_exit_chime": {
              "title": "entry_exit_chime",
              "example": "host",
              "x-enum-elements": [
                {
                  "name": "host",
                  "description": ""
                },
                {
                  "name": "all",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "host",
                "all",
                "none"
              ]
            },
            "record_play_voice": {
              "description": "Record and play their own voice",
              "type": "boolean"
            },
            "file_transfer": {
              "description": "File transfer",
              "example": false,
              "type": "boolean"
            },
            "feedback": {
              "description": "Feedback to Zoom",
              "example": false,
              "type": "boolean"
            },
            "co_host": {
              "description": "Co-host",
              "example": false,
              "type": "boolean"
            },
            "polling": {
              "description": "Polling",
              "example": false,
              "type": "boolean"
            },
            "attendee_on_hold": {
              "description": "Allow host to put attendee on hold",
              "example": false,
              "type": "boolean"
            },
            "annotation": {
              "description": "Annotation",
              "example": false,
              "type": "boolean"
            },
            "remote_control": {
              "description": "Remote control",
              "example": false,
              "type": "boolean"
            },
            "non_verbal_feedback": {
              "description": "Non-verbal feedback",
              "example": false,
              "type": "boolean"
            },
            "breakout_room": {
              "description": "Breakout room",
              "example": false,
              "type": "boolean"
            },
            "remote_support": {
              "description": "Remote support",
              "example": false,
              "type": "boolean"
            },
            "closed_caption": {
              "description": "Closed caption",
              "example": false,
              "type": "boolean"
            },
            "group_hd": {
              "description": "Group HD video",
              "example": false,
              "type": "boolean"
            },
            "virtual_background": {
              "description": "Virtual background",
              "example": false,
              "type": "boolean"
            },
            "far_end_camera_control": {
              "description": "Far end camera control",
              "example": false,
              "type": "boolean"
            },
            "share_dual_camera": {
              "description": "Share dual camera (Deprecated)",
              "example": false,
              "type": "boolean"
            },
            "attention_tracking": {
              "description": "Attention tracking",
              "example": false,
              "type": "boolean"
            },
            "waiting_room": {
              "description": "Waiting room",
              "example": false,
              "type": "boolean"
            }
          }
        },
        "email_notification": {
          "title": "email_notification91",
          "type": "object",
          "properties": {
            "jbh_reminder": {
              "description": "When attendees join meeting before host",
              "example": false,
              "type": "boolean"
            },
            "cancel_meeting_reminder": {
              "description": "When a meeting is cancelled",
              "example": false,
              "type": "boolean"
            },
            "alternative_host_reminder": {
              "description": "When an alternative host is set or removed from a meeting",
              "example": false,
              "type": "boolean"
            }
          }
        },
        "recording": {
          "title": "recording92",
          "type": "object",
          "properties": {
            "local_recording": {
              "description": "Local recording",
              "type": "boolean"
            },
            "cloud_recording": {
              "description": "Cloud recording",
              "example": false,
              "type": "boolean"
            },
            "record_speaker_view": {
              "description": "Record the active speaker view",
              "example": false,
              "type": "boolean"
            },
            "record_gallery_view": {
              "description": "Record the gallery view",
              "example": false,
              "type": "boolean"
            },
            "record_audio_file": {
              "description": "Record an audio only file",
              "example": false,
              "type": "boolean"
            },
            "save_chat_text": {
              "description": "Save chat text from the meeting",
              "example": false,
              "type": "boolean"
            },
            "show_timestamp": {
              "description": "Show timestamp on video",
              "example": false,
              "type": "boolean"
            },
            "recording_audio_transcript": {
              "description": "Audio transcript",
              "type": "boolean"
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "auto_delete_cmr": {
              "description": "Auto delete cloud recordings",
              "example": false,
              "type": "boolean"
            },
            "auto_delete_cmr_days": {
              "description": "A specified number of days of auto delete cloud recordings\n**minimum:** 1\n**maximum:** 10",
              "type": "integer",
              "minimum": 1,
              "maximum": 60,
              "format": "int32"
            }
          }
        },
        "telephony": {
          "title": "telephony94",
          "type": "object",
          "properties": {
            "third_party_audio": {
              "description": "3rd party audio conference",
              "type": "boolean"
            },
            "audio_conference_info": {
              "description": "3rd party audio conference info\n**max length:** 2048",
              "type": "string",
              "maxLength": 2048
            },
            "show_international_numbers_link": {
              "description": "Show international numbers link on the invitation email",
              "type": "boolean"
            }
          }
        },
        "feature": {
          "title": "User settings: Feature settings",
          "type": "object",
          "properties": {
            "meeting_capacity": {
              "description": "User’s meeting capacity",
              "type": "integer",
              "format": "int32"
            },
            "large_meeting": {
              "description": "Large meting feature",
              "type": "boolean"
            },
            "large_meeting_capacity": {
              "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
              "type": "integer",
              "format": "int32"
            },
            "webinar": {
              "description": "Webinar feature",
              "type": "boolean"
            },
            "webinar_capacity": {
              "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
              "type": "integer",
              "format": "int32"
            },
            "cn_meeting": {
              "description": "CN meeting feature",
              "type": "boolean"
            },
            "in_meeting": {
              "description": "IN meeting feature",
              "type": "boolean"
            }
          }
        }
      }
    },
    "ScheduledMeeting": {
      "title": "scheduled_meeting",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Host video",
          "type": "boolean"
        },
        "participants_video": {
          "description": "Participants video",
          "type": "boolean"
        },
        "audio_type": {
          "title": "audio_type",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            },
            {
              "name": "thirdParty",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip",
            "thirdParty"
          ]
        },
        "join_before_host": {
          "description": "Join before host",
          "type": "boolean"
        },
        "force_pmi_jbh_password": {
          "description": "Require a password for Personal Meetings if attendees can join before host",
          "type": "boolean"
        },
        "pstn_password_protected": {
          "description": "Generate and require password for participants joining by phone",
          "type": "boolean"
        }
      }
    },
    "InMeeting89": {
      "title": "in_meeting89",
      "type": "object",
      "properties": {
        "e2e_encryption": {
          "description": "End-to-end encryption",
          "type": "boolean"
        },
        "chat": {
          "description": "Chat",
          "example": false,
          "type": "boolean"
        },
        "private_chat": {
          "description": "Private chat",
          "example": false,
          "type": "boolean"
        },
        "auto_saving_chat": {
          "description": "Auto saving chats",
          "example": false,
          "type": "boolean"
        },
        "entry_exit_chime": {
          "title": "entry_exit_chime",
          "example": "host",
          "x-enum-elements": [
            {
              "name": "host",
              "description": ""
            },
            {
              "name": "all",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "host",
            "all",
            "none"
          ]
        },
        "record_play_voice": {
          "description": "Record and play their own voice",
          "type": "boolean"
        },
        "file_transfer": {
          "description": "File transfer",
          "example": false,
          "type": "boolean"
        },
        "feedback": {
          "description": "Feedback to Zoom",
          "example": false,
          "type": "boolean"
        },
        "co_host": {
          "description": "Co-host",
          "example": false,
          "type": "boolean"
        },
        "polling": {
          "description": "Polling",
          "example": false,
          "type": "boolean"
        },
        "attendee_on_hold": {
          "description": "Allow host to put attendee on hold",
          "example": false,
          "type": "boolean"
        },
        "annotation": {
          "description": "Annotation",
          "example": false,
          "type": "boolean"
        },
        "remote_control": {
          "description": "Remote control",
          "example": false,
          "type": "boolean"
        },
        "non_verbal_feedback": {
          "description": "Non-verbal feedback",
          "example": false,
          "type": "boolean"
        },
        "breakout_room": {
          "description": "Breakout room",
          "example": false,
          "type": "boolean"
        },
        "remote_support": {
          "description": "Remote support",
          "example": false,
          "type": "boolean"
        },
        "closed_caption": {
          "description": "Closed caption",
          "example": false,
          "type": "boolean"
        },
        "group_hd": {
          "description": "Group HD video",
          "example": false,
          "type": "boolean"
        },
        "virtual_background": {
          "description": "Virtual background",
          "example": false,
          "type": "boolean"
        },
        "far_end_camera_control": {
          "description": "Far end camera control",
          "example": false,
          "type": "boolean"
        },
        "share_dual_camera": {
          "description": "Share dual camera (Deprecated)",
          "example": false,
          "type": "boolean"
        },
        "attention_tracking": {
          "description": "Attention tracking",
          "example": false,
          "type": "boolean"
        },
        "waiting_room": {
          "description": "Waiting room",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "EntryExitChime": {
      "title": "entry_exit_chime",
      "example": "host",
      "x-enum-elements": [
        {
          "name": "host",
          "description": ""
        },
        {
          "name": "all",
          "description": ""
        },
        {
          "name": "none",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "host",
        "all",
        "none"
      ]
    },
    "EmailNotification91": {
      "title": "email_notification91",
      "type": "object",
      "properties": {
        "jbh_reminder": {
          "description": "When attendees join meeting before host",
          "example": false,
          "type": "boolean"
        },
        "cancel_meeting_reminder": {
          "description": "When a meeting is cancelled",
          "example": false,
          "type": "boolean"
        },
        "alternative_host_reminder": {
          "description": "When an alternative host is set or removed from a meeting",
          "example": false,
          "type": "boolean"
        }
      }
    },
    "Recording92": {
      "title": "recording92",
      "type": "object",
      "properties": {
        "local_recording": {
          "description": "Local recording",
          "type": "boolean"
        },
        "cloud_recording": {
          "description": "Cloud recording",
          "example": false,
          "type": "boolean"
        },
        "record_speaker_view": {
          "description": "Record the active speaker view",
          "example": false,
          "type": "boolean"
        },
        "record_gallery_view": {
          "description": "Record the gallery view",
          "example": false,
          "type": "boolean"
        },
        "record_audio_file": {
          "description": "Record an audio only file",
          "example": false,
          "type": "boolean"
        },
        "save_chat_text": {
          "description": "Save chat text from the meeting",
          "example": false,
          "type": "boolean"
        },
        "show_timestamp": {
          "description": "Show timestamp on video",
          "example": false,
          "type": "boolean"
        },
        "recording_audio_transcript": {
          "description": "Audio transcript",
          "type": "boolean"
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "auto_delete_cmr": {
          "description": "Auto delete cloud recordings",
          "example": false,
          "type": "boolean"
        },
        "auto_delete_cmr_days": {
          "description": "A specified number of days of auto delete cloud recordings\n**minimum:** 1\n**maximum:** 10",
          "type": "integer",
          "minimum": 1,
          "maximum": 60,
          "format": "int32"
        }
      }
    },
    "Telephony94": {
      "title": "telephony94",
      "type": "object",
      "properties": {
        "third_party_audio": {
          "description": "3rd party audio conference",
          "type": "boolean"
        },
        "audio_conference_info": {
          "description": "3rd party audio conference info\n**max length:** 2048",
          "type": "string",
          "maxLength": 2048
        },
        "show_international_numbers_link": {
          "description": "Show international numbers link on the invitation email",
          "type": "boolean"
        }
      }
    },
    "UserSettings:FeatureSettings": {
      "title": "User settings: Feature settings",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "description": "User’s meeting capacity",
          "type": "integer",
          "format": "int32"
        },
        "large_meeting": {
          "description": "Large meting feature",
          "type": "boolean"
        },
        "large_meeting_capacity": {
          "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
          "type": "integer",
          "format": "int32"
        },
        "webinar": {
          "description": "Webinar feature",
          "type": "boolean"
        },
        "webinar_capacity": {
          "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
          "type": "integer",
          "format": "int32"
        },
        "cn_meeting": {
          "description": "CN meeting feature",
          "type": "boolean"
        },
        "in_meeting": {
          "description": "IN meeting feature",
          "type": "boolean"
        }
      }
    },
    "UserSettings137": {
      "title": "User settings137",
      "description": "User Settings",
      "type": "object",
      "properties": {
        "scheduled_meeting": {
          "title": "scheduled_meeting",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Host video",
              "type": "boolean"
            },
            "participants_video": {
              "description": "Participants video",
              "type": "boolean"
            },
            "audio_type": {
              "title": "audio_type",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                },
                {
                  "name": "thirdParty",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip",
                "thirdParty"
              ]
            },
            "join_before_host": {
              "description": "Join before host",
              "type": "boolean"
            },
            "force_pmi_jbh_password": {
              "description": "Require a password for Personal Meetings if attendees can join before host",
              "type": "boolean"
            },
            "pstn_password_protected": {
              "description": "Generate and require password for participants joining by phone",
              "type": "boolean"
            }
          }
        },
        "in_meeting": {
          "title": "in_meeting89",
          "type": "object",
          "properties": {
            "e2e_encryption": {
              "description": "End-to-end encryption",
              "type": "boolean"
            },
            "chat": {
              "description": "Chat",
              "example": false,
              "type": "boolean"
            },
            "private_chat": {
              "description": "Private chat",
              "example": false,
              "type": "boolean"
            },
            "auto_saving_chat": {
              "description": "Auto saving chats",
              "example": false,
              "type": "boolean"
            },
            "entry_exit_chime": {
              "title": "entry_exit_chime",
              "example": "host",
              "x-enum-elements": [
                {
                  "name": "host",
                  "description": ""
                },
                {
                  "name": "all",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "host",
                "all",
                "none"
              ]
            },
            "record_play_voice": {
              "description": "Record and play their own voice",
              "type": "boolean"
            },
            "file_transfer": {
              "description": "File transfer",
              "example": false,
              "type": "boolean"
            },
            "feedback": {
              "description": "Feedback to Zoom",
              "example": false,
              "type": "boolean"
            },
            "co_host": {
              "description": "Co-host",
              "example": false,
              "type": "boolean"
            },
            "polling": {
              "description": "Polling",
              "example": false,
              "type": "boolean"
            },
            "attendee_on_hold": {
              "description": "Allow host to put attendee on hold",
              "example": false,
              "type": "boolean"
            },
            "annotation": {
              "description": "Annotation",
              "example": false,
              "type": "boolean"
            },
            "remote_control": {
              "description": "Remote control",
              "example": false,
              "type": "boolean"
            },
            "non_verbal_feedback": {
              "description": "Non-verbal feedback",
              "example": false,
              "type": "boolean"
            },
            "breakout_room": {
              "description": "Breakout room",
              "example": false,
              "type": "boolean"
            },
            "remote_support": {
              "description": "Remote support",
              "example": false,
              "type": "boolean"
            },
            "closed_caption": {
              "description": "Closed caption",
              "example": false,
              "type": "boolean"
            },
            "group_hd": {
              "description": "Group HD video",
              "example": false,
              "type": "boolean"
            },
            "virtual_background": {
              "description": "Virtual background",
              "example": false,
              "type": "boolean"
            },
            "far_end_camera_control": {
              "description": "Far end camera control",
              "example": false,
              "type": "boolean"
            },
            "share_dual_camera": {
              "description": "Share dual camera (Deprecated)",
              "example": false,
              "type": "boolean"
            },
            "attention_tracking": {
              "description": "Attention tracking",
              "example": false,
              "type": "boolean"
            },
            "waiting_room": {
              "description": "Waiting room",
              "example": false,
              "type": "boolean"
            }
          }
        },
        "email_notification": {
          "title": "email_notification91",
          "type": "object",
          "properties": {
            "jbh_reminder": {
              "description": "When attendees join meeting before host",
              "example": false,
              "type": "boolean"
            },
            "cancel_meeting_reminder": {
              "description": "When a meeting is cancelled",
              "example": false,
              "type": "boolean"
            },
            "alternative_host_reminder": {
              "description": "When an alternative host is set or removed from a meeting",
              "example": false,
              "type": "boolean"
            }
          }
        },
        "recording": {
          "title": "recording92",
          "type": "object",
          "properties": {
            "local_recording": {
              "description": "Local recording",
              "type": "boolean"
            },
            "cloud_recording": {
              "description": "Cloud recording",
              "example": false,
              "type": "boolean"
            },
            "record_speaker_view": {
              "description": "Record the active speaker view",
              "example": false,
              "type": "boolean"
            },
            "record_gallery_view": {
              "description": "Record the gallery view",
              "example": false,
              "type": "boolean"
            },
            "record_audio_file": {
              "description": "Record an audio only file",
              "example": false,
              "type": "boolean"
            },
            "save_chat_text": {
              "description": "Save chat text from the meeting",
              "example": false,
              "type": "boolean"
            },
            "show_timestamp": {
              "description": "Show timestamp on video",
              "example": false,
              "type": "boolean"
            },
            "recording_audio_transcript": {
              "description": "Audio transcript",
              "type": "boolean"
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "auto_delete_cmr": {
              "description": "Auto delete cloud recordings",
              "example": false,
              "type": "boolean"
            },
            "auto_delete_cmr_days": {
              "description": "A specified number of days of auto delete cloud recordings\n**minimum:** 1\n**maximum:** 10",
              "type": "integer",
              "minimum": 1,
              "maximum": 60,
              "format": "int32"
            }
          }
        },
        "telephony": {
          "title": "telephony94",
          "type": "object",
          "properties": {
            "third_party_audio": {
              "description": "3rd party audio conference",
              "type": "boolean"
            },
            "audio_conference_info": {
              "description": "3rd party audio conference info\n**max length:** 2048",
              "type": "string",
              "maxLength": 2048
            },
            "show_international_numbers_link": {
              "description": "Show international numbers link on the invitation email",
              "type": "boolean"
            }
          }
        },
        "feature": {
          "title": "feature105",
          "type": "object",
          "properties": {
            "meeting_capacity": {
              "description": "User’s meeting capacity",
              "type": "integer",
              "format": "int32"
            },
            "large_meeting": {
              "description": "Large meting feature",
              "type": "boolean"
            },
            "large_meeting_capacity": {
              "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
              "type": "integer",
              "format": "int32"
            },
            "webinar": {
              "description": "Webinar feature",
              "type": "boolean"
            },
            "webinar_capacity": {
              "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "Feature105": {
      "title": "feature105",
      "type": "object",
      "properties": {
        "meeting_capacity": {
          "description": "User’s meeting capacity",
          "type": "integer",
          "format": "int32"
        },
        "large_meeting": {
          "description": "Large meting feature",
          "type": "boolean"
        },
        "large_meeting_capacity": {
          "description": "Large meeting capacity, can be 100, 200, 300 or 500, depends on if having related large meeting capacity plan subscription or not",
          "type": "integer",
          "format": "int32"
        },
        "webinar": {
          "description": "Webinar feature",
          "type": "boolean"
        },
        "webinar_capacity": {
          "description": "Webinar capacity, can be 100, 500, 1000, 3000, 5000 or 10000, depends on if having related webinar capacity plan subscription or not",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Body270": {
      "title": "body270",
      "description": "User status",
      "type": "object",
      "properties": {
        "action": {
          "title": "action107",
          "example": "activate",
          "x-enum-elements": [
            {
              "name": "activate",
              "description": ""
            },
            {
              "name": "deactivate",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "activate",
            "deactivate"
          ]
        }
      },
      "required": [
        "action"
      ]
    },
    "Action107": {
      "title": "action107",
      "example": "activate",
      "x-enum-elements": [
        {
          "name": "activate",
          "description": ""
        },
        {
          "name": "deactivate",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "activate",
        "deactivate"
      ]
    },
    "Body272": {
      "title": "body272",
      "description": "User password",
      "type": "object",
      "properties": {
        "password": {
          "description": "User’s password. Character length is less than 32,",
          "type": "string"
        }
      },
      "required": [
        "password"
      ]
    },
    "UserPermissions": {
      "title": "UserPermissions",
      "description": "User permissions returned",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "List of user permissions",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Type110": {
      "title": "type110",
      "example": "token",
      "x-enum-elements": [
        {
          "name": "token",
          "description": ""
        },
        {
          "name": "zpk",
          "description": ""
        },
        {
          "name": "zak",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "token",
        "zpk",
        "zak"
      ]
    },
    "UserTokenResponse": {
      "title": "userTokenResponse",
      "description": "Token returned",
      "type": "object",
      "properties": {
        "token": {
          "description": "User ID",
          "type": "string"
        }
      }
    },
    "UserZPKResponse": {
      "title": "userZPKResponse",
      "description": "Success",
      "type": "object",
      "properties": {
        "expire_in": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "UserEmailResponse": {
      "title": "userEmailResponse",
      "description": "Success",
      "type": "object",
      "properties": {
        "existed_email": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "UserVanityNameResponse": {
      "title": "userVanityNameResponse",
      "description": "Success",
      "type": "object",
      "properties": {
        "existed": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "Type115": {
      "title": "type115",
      "example": "scheduled",
      "x-enum-elements": [
        {
          "name": "scheduled",
          "description": ""
        },
        {
          "name": "live",
          "description": ""
        },
        {
          "name": "upcoming",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "scheduled",
        "live",
        "upcoming"
      ]
    },
    "GroupList66": {
      "title": "Group List66",
      "description": "List of Meeting objects returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "meetings": {
          "description": "List of Meeting objects",
          "type": "array",
          "items": {
            "title": "Meeting",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Meeting unique ID",
                "type": "string"
              },
              "id": {
                "description": "Meeting ID, also know as meeting number",
                "type": "string"
              },
              "host_id": {
                "description": "ID of the user set as host of meeting",
                "type": "string"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "type": {
                "title": "type118",
                "example": 1,
                "x-enum-elements": [
                  {
                    "name": "Enum_1",
                    "description": ""
                  },
                  {
                    "name": "Enum_2",
                    "description": ""
                  },
                  {
                    "name": "Enum_3",
                    "description": ""
                  },
                  {
                    "name": "Enum_8",
                    "description": ""
                  }
                ],
                "type": "integer",
                "format": "int32",
                "enum": [
                  "1",
                  "2",
                  "3",
                  "8"
                ]
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "integer",
                "format": "int32"
              },
              "timezone": {
                "description": "Timezone to format start_time",
                "type": "string"
              },
              "created_at": {
                "description": "Create time",
                "type": "string",
                "format": "date-time"
              },
              "join_url": {
                "description": "Join url",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Meeting": {
      "title": "Meeting",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting unique ID",
          "type": "string"
        },
        "id": {
          "description": "Meeting ID, also know as meeting number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of meeting",
          "type": "string"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        }
      }
    },
    "Type118": {
      "title": "type118",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        },
        {
          "name": "Enum_8",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3",
        "8"
      ]
    },
    "Session": {
      "title": "Session",
      "description": "Meeting object",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration (minutes). Used for scheduled meetings only",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
          "type": "string"
        },
        "password": {
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
          "type": "string"
        },
        "agenda": {
          "description": "Meeting description",
          "type": "string"
        },
        "recurrence": {
          "title": "recurrence",
          "type": "object",
          "properties": {
            "type": {
              "title": "type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "repeat_interval": {
              "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
              "type": "integer",
              "format": "int32"
            },
            "weekly_days": {
              "title": "weekly_days",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
              "type": "integer",
              "format": "int32"
            },
            "monthly_week": {
              "title": "monthly_week",
              "example": -1,
              "x-enum-elements": [
                {
                  "name": "Enum_Minus1",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "-1",
                "1",
                "2",
                "3",
                "4"
              ]
            },
            "monthly_week_day": {
              "title": "monthly_week_day",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "end_times": {
              "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
              "example": 1,
              "type": "integer",
              "maximum": 50,
              "format": "int32"
            },
            "end_date_time": {
              "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "settings": {
          "title": "settings",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins meeting",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start video when participants join meeting",
              "type": "boolean"
            },
            "cn_meeting": {
              "description": "Host meeting in China",
              "example": false,
              "type": "boolean"
            },
            "in_meeting": {
              "description": "Host meeting in India",
              "example": false,
              "type": "boolean"
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "example": false,
              "type": "boolean"
            },
            "mute_upon_entry": {
              "description": "Mute participants upon entry",
              "example": false,
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "example": false,
              "type": "boolean"
            },
            "use_pmi": {
              "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
              "type": "string"
            }
          }
        }
      }
    },
    "Recurrence": {
      "title": "recurrence",
      "type": "object",
      "properties": {
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "repeat_interval": {
          "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
          "type": "integer",
          "format": "int32"
        },
        "weekly_days": {
          "title": "weekly_days",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_4",
              "description": ""
            },
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_7",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        },
        "monthly_day": {
          "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
          "type": "integer",
          "format": "int32"
        },
        "monthly_week": {
          "title": "monthly_week",
          "example": -1,
          "x-enum-elements": [
            {
              "name": "Enum_Minus1",
              "description": ""
            },
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_4",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "-1",
            "1",
            "2",
            "3",
            "4"
          ]
        },
        "monthly_week_day": {
          "title": "monthly_week_day",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_4",
              "description": ""
            },
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_7",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "4",
            "5",
            "6",
            "7"
          ]
        },
        "end_times": {
          "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
          "example": 1,
          "type": "integer",
          "maximum": 50,
          "format": "int32"
        },
        "end_date_time": {
          "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "WeeklyDays": {
      "title": "weekly_days",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        },
        {
          "name": "Enum_4",
          "description": ""
        },
        {
          "name": "Enum_5",
          "description": ""
        },
        {
          "name": "Enum_6",
          "description": ""
        },
        {
          "name": "Enum_7",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "MonthlyWeek": {
      "title": "monthly_week",
      "example": -1,
      "x-enum-elements": [
        {
          "name": "Enum_Minus1",
          "description": ""
        },
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        },
        {
          "name": "Enum_4",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "-1",
        "1",
        "2",
        "3",
        "4"
      ]
    },
    "MonthlyWeekDay": {
      "title": "monthly_week_day",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        },
        {
          "name": "Enum_4",
          "description": ""
        },
        {
          "name": "Enum_5",
          "description": ""
        },
        {
          "name": "Enum_6",
          "description": ""
        },
        {
          "name": "Enum_7",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7"
      ]
    },
    "Settings": {
      "title": "settings",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Start video when host joins meeting",
          "type": "boolean"
        },
        "participant_video": {
          "description": "Start video when participants join meeting",
          "type": "boolean"
        },
        "cn_meeting": {
          "description": "Host meeting in China",
          "example": false,
          "type": "boolean"
        },
        "in_meeting": {
          "description": "Host meeting in India",
          "example": false,
          "type": "boolean"
        },
        "join_before_host": {
          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
          "example": false,
          "type": "boolean"
        },
        "mute_upon_entry": {
          "description": "Mute participants upon entry",
          "example": false,
          "type": "boolean"
        },
        "watermark": {
          "description": "Add watermark when viewing shared screen",
          "example": false,
          "type": "boolean"
        },
        "use_pmi": {
          "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "example": false,
          "type": "boolean"
        },
        "approval_type": {
          "title": "approval_type",
          "example": 0,
          "x-enum-elements": [
            {
              "name": "Enum_0",
              "description": ""
            },
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "registration_type": {
          "title": "registration_type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "audio": {
          "title": "Audio",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip"
          ]
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "enforce_login": {
          "description": "Only signed-in users can join this meeting",
          "type": "boolean"
        },
        "enforce_login_domains": {
          "description": "Only signed-in users with specified domains can join meetings",
          "type": "string"
        },
        "alternative_hosts": {
          "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
          "type": "string"
        }
      }
    },
    "ApprovalType": {
      "title": "approval_type",
      "example": 0,
      "x-enum-elements": [
        {
          "name": "Enum_0",
          "description": ""
        },
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "0",
        "1",
        "2"
      ]
    },
    "RegistrationType": {
      "title": "registration_type",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        },
        {
          "name": "Enum_2",
          "description": ""
        },
        {
          "name": "Enum_3",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1",
        "2",
        "3"
      ]
    },
    "Audio": {
      "title": "Audio",
      "example": "both",
      "x-enum-elements": [
        {
          "name": "both",
          "description": ""
        },
        {
          "name": "telephony",
          "description": ""
        },
        {
          "name": "voip",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "both",
        "telephony",
        "voip"
      ]
    },
    "MeetingCreateResponse": {
      "title": "meetingCreateResponse",
      "description": "Meeting Created",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting unique ID",
          "type": "string"
        },
        "id": {
          "description": "Meeting ID, also known as meeting number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of meeting",
          "type": "string"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "agenda": {
          "description": "Agenda",
          "type": "string"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "password": {
          "description": "Meeting password",
          "type": "string"
        },
        "h323_password": {
          "description": "H.323/SIP room system password",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins meeting",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start video when participants join meeting",
              "type": "boolean"
            },
            "cn_meeting": {
              "description": "Host meeting in China",
              "example": false,
              "type": "boolean"
            },
            "in_meeting": {
              "description": "Host meeting in India",
              "example": false,
              "type": "boolean"
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "example": false,
              "type": "boolean"
            },
            "mute_upon_entry": {
              "description": "Mute participants upon entry",
              "example": false,
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "example": false,
              "type": "boolean"
            },
            "use_pmi": {
              "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
              "type": "string"
            }
          }
        }
      }
    },
    "Occurrence": {
      "title": "Occurrence",
      "description": "Occurence object",
      "type": "object",
      "properties": {
        "occurrence_id": {
          "description": "Occurrence Id",
          "type": "integer",
          "format": "int32"
        },
        "start_time": {
          "description": "Start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration",
          "type": "integer",
          "format": "int32"
        },
        "status": {
          "description": "Occurrence status",
          "type": "string"
        }
      }
    },
    "MeetingResponse": {
      "title": "meetingResponse",
      "description": "Meeting object returned",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting unique ID",
          "type": "string"
        },
        "id": {
          "description": "Meeting ID, also know as meeting number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of meeting",
          "type": "string"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "agenda": {
          "description": "Agenda",
          "type": "string"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "password": {
          "description": "Meeting password",
          "type": "string"
        },
        "h323_password": {
          "description": "H.323/SIP room system password",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins meeting",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start video when participants join meeting",
              "type": "boolean"
            },
            "cn_meeting": {
              "description": "Host meeting in China",
              "example": false,
              "type": "boolean"
            },
            "in_meeting": {
              "description": "Host meeting in India",
              "example": false,
              "type": "boolean"
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "example": false,
              "type": "boolean"
            },
            "mute_upon_entry": {
              "description": "Mute participants upon entry",
              "example": false,
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "example": false,
              "type": "boolean"
            },
            "use_pmi": {
              "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
              "type": "string"
            }
          }
        }
      }
    },
    "SessionUpdate": {
      "title": "SessionUpdate",
      "description": "Meeting",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss'Z'\", always use GMT time. When using a format like \"yyyy-MM-dd'T'HH:mm:ss\", you should use local time and you will need to specify the time zone. Only used for scheduled meetings and recurring meetings with fixed time.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration (minutes). Used for scheduled meetings only",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
          "type": "string"
        },
        "password": {
          "description": "Password to join the meeting. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
          "type": "string"
        },
        "agenda": {
          "description": "Meeting description",
          "type": "string"
        },
        "recurrence": {
          "title": "recurrence",
          "type": "object",
          "properties": {
            "type": {
              "title": "type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "repeat_interval": {
              "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
              "type": "integer",
              "format": "int32"
            },
            "weekly_days": {
              "title": "weekly_days",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
              "type": "integer",
              "format": "int32"
            },
            "monthly_week": {
              "title": "monthly_week",
              "example": -1,
              "x-enum-elements": [
                {
                  "name": "Enum_Minus1",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "-1",
                "1",
                "2",
                "3",
                "4"
              ]
            },
            "monthly_week_day": {
              "title": "monthly_week_day",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "end_times": {
              "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
              "example": 1,
              "type": "integer",
              "maximum": 50,
              "format": "int32"
            },
            "end_date_time": {
              "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "settings": {
          "title": "settings154",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins meeting",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start video when participants join meeting",
              "type": "boolean"
            },
            "cn_meeting": {
              "description": "Host meeting in China",
              "example": false,
              "type": "boolean"
            },
            "in_meeting": {
              "description": "Host meeting in India",
              "example": false,
              "type": "boolean"
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "example": false,
              "type": "boolean"
            },
            "mute_upon_entry": {
              "description": "Mute participants upon entry",
              "example": false,
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "example": false,
              "type": "boolean"
            },
            "use_pmi": {
              "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
              "type": "string"
            },
            "registrants_confirmation_email": {
              "description": "Send confirmation Email to Registrants",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Settings154": {
      "title": "settings154",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Start video when host joins meeting",
          "type": "boolean"
        },
        "participant_video": {
          "description": "Start video when participants join meeting",
          "type": "boolean"
        },
        "cn_meeting": {
          "description": "Host meeting in China",
          "example": false,
          "type": "boolean"
        },
        "in_meeting": {
          "description": "Host meeting in India",
          "example": false,
          "type": "boolean"
        },
        "join_before_host": {
          "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
          "example": false,
          "type": "boolean"
        },
        "mute_upon_entry": {
          "description": "Mute participants upon entry",
          "example": false,
          "type": "boolean"
        },
        "watermark": {
          "description": "Add watermark when viewing shared screen",
          "example": false,
          "type": "boolean"
        },
        "use_pmi": {
          "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
          "example": false,
          "type": "boolean"
        },
        "approval_type": {
          "title": "approval_type",
          "example": 0,
          "x-enum-elements": [
            {
              "name": "Enum_0",
              "description": ""
            },
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "registration_type": {
          "title": "registration_type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "audio": {
          "title": "Audio",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip"
          ]
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "enforce_login": {
          "description": "Only signed-in users can join this meeting",
          "type": "boolean"
        },
        "enforce_login_domains": {
          "description": "Only signed-in users with specified domains can join meetings",
          "type": "string"
        },
        "alternative_hosts": {
          "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
          "type": "string"
        },
        "registrants_confirmation_email": {
          "description": "Send confirmation Email to Registrants",
          "type": "boolean"
        }
      }
    },
    "Body190": {
      "title": "body190",
      "description": "`recover` recover meeting recording",
      "type": "object",
      "properties": {
        "action": {
          "description": "",
          "example": "end",
          "type": "string"
        }
      }
    },
    "Status": {
      "title": "status",
      "example": "pending",
      "x-enum-elements": [
        {
          "name": "pending",
          "description": ""
        },
        {
          "name": "approved",
          "description": ""
        },
        {
          "name": "denied",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "pending",
        "approved",
        "denied"
      ]
    },
    "RegistrationList": {
      "title": "Registration List",
      "description": "Success",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "registrants": {
          "description": "List of Registrant objects",
          "type": "array",
          "items": {
            "title": "Registrant75",
            "type": "object",
            "properties": {
              "id": {
                "description": "",
                "type": "string"
              },
              "status": {
                "description": "",
                "type": "string"
              },
              "create_time": {
                "description": "",
                "type": "string",
                "format": "date-time"
              },
              "join_url": {
                "description": "",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Registrant75": {
      "title": "Registrant75",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "create_time": {
          "description": "",
          "type": "string",
          "format": "date-time"
        },
        "join_url": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Registrant": {
      "title": "Registrant",
      "description": "Registrant base object",
      "type": "object",
      "properties": {
        "email": {
          "description": "A valid email address",
          "type": "string"
        },
        "first_name": {
          "description": "User’s first name",
          "type": "string"
        },
        "last_name": {
          "description": "User’s last name",
          "type": "string"
        },
        "address": {
          "description": "Address",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "country": {
          "description": "Country",
          "type": "string"
        },
        "zip": {
          "description": "Zip/Postal Code",
          "type": "string"
        },
        "state": {
          "description": "State/Province",
          "type": "string"
        },
        "phone": {
          "description": "Phone",
          "type": "string"
        },
        "industry": {
          "description": "Industry",
          "type": "string"
        },
        "org": {
          "description": "Organization",
          "type": "string"
        },
        "job_title": {
          "description": "Job Title",
          "type": "string"
        },
        "purchasing_time_frame": {
          "title": "purchasing_time_frame",
          "example": "Within a month",
          "x-enum-elements": [
            {
              "name": "Enum_Within a month",
              "description": ""
            },
            {
              "name": "Enum_1-3 months",
              "description": ""
            },
            {
              "name": "Enum_4-6 months",
              "description": ""
            },
            {
              "name": "Enum_More than 6 months",
              "description": ""
            },
            {
              "name": "Enum_No timeframe",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "Within a month",
            "1-3 months",
            "4-6 months",
            "More than 6 months",
            "No timeframe"
          ]
        },
        "role_in_purchase_process": {
          "title": "role_in_purchase_process",
          "example": "Decision Maker",
          "x-enum-elements": [
            {
              "name": "Enum_Decision Maker",
              "description": ""
            },
            {
              "name": "Enum_EvaluatorRecommender",
              "description": ""
            },
            {
              "name": "Influencer",
              "description": ""
            },
            {
              "name": "Enum_Not involved",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "Decision Maker",
            "Evaluator/Recommender",
            "Influencer",
            "Not involved"
          ]
        },
        "no_of_employees": {
          "title": "no_of_employees",
          "example": "1-20",
          "x-enum-elements": [
            {
              "name": "Enum_120",
              "description": ""
            },
            {
              "name": "Enum_2150",
              "description": ""
            },
            {
              "name": "Enum_51100",
              "description": ""
            },
            {
              "name": "Enum_101500",
              "description": ""
            },
            {
              "name": "Enum_5001000",
              "description": ""
            },
            {
              "name": "Enum_10015000",
              "description": ""
            },
            {
              "name": "Enum_500110000",
              "description": ""
            },
            {
              "name": "Enum_More than 10,000",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "1-20",
            "21-50",
            "51-100",
            "101-500",
            "500-1,000",
            "1,001-5,000",
            "5,001-10,000",
            "More than 10,000"
          ]
        },
        "comments": {
          "description": "Questions & Comments",
          "type": "string"
        },
        "custom_questions": {
          "description": "Custom Questions",
          "type": "array",
          "items": {
            "title": "custom_questions",
            "description": "Custom Question",
            "type": "object",
            "properties": {
              "title": {
                "description": "",
                "type": "string"
              },
              "value": {
                "description": "",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "email",
        "first_name",
        "last_name"
      ]
    },
    "PurchasingTimeFrame": {
      "title": "purchasing_time_frame",
      "example": "Within a month",
      "x-enum-elements": [
        {
          "name": "Enum_Within a month",
          "description": ""
        },
        {
          "name": "Enum_1-3 months",
          "description": ""
        },
        {
          "name": "Enum_4-6 months",
          "description": ""
        },
        {
          "name": "Enum_More than 6 months",
          "description": ""
        },
        {
          "name": "Enum_No timeframe",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "Within a month",
        "1-3 months",
        "4-6 months",
        "More than 6 months",
        "No timeframe"
      ]
    },
    "RoleInPurchaseProcess": {
      "title": "role_in_purchase_process",
      "example": "Decision Maker",
      "x-enum-elements": [
        {
          "name": "Enum_Decision Maker",
          "description": ""
        },
        {
          "name": "Enum_EvaluatorRecommender",
          "description": ""
        },
        {
          "name": "Influencer",
          "description": ""
        },
        {
          "name": "Enum_Not involved",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "Decision Maker",
        "Evaluator/Recommender",
        "Influencer",
        "Not involved"
      ]
    },
    "NoOfEmployees": {
      "title": "no_of_employees",
      "example": "1-20",
      "x-enum-elements": [
        {
          "name": "Enum_120",
          "description": ""
        },
        {
          "name": "Enum_2150",
          "description": ""
        },
        {
          "name": "Enum_51100",
          "description": ""
        },
        {
          "name": "Enum_101500",
          "description": ""
        },
        {
          "name": "Enum_5001000",
          "description": ""
        },
        {
          "name": "Enum_10015000",
          "description": ""
        },
        {
          "name": "Enum_500110000",
          "description": ""
        },
        {
          "name": "Enum_More than 10,000",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "1-20",
        "21-50",
        "51-100",
        "101-500",
        "500-1,000",
        "1,001-5,000",
        "5,001-10,000",
        "More than 10,000"
      ]
    },
    "CustomQuestions": {
      "title": "custom_questions",
      "description": "Custom Question",
      "type": "object",
      "properties": {
        "title": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "MeetingRegistrantCreateResponse": {
      "title": "meetingRegistrantCreateResponse",
      "description": "Registration created",
      "type": "object",
      "properties": {
        "registrant_id": {
          "description": "Registrant ID",
          "type": "string"
        },
        "id": {
          "description": "Registrant ID",
          "type": "string"
        },
        "topic": {
          "description": "Topic",
          "type": "string"
        },
        "start_time": {
          "description": "Start time",
          "type": "string",
          "format": "date-time"
        },
        "join_url": {
          "description": "Join URL for this registrant",
          "type": "string"
        }
      }
    },
    "RegistrantStatus": {
      "title": "RegistrantStatus",
      "description": "Registrant Status",
      "type": "object",
      "properties": {
        "action": {
          "title": "action170",
          "example": "approve",
          "x-enum-elements": [
            {
              "name": "approve",
              "description": ""
            },
            {
              "name": "cancel",
              "description": ""
            },
            {
              "name": "deny",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "approve",
            "cancel",
            "deny"
          ]
        },
        "registrants": {
          "description": "List of registrants",
          "type": "array",
          "items": {
            "title": "Registrant95",
            "type": "object",
            "properties": {
              "id": {
                "description": "",
                "type": "string"
              },
              "email": {
                "description": "",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "action"
      ]
    },
    "Action170": {
      "title": "action170",
      "example": "approve",
      "x-enum-elements": [
        {
          "name": "approve",
          "description": ""
        },
        {
          "name": "cancel",
          "description": ""
        },
        {
          "name": "deny",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "approve",
        "cancel",
        "deny"
      ]
    },
    "Registrant95": {
      "title": "Registrant95",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        }
      }
    },
    "PastMeetingDetailsResponse": {
      "title": "pastMeetingDetailsResponse",
      "description": "Meeting detail Returned",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "host_id": {
          "description": "Host ID",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "user_email": {
          "description": "User email",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total_minutes": {
          "description": "Number of meeting minutes",
          "type": "integer",
          "format": "int32"
        },
        "participants_count": {
          "description": "Number of meeting participants",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PastMeetingParticipantsResponse": {
      "title": "pastMeetingParticipantsResponse",
      "description": "Meeting Participants Report Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of meeting participant objects",
          "type": "array",
          "items": {
            "title": "Participant",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string",
                "format": "uuid"
              },
              "name": {
                "description": "Participant display name",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Participant": {
      "title": "Participant",
      "type": "object",
      "properties": {
        "id": {
          "description": "Participant UUID",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "description": "Participant display name",
          "type": "string"
        }
      }
    },
    "UserList142": {
      "title": "User List142",
      "description": "List of Webinar objects returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "webinars": {
          "description": "List of Webinar objects",
          "type": "array",
          "items": {
            "title": "Webinar",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Webinar unique ID",
                "type": "string"
              },
              "id": {
                "description": "Webinar ID, also know as webinar number",
                "type": "string"
              },
              "host_id": {
                "description": "ID of the user set as host of webinar",
                "type": "string"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "type": {
                "title": "type177",
                "example": 5,
                "x-enum-elements": [
                  {
                    "name": "Enum_5",
                    "description": ""
                  },
                  {
                    "name": "Enum_6",
                    "description": ""
                  },
                  {
                    "name": "Enum_9",
                    "description": ""
                  }
                ],
                "type": "integer",
                "format": "int32",
                "enum": [
                  "5",
                  "6",
                  "9"
                ]
              },
              "duration": {
                "description": "Meeting duration",
                "type": "integer",
                "format": "int32"
              },
              "timezone": {
                "description": "Timezone to format start_time",
                "type": "string"
              },
              "created_at": {
                "description": "Create time",
                "type": "string",
                "format": "date-time"
              },
              "join_url": {
                "description": "Join url",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Webinar": {
      "title": "Webinar",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Webinar unique ID",
          "type": "string"
        },
        "id": {
          "description": "Webinar ID, also know as webinar number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of webinar",
          "type": "string"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        }
      }
    },
    "Type177": {
      "title": "type177",
      "example": 5,
      "x-enum-elements": [
        {
          "name": "Enum_5",
          "description": ""
        },
        {
          "name": "Enum_6",
          "description": ""
        },
        {
          "name": "Enum_9",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "5",
        "6",
        "9"
      ]
    },
    "SessionWebinar": {
      "title": "SessionWebinar",
      "description": "User",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "start_time": {
          "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration (minutes). Used for scheduled webinar only",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
          "type": "string"
        },
        "password": {
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
          "type": "string"
        },
        "agenda": {
          "description": "Webinar description",
          "type": "string"
        },
        "recurrence": {
          "title": "recurrence",
          "type": "object",
          "properties": {
            "type": {
              "title": "type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "repeat_interval": {
              "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
              "type": "integer",
              "format": "int32"
            },
            "weekly_days": {
              "title": "weekly_days",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
              "type": "integer",
              "format": "int32"
            },
            "monthly_week": {
              "title": "monthly_week",
              "example": -1,
              "x-enum-elements": [
                {
                  "name": "Enum_Minus1",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "-1",
                "1",
                "2",
                "3",
                "4"
              ]
            },
            "monthly_week_day": {
              "title": "monthly_week_day",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "end_times": {
              "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
              "example": 1,
              "type": "integer",
              "maximum": 50,
              "format": "int32"
            },
            "end_date_time": {
              "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "settings": {
          "title": "settings185",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins webinar",
              "type": "boolean"
            },
            "panelists_video": {
              "description": "Start video when panelists join webinar",
              "type": "boolean"
            },
            "practice_session": {
              "description": "Enable Practice Session",
              "example": false,
              "type": "boolean"
            },
            "hd_video": {
              "description": "Default to HD Video",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
              "type": "string"
            },
            "close_registration": {
              "description": "Close registration after event date",
              "type": "boolean"
            },
            "show_share_button": {
              "description": "Show social share buttons on registration page",
              "type": "boolean"
            },
            "allow_multiple_devices": {
              "description": "Allow attendees to join from multiple devices",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Settings185": {
      "title": "settings185",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Start video when host joins webinar",
          "type": "boolean"
        },
        "panelists_video": {
          "description": "Start video when panelists join webinar",
          "type": "boolean"
        },
        "practice_session": {
          "description": "Enable Practice Session",
          "example": false,
          "type": "boolean"
        },
        "hd_video": {
          "description": "Default to HD Video",
          "example": false,
          "type": "boolean"
        },
        "approval_type": {
          "title": "approval_type",
          "example": 0,
          "x-enum-elements": [
            {
              "name": "Enum_0",
              "description": ""
            },
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "registration_type": {
          "title": "registration_type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "audio": {
          "title": "Audio",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip"
          ]
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "enforce_login": {
          "description": "Only signed-in users can join this meeting",
          "type": "boolean"
        },
        "enforce_login_domains": {
          "description": "Only signed-in users with specified domains can join meetings",
          "type": "string"
        },
        "alternative_hosts": {
          "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
          "type": "string"
        },
        "close_registration": {
          "description": "Close registration after event date",
          "type": "boolean"
        },
        "show_share_button": {
          "description": "Show social share buttons on registration page",
          "type": "boolean"
        },
        "allow_multiple_devices": {
          "description": "Allow attendees to join from multiple devices",
          "type": "boolean"
        }
      }
    },
    "WebinarCreateResponse": {
      "title": "webinarCreateResponse",
      "description": "Webinar Created",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Webinar unique ID",
          "type": "string"
        },
        "id": {
          "description": "Webinar ID, also known as Webinar number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of Webinar",
          "type": "string"
        },
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "agenda": {
          "description": "Webinar agenda",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings185",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins webinar",
              "type": "boolean"
            },
            "panelists_video": {
              "description": "Start video when panelists join webinar",
              "type": "boolean"
            },
            "practice_session": {
              "description": "Enable Practice Session",
              "example": false,
              "type": "boolean"
            },
            "hd_video": {
              "description": "Default to HD Video",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
              "type": "string"
            },
            "close_registration": {
              "description": "Close registration after event date",
              "type": "boolean"
            },
            "show_share_button": {
              "description": "Show social share buttons on registration page",
              "type": "boolean"
            },
            "allow_multiple_devices": {
              "description": "Allow attendees to join from multiple devices",
              "type": "boolean"
            }
          }
        }
      }
    },
    "WebinarResponse": {
      "title": "webinarResponse",
      "description": "Webinar object returned",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Webinar unique ID",
          "type": "string"
        },
        "id": {
          "description": "Webinar ID, also know as webinar number",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of webinar",
          "type": "string"
        },
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "agenda": {
          "description": "Webinar agenda",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings185",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins webinar",
              "type": "boolean"
            },
            "panelists_video": {
              "description": "Start video when panelists join webinar",
              "type": "boolean"
            },
            "practice_session": {
              "description": "Enable Practice Session",
              "example": false,
              "type": "boolean"
            },
            "hd_video": {
              "description": "Default to HD Video",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
              "type": "string"
            },
            "close_registration": {
              "description": "Close registration after event date",
              "type": "boolean"
            },
            "show_share_button": {
              "description": "Show social share buttons on registration page",
              "type": "boolean"
            },
            "allow_multiple_devices": {
              "description": "Allow attendees to join from multiple devices",
              "type": "boolean"
            }
          }
        }
      }
    },
    "SessionWebinarUpdate": {
      "title": "SessionWebinarUpdate",
      "description": "Webinar",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "start_time": {
          "description": "Webinar start time, in the format \"yyyy-MM-dd'T'HH:mm:ss'Z'\", should be GMT time. In the format \"yyyy-MM-dd'T'HH:mm:ss\", should be local time, need to specify the time zone. Only used for scheduled webinar and recurring webinar with fixed time.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration (minutes). Used for scheduled webinar only",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time. For example, \"America/Los_Angeles\". For scheduled meetings only. Please reference our [timezone](#timezones) list for supported timezones and their formats.",
          "type": "string"
        },
        "password": {
          "description": "Webinar password. Password may only contain the following characters: [a-z A-Z 0-9 @ - _ *]. Max of 10 characters.",
          "type": "string"
        },
        "agenda": {
          "description": "Webinar description",
          "type": "string"
        },
        "recurrence": {
          "title": "recurrence",
          "type": "object",
          "properties": {
            "type": {
              "title": "type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "repeat_interval": {
              "description": "At which interval should the meeting repeat? For a daily meeting, max of 90 days. For a weekly meeting, max of 12 weeks. For a monthly meeting, max of 3 months.",
              "type": "integer",
              "format": "int32"
            },
            "weekly_days": {
              "title": "weekly_days",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "monthly_day": {
              "description": "Day of the month for the meeting to be scheduled. The value range is from 1 to 31.",
              "type": "integer",
              "format": "int32"
            },
            "monthly_week": {
              "title": "monthly_week",
              "example": -1,
              "x-enum-elements": [
                {
                  "name": "Enum_Minus1",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "-1",
                "1",
                "2",
                "3",
                "4"
              ]
            },
            "monthly_week_day": {
              "title": "monthly_week_day",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                },
                {
                  "name": "Enum_4",
                  "description": ""
                },
                {
                  "name": "Enum_5",
                  "description": ""
                },
                {
                  "name": "Enum_6",
                  "description": ""
                },
                {
                  "name": "Enum_7",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7"
              ]
            },
            "end_times": {
              "description": "Select how many times the meeting will occur before it is canceled. (Cannot be used with \"end_date_time\".)\n**maximum:** 50",
              "example": 1,
              "type": "integer",
              "maximum": 50,
              "format": "int32"
            },
            "end_date_time": {
              "description": "Select a date the meeting will occur before it is canceled.. Should be UTC time, such as 2017-11-25T12:00:00Z. (Cannot be used with \"end_times\".)",
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "settings": {
          "title": "settings213",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins webinar",
              "type": "boolean"
            },
            "panelists_video": {
              "description": "Start video when panelists join webinar",
              "type": "boolean"
            },
            "practice_session": {
              "description": "Enable Practice Session",
              "example": false,
              "type": "boolean"
            },
            "hd_video": {
              "description": "Default to HD Video",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
              "type": "string"
            },
            "close_registration": {
              "description": "Close registration after event date",
              "type": "boolean"
            },
            "show_share_button": {
              "description": "Show social share buttons on registration page",
              "type": "boolean"
            },
            "allow_multiple_devices": {
              "description": "Allow attendees to join from multiple devices",
              "type": "boolean"
            },
            "registrants_confirmation_email": {
              "description": "Send confirmation Email to Registrants",
              "type": "boolean"
            }
          }
        }
      }
    },
    "Settings213": {
      "title": "settings213",
      "type": "object",
      "properties": {
        "host_video": {
          "description": "Start video when host joins webinar",
          "type": "boolean"
        },
        "panelists_video": {
          "description": "Start video when panelists join webinar",
          "type": "boolean"
        },
        "practice_session": {
          "description": "Enable Practice Session",
          "example": false,
          "type": "boolean"
        },
        "hd_video": {
          "description": "Default to HD Video",
          "example": false,
          "type": "boolean"
        },
        "approval_type": {
          "title": "approval_type",
          "example": 0,
          "x-enum-elements": [
            {
              "name": "Enum_0",
              "description": ""
            },
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "0",
            "1",
            "2"
          ]
        },
        "registration_type": {
          "title": "registration_type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "audio": {
          "title": "Audio",
          "example": "both",
          "x-enum-elements": [
            {
              "name": "both",
              "description": ""
            },
            {
              "name": "telephony",
              "description": ""
            },
            {
              "name": "voip",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "both",
            "telephony",
            "voip"
          ]
        },
        "auto_recording": {
          "title": "auto_recording",
          "example": "local",
          "x-enum-elements": [
            {
              "name": "local",
              "description": ""
            },
            {
              "name": "cloud",
              "description": ""
            },
            {
              "name": "none",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "local",
            "cloud",
            "none"
          ]
        },
        "enforce_login": {
          "description": "Only signed-in users can join this meeting",
          "type": "boolean"
        },
        "enforce_login_domains": {
          "description": "Only signed-in users with specified domains can join meetings",
          "type": "string"
        },
        "alternative_hosts": {
          "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
          "type": "string"
        },
        "close_registration": {
          "description": "Close registration after event date",
          "type": "boolean"
        },
        "show_share_button": {
          "description": "Show social share buttons on registration page",
          "type": "boolean"
        },
        "allow_multiple_devices": {
          "description": "Allow attendees to join from multiple devices",
          "type": "boolean"
        },
        "registrants_confirmation_email": {
          "description": "Send confirmation Email to Registrants",
          "type": "boolean"
        }
      }
    },
    "Body284": {
      "title": "body284",
      "description": "`end` end a webinar",
      "type": "object",
      "properties": {
        "status": {
          "description": "",
          "example": "end",
          "type": "string"
        }
      }
    },
    "PanelistList": {
      "title": "Panelist List",
      "description": "Success",
      "type": "object",
      "properties": {
        "total_records": {
          "description": "Total records",
          "type": "integer",
          "format": "int32"
        },
        "panelists": {
          "description": "List of Panelist objects",
          "type": "array",
          "items": {
            "title": "Panelist82",
            "type": "object",
            "properties": {
              "id": {
                "description": "Panelist's ID",
                "type": "string"
              },
              "name": {
                "description": "Panelist's full name",
                "type": "string"
              },
              "email": {
                "description": "Panelist's email",
                "type": "string"
              },
              "join_url": {
                "description": "Join url",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Panelist82": {
      "title": "Panelist82",
      "type": "object",
      "properties": {
        "id": {
          "description": "Panelist's ID",
          "type": "string"
        },
        "name": {
          "description": "Panelist's full name",
          "type": "string"
        },
        "email": {
          "description": "Panelist's email",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        }
      }
    },
    "WebinarPanelist": {
      "title": "WebinarPanelist",
      "description": "Webinar panelist",
      "type": "object",
      "properties": {
        "panelists": {
          "description": "List of Panelist objects",
          "type": "array",
          "items": {
            "title": "Panelist",
            "description": "Panelist base object",
            "type": "object",
            "properties": {
              "name": {
                "description": "Panelist's full name",
                "type": "string"
              },
              "email": {
                "description": "Panelist's email",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Panelist": {
      "title": "Panelist",
      "description": "Panelist base object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Panelist's full name",
          "type": "string"
        },
        "email": {
          "description": "Panelist's email",
          "type": "string"
        }
      }
    },
    "WebinarPanelistCreateResponse": {
      "title": "webinarPanelistCreateResponse",
      "description": "Panelist created",
      "type": "object",
      "properties": {
        "id": {
          "description": "Panelist ID",
          "type": "string"
        },
        "join_url": {
          "description": "Join URL for this panelist",
          "type": "string"
        }
      }
    },
    "WebinarRegistrantCreateResponse": {
      "title": "webinarRegistrantCreateResponse",
      "description": "Registration created",
      "type": "object",
      "properties": {
        "registrant_id": {
          "description": "Registrant ID",
          "type": "string"
        },
        "id": {
          "description": "Registrant ID",
          "type": "string"
        },
        "topic": {
          "description": "Topic",
          "type": "string"
        },
        "start_time": {
          "description": "Start time",
          "type": "string",
          "format": "date-time"
        },
        "join_url": {
          "description": "Join URL for this registrant",
          "type": "string"
        }
      }
    },
    "Body288": {
      "title": "body288",
      "type": "object",
      "properties": {
        "action": {
          "title": "action170",
          "example": "approve",
          "x-enum-elements": [
            {
              "name": "approve",
              "description": ""
            },
            {
              "name": "cancel",
              "description": ""
            },
            {
              "name": "deny",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "approve",
            "cancel",
            "deny"
          ]
        },
        "registrants": {
          "description": "List of registrants",
          "type": "array",
          "items": {
            "title": "Registrant95",
            "type": "object",
            "properties": {
              "id": {
                "description": "",
                "type": "string"
              },
              "email": {
                "description": "",
                "type": "string"
              }
            }
          }
        }
      },
      "required": [
        "action"
      ]
    },
    "WebinarInstances": {
      "title": "Webinar instances",
      "description": "List of ended webinar instances",
      "type": "object",
      "properties": {
        "webinars": {
          "description": "List of ended webinar instances.",
          "type": "array",
          "items": {
            "title": "Webinar146",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "WebinarUUID",
                "type": "string"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "Webinar146": {
      "title": "Webinar146",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "WebinarUUID",
          "type": "string"
        },
        "start_time": {
          "description": "Start time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "GroupList": {
      "title": "GroupList",
      "description": "List of groups returned",
      "type": "object",
      "properties": {
        "total_records": {
          "description": "Total records",
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "description": "List of Group objects",
          "type": "array",
          "items": {
            "title": "Group37",
            "type": "object",
            "properties": {
              "id": {
                "description": "Group ID",
                "type": "string"
              },
              "name": {
                "description": "Group name",
                "type": "string"
              },
              "total_members": {
                "description": "Total number of members in this group",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "Group37": {
      "title": "Group37",
      "type": "object",
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Total number of members in this group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Body162": {
      "title": "body162",
      "type": "object",
      "properties": {
        "name": {
          "description": "Group name",
          "type": "string"
        }
      }
    },
    "GroupCreateResponse": {
      "title": "groupCreateResponse",
      "description": "Group created",
      "type": "object",
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Group member count",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupResponse": {
      "title": "groupResponse",
      "description": "Group object returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Total number of members in this group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "GroupMemberList": {
      "title": "Group Member List",
      "description": "Group member list returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "members": {
          "description": "List of Group member objects",
          "type": "array",
          "items": {
            "title": "GroupMember",
            "description": "Group member object",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "first_name": {
                "description": "User first name",
                "type": "string"
              },
              "last_name": {
                "description": "User last name",
                "type": "string"
              },
              "type": {
                "description": "User type",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "GroupMember": {
      "title": "GroupMember",
      "description": "Group member object",
      "type": "object",
      "properties": {
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "first_name": {
          "description": "User first name",
          "type": "string"
        },
        "last_name": {
          "description": "User last name",
          "type": "string"
        },
        "type": {
          "description": "User type",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Body166": {
      "title": "body166",
      "type": "object",
      "properties": {
        "members": {
          "description": "List of Group members",
          "type": "array",
          "items": {
            "title": "Member",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID",
                "type": "string"
              },
              "email": {
                "description": "User email. If ID given, email is ignored.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Member": {
      "title": "Member",
      "type": "object",
      "properties": {
        "id": {
          "description": "User ID",
          "type": "string"
        },
        "email": {
          "description": "User email. If ID given, email is ignored.",
          "type": "string"
        }
      }
    },
    "GroupMembersCreateResponse": {
      "title": "groupMembersCreateResponse",
      "description": "Member added",
      "type": "object",
      "properties": {
        "ids": {
          "description": "",
          "type": "string"
        },
        "added_at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ImGroupList": {
      "title": "IM Group List",
      "description": "List of IM Groups returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "groups": {
          "description": "List of Group objects",
          "type": "array",
          "items": {
            "title": "Group43",
            "type": "object",
            "properties": {
              "id": {
                "description": "IM Group ID",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Group43": {
      "title": "Group43",
      "type": "object",
      "properties": {
        "id": {
          "description": "IM Group ID",
          "type": "string"
        }
      }
    },
    "Body172": {
      "title": "body172",
      "type": "object",
      "properties": {
        "name": {
          "description": "Group name, must be unique in one account\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "type": {
          "title": "type252",
          "example": "normal",
          "x-enum-elements": [
            {
              "name": "normal",
              "description": ""
            },
            {
              "name": "shared",
              "description": ""
            },
            {
              "name": "restricted",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "normal",
            "shared",
            "restricted"
          ]
        },
        "search_by_domain": {
          "description": "Members can search others in the same email domain",
          "type": "boolean"
        },
        "search_by_account": {
          "description": "Members can search others under same account",
          "type": "boolean"
        },
        "search_by_ma_account": {
          "description": "Members can search others under same master account, including all sub accounts",
          "type": "boolean"
        }
      }
    },
    "Type252": {
      "title": "type252",
      "example": "normal",
      "x-enum-elements": [
        {
          "name": "normal",
          "description": ""
        },
        {
          "name": "shared",
          "description": ""
        },
        {
          "name": "restricted",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "normal",
        "shared",
        "restricted"
      ]
    },
    "ImGroupCreateResponse": {
      "title": "imGroupCreateResponse",
      "description": "IM Group created",
      "type": "object",
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        },
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Group member count",
          "type": "integer",
          "format": "int32"
        },
        "search_by_domain": {
          "description": "Members can search others in the same email domain",
          "type": "boolean"
        },
        "search_by_account": {
          "description": "Members can search others under same account",
          "type": "boolean"
        },
        "search_by_ma_account": {
          "description": "Members can search others under same master account, including all sub accounts",
          "type": "boolean"
        }
      }
    },
    "ImGroupResponse": {
      "title": "imGroupResponse",
      "description": "IM Group object returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Group ID",
          "type": "string"
        }
      }
    },
    "ImGroupMembersCreateResponse": {
      "title": "imGroupMembersCreateResponse",
      "description": "Member added",
      "type": "object",
      "properties": {
        "ids": {
          "description": "",
          "type": "string"
        },
        "added_at": {
          "description": "",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "ImChatSessionsResponse": {
      "title": "imChatSessionsResponse",
      "description": "Archived IM Chat sessions Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date",
          "type": "string",
          "format": "date"
        },
        "page_size": {
          "description": "The amount of records returns within a single API call.\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
          "type": "string"
        },
        "sessions": {
          "description": "Array of session objects",
          "type": "array",
          "items": {
            "title": "Session182",
            "type": "object",
            "properties": {
              "session_id": {
                "description": "IM Chat session ID",
                "type": "string"
              },
              "type": {
                "description": "IM Chat session type",
                "type": "string"
              },
              "name": {
                "description": "Meeting topic",
                "type": "string"
              },
              "last_message_sent_time": {
                "description": "Last message sent time",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "Session182": {
      "title": "Session182",
      "type": "object",
      "properties": {
        "session_id": {
          "description": "IM Chat session ID",
          "type": "string"
        },
        "type": {
          "description": "IM Chat session type",
          "type": "string"
        },
        "name": {
          "description": "Meeting topic",
          "type": "string"
        },
        "last_message_sent_time": {
          "description": "Last message sent time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "SendMessage": {
      "title": "sendMessage",
      "type": "object",
      "properties": {
        "robot_jid": {
          "description": "Robot JID",
          "type": "string"
        },
        "to_jid": {
          "description": "Unique JID of reciever. Can be a group or user.",
          "type": "string"
        },
        "account_jid": {
          "description": "Account ID of the authorized account",
          "type": "string"
        },
        "content": {
          "description": "JSON template describing how the message should be displayed to the user. For more information please see our [Send Message Templates](https://devdocs.zoom.us/v1.0/reference#send-message-templates)",
          "type": "string"
        }
      }
    },
    "ImChatMessagesResponse": {
      "title": "imChatMessagesResponse",
      "description": "Archived IM Chat messages Returned",
      "type": "object",
      "properties": {
        "session_id": {
          "description": "IM Chat session ID",
          "type": "string"
        },
        "from": {
          "description": "Start date",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date",
          "type": "string",
          "format": "date"
        },
        "page_size": {
          "description": "The amount of records returns within a single API call.\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
          "type": "string"
        },
        "messages": {
          "description": "Array of session objects",
          "type": "array",
          "items": {
            "title": "Message",
            "type": "object",
            "properties": {
              "message": {
                "description": "IM Chat message content",
                "type": "string"
              },
              "sender": {
                "description": "IM Chat message sender",
                "type": "string"
              },
              "date_time": {
                "description": "IM Chat message sent time",
                "type": "string",
                "format": "date-time"
              },
              "action": {
                "description": "IM Chat message action",
                "type": "string"
              },
              "action_time": {
                "description": "Action time",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "Message": {
      "title": "Message",
      "type": "object",
      "properties": {
        "message": {
          "description": "IM Chat message content",
          "type": "string"
        },
        "sender": {
          "description": "IM Chat message sender",
          "type": "string"
        },
        "date_time": {
          "description": "IM Chat message sent time",
          "type": "string",
          "format": "date-time"
        },
        "action": {
          "description": "IM Chat message action",
          "type": "string"
        },
        "action_time": {
          "description": "Action time",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "RecordingList": {
      "title": "Recording List",
      "description": "List of Recording objects returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start Date,",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End Date",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "meetings": {
          "description": "List of Recording",
          "type": "array",
          "items": {
            "title": "RecordingMeeting",
            "description": "The recording meeting object",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Meeting unique ID",
                "type": "string"
              },
              "id": {
                "description": "Meeting ID, also know as meeting number",
                "type": "string"
              },
              "account_id": {
                "description": "ID of the user account",
                "type": "string"
              },
              "host_id": {
                "description": "ID of the user set as host of meeting",
                "type": "string"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "integer",
                "format": "int32"
              },
              "total_size": {
                "description": "Total size",
                "type": "string"
              },
              "recording_count": {
                "description": "Recording count",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "RecordingMeeting": {
      "title": "RecordingMeeting",
      "description": "The recording meeting object",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting unique ID",
          "type": "string"
        },
        "id": {
          "description": "Meeting ID, also know as meeting number",
          "type": "string"
        },
        "account_id": {
          "description": "ID of the user account",
          "type": "string"
        },
        "host_id": {
          "description": "ID of the user set as host of meeting",
          "type": "string"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total_size": {
          "description": "Total size",
          "type": "string"
        },
        "recording_count": {
          "description": "Recording count",
          "type": "string"
        }
      }
    },
    "Action270": {
      "title": "action270",
      "example": "trash",
      "x-enum-elements": [
        {
          "name": "trash",
          "description": ""
        },
        {
          "name": "delete",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "trash",
        "delete"
      ]
    },
    "ReportDailyResponse": {
      "title": "reportDailyResponse",
      "description": "Daily Report Returned",
      "type": "object",
      "properties": {
        "year": {
          "description": "Year for this report",
          "type": "integer",
          "format": "int32"
        },
        "month": {
          "description": "Month for this report",
          "type": "integer",
          "format": "int32"
        },
        "dates": {
          "description": "Array of date objects",
          "type": "array",
          "items": {
            "title": "Date232",
            "type": "object",
            "properties": {
              "date": {
                "description": "Date for this object",
                "type": "string",
                "format": "date"
              },
              "new_users": {
                "description": "Number of new users on this date",
                "type": "integer",
                "format": "int32"
              },
              "meetings": {
                "description": "Number of meetings on this date",
                "type": "integer",
                "format": "int32"
              },
              "participants": {
                "description": "Number of participants on this date",
                "type": "integer",
                "format": "int32"
              },
              "meeting_minutes": {
                "description": "Number of meeting minutes on this date",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "Date232": {
      "title": "Date232",
      "type": "object",
      "properties": {
        "date": {
          "description": "Date for this object",
          "type": "string",
          "format": "date"
        },
        "new_users": {
          "description": "Number of new users on this date",
          "type": "integer",
          "format": "int32"
        },
        "meetings": {
          "description": "Number of meetings on this date",
          "type": "integer",
          "format": "int32"
        },
        "participants": {
          "description": "Number of participants on this date",
          "type": "integer",
          "format": "int32"
        },
        "meeting_minutes": {
          "description": "Number of meeting minutes on this date",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Type276": {
      "title": "type276",
      "example": "active",
      "x-enum-elements": [
        {
          "name": "active",
          "description": ""
        },
        {
          "name": "inactive",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "active",
        "inactive"
      ]
    },
    "ReportUsersResponse": {
      "title": "reportUsersResponse",
      "description": "Active/Inactive Hosts Report Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "total_meetings": {
          "description": "Number of meetings for this range",
          "type": "integer",
          "format": "int32"
        },
        "total_participants": {
          "description": "Number of participants for this range",
          "type": "integer",
          "format": "int32"
        },
        "total_meeting_minutes": {
          "description": "Number of meeting minutes for this range",
          "type": "integer",
          "format": "int32"
        },
        "users": {
          "description": "Array of user objects",
          "type": "array",
          "items": {
            "title": "User235",
            "type": "object",
            "properties": {
              "id": {
                "description": "User ID",
                "type": "string",
                "format": "uuid"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "user_name": {
                "description": "User display name",
                "type": "string"
              },
              "type": {
                "description": "User type",
                "type": "integer",
                "format": "int32"
              },
              "dept": {
                "description": "User department",
                "type": "string"
              },
              "meetings": {
                "description": "Number of meetings for user",
                "type": "integer",
                "format": "int32"
              },
              "participants": {
                "description": "Number of participants in meetings for user",
                "type": "integer",
                "format": "int32"
              },
              "meeting_minutes": {
                "description": "Number of meeting minutes for user",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "User235": {
      "title": "User235",
      "type": "object",
      "properties": {
        "id": {
          "description": "User ID",
          "type": "string",
          "format": "uuid"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "type": {
          "description": "User type",
          "type": "integer",
          "format": "int32"
        },
        "dept": {
          "description": "User department",
          "type": "string"
        },
        "meetings": {
          "description": "Number of meetings for user",
          "type": "integer",
          "format": "int32"
        },
        "participants": {
          "description": "Number of participants in meetings for user",
          "type": "integer",
          "format": "int32"
        },
        "meeting_minutes": {
          "description": "Number of meeting minutes for user",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportMeetingsResponse": {
      "title": "reportMeetingsResponse",
      "description": "Active/Inactive Hosts Report Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "meetings": {
          "description": "Array of meeting objects",
          "type": "array",
          "items": {
            "title": "Meeting237",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Meeting UUID",
                "type": "string",
                "format": "uuid"
              },
              "id": {
                "description": "Meeting ID",
                "type": "integer",
                "format": "int32"
              },
              "type": {
                "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
                "type": "integer",
                "format": "int32"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "user_name": {
                "description": "User display name",
                "type": "string"
              },
              "user_email": {
                "description": "User email",
                "type": "string"
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "end_time": {
                "description": "Meeting end time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "integer",
                "format": "int32"
              },
              "total_minutes": {
                "description": "Number of meeting minutes",
                "type": "integer",
                "format": "int32"
              },
              "participants_count": {
                "description": "Number of meeting participants",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "Meeting237": {
      "title": "Meeting237",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "user_email": {
          "description": "User email",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total_minutes": {
          "description": "Number of meeting minutes",
          "type": "integer",
          "format": "int32"
        },
        "participants_count": {
          "description": "Number of meeting participants",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportMeetingDetailsResponse": {
      "title": "reportMeetingDetailsResponse",
      "description": "Meeting detail Returned",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "user_email": {
          "description": "User email",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total_minutes": {
          "description": "Number of meeting minutes",
          "type": "integer",
          "format": "int32"
        },
        "participants_count": {
          "description": "Number of meeting participants",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportMeetingParticipantsResponse": {
      "title": "reportMeetingParticipantsResponse",
      "description": "Meeting Participants Report Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of meeting participant objects",
          "type": "array",
          "items": {
            "title": "Participant240",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "name": {
                "description": "Participant display name",
                "type": "string"
              },
              "user_email": {
                "description": "Participant email",
                "type": "string"
              },
              "join_time": {
                "description": "Participant join time",
                "type": "string",
                "format": "date-time"
              },
              "leave_time": {
                "description": "Participant leave time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Participant duration",
                "type": "integer",
                "format": "int32"
              },
              "attentiveness_score": {
                "description": "Participant attentiveness score",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "Participant240": {
      "title": "Participant240",
      "type": "object",
      "properties": {
        "id": {
          "description": "Participant UUID",
          "type": "string",
          "format": "uuid"
        },
        "user_id": {
          "description": "Participant ID",
          "type": "string"
        },
        "name": {
          "description": "Participant display name",
          "type": "string"
        },
        "user_email": {
          "description": "Participant email",
          "type": "string"
        },
        "join_time": {
          "description": "Participant join time",
          "type": "string",
          "format": "date-time"
        },
        "leave_time": {
          "description": "Participant leave time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Participant duration",
          "type": "integer",
          "format": "int32"
        },
        "attentiveness_score": {
          "description": "Participant attentiveness score",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportMeetingPollsResponse": {
      "title": "reportMeetingPollsResponse",
      "description": "Meeting Polls Report Returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "questions": {
          "description": "Array of Meeting question objects",
          "type": "array",
          "items": {
            "title": "Question",
            "type": "object",
            "properties": {
              "name": {
                "description": "Participant display name",
                "type": "string"
              },
              "email": {
                "description": "Participant email",
                "type": "string"
              },
              "question_details": {
                "description": "Array of questions from user",
                "type": "array",
                "items": {
                  "title": "QuestionDetail",
                  "type": "object",
                  "properties": {
                    "question": {
                      "description": "Asked question",
                      "type": "string"
                    },
                    "answer": {
                      "description": "Given answer",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Question": {
      "title": "Question",
      "type": "object",
      "properties": {
        "name": {
          "description": "Participant display name",
          "type": "string"
        },
        "email": {
          "description": "Participant email",
          "type": "string"
        },
        "question_details": {
          "description": "Array of questions from user",
          "type": "array",
          "items": {
            "title": "QuestionDetail",
            "type": "object",
            "properties": {
              "question": {
                "description": "Asked question",
                "type": "string"
              },
              "answer": {
                "description": "Given answer",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "QuestionDetail": {
      "title": "QuestionDetail",
      "type": "object",
      "properties": {
        "question": {
          "description": "Asked question",
          "type": "string"
        },
        "answer": {
          "description": "Given answer",
          "type": "string"
        }
      }
    },
    "ReportWebinarDetailsResponse": {
      "title": "reportWebinarDetailsResponse",
      "description": "Webinar detail Returned",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "description": "Meeting Type\n`1` Instant Meeting\n`2` Scheduled Meeting\n`3` Recurring Meeting with no fixed time\n`8` Recurring Meeting with fixed time",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "user_email": {
          "description": "User email",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total_minutes": {
          "description": "Number of meeting minutes",
          "type": "integer",
          "format": "int32"
        },
        "participants_count": {
          "description": "Number of meeting participants",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ReportWebinarParticipantsResponse": {
      "title": "reportWebinarParticipantsResponse",
      "description": "Meeting Participants Report Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of webinar participant objects",
          "type": "array",
          "items": {
            "title": "Participant246",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "name": {
                "description": "Participant display name",
                "type": "string"
              },
              "user_email": {
                "description": "Participant email",
                "type": "string"
              },
              "join_time": {
                "description": "Participant join time",
                "type": "string",
                "format": "date-time"
              },
              "leave_time": {
                "description": "Participant leave time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Participant duration",
                "type": "integer",
                "format": "int32"
              },
              "attentiveness_score": {
                "description": "Participant attentiveness score",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Participant246": {
      "title": "Participant246",
      "type": "object",
      "properties": {
        "id": {
          "description": "Participant UUID",
          "type": "string",
          "format": "uuid"
        },
        "user_id": {
          "description": "Participant ID",
          "type": "string"
        },
        "name": {
          "description": "Participant display name",
          "type": "string"
        },
        "user_email": {
          "description": "Participant email",
          "type": "string"
        },
        "join_time": {
          "description": "Participant join time",
          "type": "string",
          "format": "date-time"
        },
        "leave_time": {
          "description": "Participant leave time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Participant duration",
          "type": "integer",
          "format": "int32"
        },
        "attentiveness_score": {
          "description": "Participant attentiveness score",
          "type": "string"
        }
      }
    },
    "ReportWebinarPollsResponse": {
      "title": "reportWebinarPollsResponse",
      "description": "Webinar Polls Report Returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Webinar ID",
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "description": "Webinar UUID",
          "type": "string",
          "format": "uuid"
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "questions": {
          "description": "Array of webinar question objects",
          "type": "array",
          "items": {
            "title": "Question",
            "type": "object",
            "properties": {
              "name": {
                "description": "Participant display name",
                "type": "string"
              },
              "email": {
                "description": "Participant email",
                "type": "string"
              },
              "question_details": {
                "description": "Array of questions from user",
                "type": "array",
                "items": {
                  "title": "QuestionDetail",
                  "type": "object",
                  "properties": {
                    "question": {
                      "description": "Asked question",
                      "type": "string"
                    },
                    "answer": {
                      "description": "Given answer",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ReportWebinarQAResponse": {
      "title": "reportWebinarQAResponse",
      "description": "Webinar Q&A Report Returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Webinar ID",
          "type": "integer",
          "format": "int32"
        },
        "uuid": {
          "description": "Webinar UUID",
          "type": "string",
          "format": "uuid"
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "questions": {
          "description": "Array of webinar question objects",
          "type": "array",
          "items": {
            "title": "Question",
            "type": "object",
            "properties": {
              "name": {
                "description": "Participant display name",
                "type": "string"
              },
              "email": {
                "description": "Participant email",
                "type": "string"
              },
              "question_details": {
                "description": "Array of questions from user",
                "type": "array",
                "items": {
                  "title": "QuestionDetail",
                  "type": "object",
                  "properties": {
                    "question": {
                      "description": "Asked question",
                      "type": "string"
                    },
                    "answer": {
                      "description": "Given answer",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Type296": {
      "title": "type296",
      "example": 1,
      "x-enum-elements": [
        {
          "name": "Enum_1",
          "description": ""
        }
      ],
      "type": "integer",
      "format": "int32",
      "enum": [
        "1"
      ]
    },
    "ReportTelephoneResponse": {
      "title": "reportTelephoneResponse",
      "description": "Telephone Report Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "telephony_usage": {
          "description": "Array of telephony objects",
          "type": "array",
          "items": {
            "title": "TelephonyUsage",
            "type": "object",
            "properties": {
              "meeting_id": {
                "description": "Meeting ID",
                "type": "integer",
                "format": "int32"
              },
              "phone_number": {
                "description": "Telephone Number",
                "type": "string"
              },
              "host_name": {
                "description": "User display name",
                "type": "string"
              },
              "host_email": {
                "description": "User email",
                "type": "string"
              },
              "dept": {
                "description": "User department",
                "type": "string"
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "end_time": {
                "description": "Meeting end time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "integer",
                "format": "int32"
              },
              "total": {
                "description": "Total",
                "type": "number",
                "format": "double"
              }
            }
          }
        }
      }
    },
    "TelephonyUsage": {
      "title": "TelephonyUsage",
      "type": "object",
      "properties": {
        "meeting_id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "phone_number": {
          "description": "Telephone Number",
          "type": "string"
        },
        "host_name": {
          "description": "User display name",
          "type": "string"
        },
        "host_email": {
          "description": "User email",
          "type": "string"
        },
        "dept": {
          "description": "User department",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "description": "Total",
          "type": "number",
          "format": "double"
        }
      }
    },
    "Type299": {
      "title": "type299",
      "description": "The meeting type\n`past` past meetings\n`pastOne` past one user meetings\n`live` live meetings",
      "example": "past",
      "x-enum-elements": [
        {
          "name": "past",
          "description": ""
        },
        {
          "name": "pastOne",
          "description": ""
        },
        {
          "name": "live",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "past",
        "pastOne",
        "live"
      ]
    },
    "DashboardMeetingsResponse": {
      "title": "dashboardMeetingsResponse",
      "description": "Meetings Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "meetings": {
          "description": "Array of meeting objects",
          "type": "array",
          "items": {
            "title": "Meeting Metrics",
            "description": "Meeting metric details",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Meeting UUID",
                "type": "string",
                "format": "uuid"
              },
              "id": {
                "description": "Meeting ID",
                "type": "integer",
                "format": "int32"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "host": {
                "description": "User display name",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "user_type": {
                "description": "User type",
                "type": "string"
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "end_time": {
                "description": "Meeting end time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "string"
              },
              "participants": {
                "description": "Meeting participant count",
                "type": "integer",
                "format": "int32"
              },
              "has_pstn": {
                "description": "",
                "type": "boolean"
              },
              "has_voip": {
                "description": "",
                "type": "boolean"
              },
              "has_3rd_party_audio": {
                "description": "",
                "type": "boolean"
              },
              "has_video": {
                "description": "",
                "type": "boolean"
              },
              "has_screen_share": {
                "description": "",
                "type": "boolean"
              },
              "has_recording": {
                "description": "",
                "type": "boolean"
              },
              "has_sip": {
                "description": "",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "MeetingMetrics": {
      "title": "Meeting Metrics",
      "description": "Meeting metric details",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Meeting UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Meeting ID",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "host": {
          "description": "User display name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "user_type": {
          "description": "User type",
          "type": "string"
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Meeting end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "string"
        },
        "participants": {
          "description": "Meeting participant count",
          "type": "integer",
          "format": "int32"
        },
        "has_pstn": {
          "description": "",
          "type": "boolean"
        },
        "has_voip": {
          "description": "",
          "type": "boolean"
        },
        "has_3rd_party_audio": {
          "description": "",
          "type": "boolean"
        },
        "has_video": {
          "description": "",
          "type": "boolean"
        },
        "has_screen_share": {
          "description": "",
          "type": "boolean"
        },
        "has_recording": {
          "description": "",
          "type": "boolean"
        },
        "has_sip": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "DashboardMeetingParticipantsResponse": {
      "title": "dashboardMeetingParticipantsResponse",
      "description": "Meeting Participants Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of user objects",
          "type": "array",
          "items": {
            "title": "Participant205",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "user_name": {
                "description": "Participant display name",
                "type": "string"
              },
              "device": {
                "description": "Participant device",
                "type": "string"
              },
              "ip_address": {
                "description": "Participant IP Address",
                "type": "string"
              },
              "location": {
                "description": "Participant location",
                "type": "string"
              },
              "network_type": {
                "description": "Participant network type",
                "type": "string"
              },
              "microphone": {
                "description": "Participant microphone",
                "type": "string"
              },
              "speaker": {
                "description": "Participant speaker",
                "type": "string"
              },
              "data_center": {
                "description": "Participant data center",
                "type": "string"
              },
              "connection_type": {
                "description": "Participant connection type",
                "type": "string"
              },
              "join_time": {
                "description": "Participant join time",
                "type": "string",
                "format": "date-time"
              },
              "leave_time": {
                "description": "Participant leave time",
                "type": "string",
                "format": "date-time"
              },
              "share_application": {
                "description": "Did participant share application",
                "type": "boolean"
              },
              "share_desktop": {
                "description": "Did participant share desktop",
                "type": "boolean"
              },
              "share_whiteboard": {
                "description": "Did participant share whiteboard",
                "type": "boolean"
              },
              "recording": {
                "description": "Participant record",
                "type": "boolean"
              },
              "pc_name": {
                "description": "Participant PC name",
                "type": "string"
              },
              "domain": {
                "description": "Participant domain",
                "type": "string"
              },
              "mac_addr": {
                "description": "Participant MAC Address",
                "type": "string"
              },
              "harddisk_id": {
                "description": "Participant hard disk id",
                "type": "string"
              },
              "version": {
                "description": "Participant version",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Participant205": {
      "title": "Participant205",
      "type": "object",
      "properties": {
        "id": {
          "description": "Participant UUID",
          "type": "string",
          "format": "uuid"
        },
        "user_id": {
          "description": "Participant ID",
          "type": "string"
        },
        "user_name": {
          "description": "Participant display name",
          "type": "string"
        },
        "device": {
          "description": "Participant device",
          "type": "string"
        },
        "ip_address": {
          "description": "Participant IP Address",
          "type": "string"
        },
        "location": {
          "description": "Participant location",
          "type": "string"
        },
        "network_type": {
          "description": "Participant network type",
          "type": "string"
        },
        "microphone": {
          "description": "Participant microphone",
          "type": "string"
        },
        "speaker": {
          "description": "Participant speaker",
          "type": "string"
        },
        "data_center": {
          "description": "Participant data center",
          "type": "string"
        },
        "connection_type": {
          "description": "Participant connection type",
          "type": "string"
        },
        "join_time": {
          "description": "Participant join time",
          "type": "string",
          "format": "date-time"
        },
        "leave_time": {
          "description": "Participant leave time",
          "type": "string",
          "format": "date-time"
        },
        "share_application": {
          "description": "Did participant share application",
          "type": "boolean"
        },
        "share_desktop": {
          "description": "Did participant share desktop",
          "type": "boolean"
        },
        "share_whiteboard": {
          "description": "Did participant share whiteboard",
          "type": "boolean"
        },
        "recording": {
          "description": "Participant record",
          "type": "boolean"
        },
        "pc_name": {
          "description": "Participant PC name",
          "type": "string"
        },
        "domain": {
          "description": "Participant domain",
          "type": "string"
        },
        "mac_addr": {
          "description": "Participant MAC Address",
          "type": "string"
        },
        "harddisk_id": {
          "description": "Participant hard disk id",
          "type": "string"
        },
        "version": {
          "description": "Participant version",
          "type": "string"
        }
      }
    },
    "Type307": {
      "title": "type307",
      "description": "The meeting type\n`past` past meeting\n`live` live meeting",
      "example": "past",
      "x-enum-elements": [
        {
          "name": "past",
          "description": ""
        },
        {
          "name": "live",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "past",
        "live"
      ]
    },
    "ParticipantQos": {
      "title": "Participant QOS",
      "description": "Meeting Participant QOS Returned",
      "type": "object",
      "properties": {
        "user_id": {
          "description": "Participant ID",
          "type": "string",
          "format": "uuid"
        },
        "user_name": {
          "description": "Participant display name",
          "type": "string"
        },
        "device": {
          "description": "Participant device",
          "type": "string"
        },
        "ip_address": {
          "description": "Participant IP Address",
          "type": "string"
        },
        "location": {
          "description": "Participant location",
          "type": "string"
        },
        "join_time": {
          "description": "Participant join time",
          "type": "string",
          "format": "date-time"
        },
        "leave_time": {
          "description": "Participant leave time",
          "type": "string",
          "format": "date-time"
        },
        "pc_name": {
          "description": "Participant PC name",
          "type": "string"
        },
        "domain": {
          "description": "Participant domain",
          "type": "string"
        },
        "mac_addr": {
          "description": "Participant MAC Address",
          "type": "string"
        },
        "harddisk_id": {
          "description": "Participant hard disk id",
          "type": "string"
        },
        "version": {
          "description": "Participant version",
          "type": "string"
        },
        "user_qos": {
          "title": "UserQos",
          "type": "object",
          "properties": {
            "date_time": {
              "description": "Datetime of QOS",
              "type": "string",
              "format": "date-time"
            },
            "audio_input": {
              "title": "QOS Object",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                }
              }
            },
            "audio_output": {
              "title": "QOS Object",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                }
              }
            },
            "video_input": {
              "title": "QOS Object86",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                },
                "resolution": {
                  "description": "Resolution",
                  "type": "string"
                },
                "frame_rate": {
                  "description": "Frame Rate",
                  "type": "string"
                }
              }
            },
            "video_output": {
              "title": "QOS Object86",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                },
                "resolution": {
                  "description": "Resolution",
                  "type": "string"
                },
                "frame_rate": {
                  "description": "Frame Rate",
                  "type": "string"
                }
              }
            },
            "as_input": {
              "title": "QOS Object86",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                },
                "resolution": {
                  "description": "Resolution",
                  "type": "string"
                },
                "frame_rate": {
                  "description": "Frame Rate",
                  "type": "string"
                }
              }
            },
            "as_output": {
              "title": "QOS Object86",
              "type": "object",
              "properties": {
                "bitrate": {
                  "description": "Bitrate",
                  "type": "string"
                },
                "latency": {
                  "description": "Latency",
                  "type": "string"
                },
                "jitter": {
                  "description": "Jitter",
                  "type": "string"
                },
                "avg_loss": {
                  "description": "Average Loss",
                  "type": "string"
                },
                "max_loss": {
                  "description": "Max Loss",
                  "type": "string"
                },
                "resolution": {
                  "description": "Resolution",
                  "type": "string"
                },
                "frame_rate": {
                  "description": "Frame Rate",
                  "type": "string"
                }
              }
            },
            "cpu_usage": {
              "title": "CpuUsage",
              "type": "object",
              "properties": {
                "zoom_min_cpu_usage": {
                  "description": "Zoom Minimum CPU Usage",
                  "type": "string"
                },
                "zoom_avg_cpu_usage": {
                  "description": "Zoom Average CPU Usage",
                  "type": "string"
                },
                "zoom_max_cpu_usage": {
                  "description": "Zoom Maximum CPU Usage",
                  "type": "string"
                },
                "system_max_cpu_usage": {
                  "description": "System Maximum CPU Usage",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "UserQos": {
      "title": "UserQos",
      "type": "object",
      "properties": {
        "date_time": {
          "description": "Datetime of QOS",
          "type": "string",
          "format": "date-time"
        },
        "audio_input": {
          "title": "QOS Object",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            }
          }
        },
        "audio_output": {
          "title": "QOS Object",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            }
          }
        },
        "video_input": {
          "title": "QOS Object86",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            },
            "resolution": {
              "description": "Resolution",
              "type": "string"
            },
            "frame_rate": {
              "description": "Frame Rate",
              "type": "string"
            }
          }
        },
        "video_output": {
          "title": "QOS Object86",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            },
            "resolution": {
              "description": "Resolution",
              "type": "string"
            },
            "frame_rate": {
              "description": "Frame Rate",
              "type": "string"
            }
          }
        },
        "as_input": {
          "title": "QOS Object86",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            },
            "resolution": {
              "description": "Resolution",
              "type": "string"
            },
            "frame_rate": {
              "description": "Frame Rate",
              "type": "string"
            }
          }
        },
        "as_output": {
          "title": "QOS Object86",
          "type": "object",
          "properties": {
            "bitrate": {
              "description": "Bitrate",
              "type": "string"
            },
            "latency": {
              "description": "Latency",
              "type": "string"
            },
            "jitter": {
              "description": "Jitter",
              "type": "string"
            },
            "avg_loss": {
              "description": "Average Loss",
              "type": "string"
            },
            "max_loss": {
              "description": "Max Loss",
              "type": "string"
            },
            "resolution": {
              "description": "Resolution",
              "type": "string"
            },
            "frame_rate": {
              "description": "Frame Rate",
              "type": "string"
            }
          }
        },
        "cpu_usage": {
          "title": "CpuUsage",
          "type": "object",
          "properties": {
            "zoom_min_cpu_usage": {
              "description": "Zoom Minimum CPU Usage",
              "type": "string"
            },
            "zoom_avg_cpu_usage": {
              "description": "Zoom Average CPU Usage",
              "type": "string"
            },
            "zoom_max_cpu_usage": {
              "description": "Zoom Maximum CPU Usage",
              "type": "string"
            },
            "system_max_cpu_usage": {
              "description": "System Maximum CPU Usage",
              "type": "string"
            }
          }
        }
      }
    },
    "QosObject": {
      "title": "QOS Object",
      "type": "object",
      "properties": {
        "bitrate": {
          "description": "Bitrate",
          "type": "string"
        },
        "latency": {
          "description": "Latency",
          "type": "string"
        },
        "jitter": {
          "description": "Jitter",
          "type": "string"
        },
        "avg_loss": {
          "description": "Average Loss",
          "type": "string"
        },
        "max_loss": {
          "description": "Max Loss",
          "type": "string"
        }
      }
    },
    "QosObject86": {
      "title": "QOS Object86",
      "type": "object",
      "properties": {
        "bitrate": {
          "description": "Bitrate",
          "type": "string"
        },
        "latency": {
          "description": "Latency",
          "type": "string"
        },
        "jitter": {
          "description": "Jitter",
          "type": "string"
        },
        "avg_loss": {
          "description": "Average Loss",
          "type": "string"
        },
        "max_loss": {
          "description": "Max Loss",
          "type": "string"
        },
        "resolution": {
          "description": "Resolution",
          "type": "string"
        },
        "frame_rate": {
          "description": "Frame Rate",
          "type": "string"
        }
      }
    },
    "CpuUsage": {
      "title": "CpuUsage",
      "type": "object",
      "properties": {
        "zoom_min_cpu_usage": {
          "description": "Zoom Minimum CPU Usage",
          "type": "string"
        },
        "zoom_avg_cpu_usage": {
          "description": "Zoom Average CPU Usage",
          "type": "string"
        },
        "zoom_max_cpu_usage": {
          "description": "Zoom Maximum CPU Usage",
          "type": "string"
        },
        "system_max_cpu_usage": {
          "description": "System Maximum CPU Usage",
          "type": "string"
        }
      }
    },
    "ParticipantQosList": {
      "title": "Participant QOS List",
      "description": "Meeting Participants Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int64"
        },
        "page_size": {
          "description": "The number of items per page\n**maximum:** 10",
          "example": 1,
          "type": "integer",
          "maximum": 10,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int64"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of user objects",
          "type": "array",
          "items": {
            "title": "Participant QOS",
            "description": "Meeting Participant QOS Returned",
            "type": "object",
            "properties": {
              "user_id": {
                "description": "Participant ID",
                "type": "string",
                "format": "uuid"
              },
              "user_name": {
                "description": "Participant display name",
                "type": "string"
              },
              "device": {
                "description": "Participant device",
                "type": "string"
              },
              "ip_address": {
                "description": "Participant IP Address",
                "type": "string"
              },
              "location": {
                "description": "Participant location",
                "type": "string"
              },
              "join_time": {
                "description": "Participant join time",
                "type": "string",
                "format": "date-time"
              },
              "leave_time": {
                "description": "Participant leave time",
                "type": "string",
                "format": "date-time"
              },
              "pc_name": {
                "description": "Participant PC name",
                "type": "string"
              },
              "domain": {
                "description": "Participant domain",
                "type": "string"
              },
              "mac_addr": {
                "description": "Participant MAC Address",
                "type": "string"
              },
              "harddisk_id": {
                "description": "Participant hard disk id",
                "type": "string"
              },
              "version": {
                "description": "Participant version",
                "type": "string"
              },
              "user_qos": {
                "title": "UserQos",
                "type": "object",
                "properties": {
                  "date_time": {
                    "description": "Datetime of QOS",
                    "type": "string",
                    "format": "date-time"
                  },
                  "audio_input": {
                    "title": "QOS Object",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      }
                    }
                  },
                  "audio_output": {
                    "title": "QOS Object",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      }
                    }
                  },
                  "video_input": {
                    "title": "QOS Object86",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      },
                      "resolution": {
                        "description": "Resolution",
                        "type": "string"
                      },
                      "frame_rate": {
                        "description": "Frame Rate",
                        "type": "string"
                      }
                    }
                  },
                  "video_output": {
                    "title": "QOS Object86",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      },
                      "resolution": {
                        "description": "Resolution",
                        "type": "string"
                      },
                      "frame_rate": {
                        "description": "Frame Rate",
                        "type": "string"
                      }
                    }
                  },
                  "as_input": {
                    "title": "QOS Object86",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      },
                      "resolution": {
                        "description": "Resolution",
                        "type": "string"
                      },
                      "frame_rate": {
                        "description": "Frame Rate",
                        "type": "string"
                      }
                    }
                  },
                  "as_output": {
                    "title": "QOS Object86",
                    "type": "object",
                    "properties": {
                      "bitrate": {
                        "description": "Bitrate",
                        "type": "string"
                      },
                      "latency": {
                        "description": "Latency",
                        "type": "string"
                      },
                      "jitter": {
                        "description": "Jitter",
                        "type": "string"
                      },
                      "avg_loss": {
                        "description": "Average Loss",
                        "type": "string"
                      },
                      "max_loss": {
                        "description": "Max Loss",
                        "type": "string"
                      },
                      "resolution": {
                        "description": "Resolution",
                        "type": "string"
                      },
                      "frame_rate": {
                        "description": "Frame Rate",
                        "type": "string"
                      }
                    }
                  },
                  "cpu_usage": {
                    "title": "CpuUsage",
                    "type": "object",
                    "properties": {
                      "zoom_min_cpu_usage": {
                        "description": "Zoom Minimum CPU Usage",
                        "type": "string"
                      },
                      "zoom_avg_cpu_usage": {
                        "description": "Zoom Average CPU Usage",
                        "type": "string"
                      },
                      "zoom_max_cpu_usage": {
                        "description": "Zoom Maximum CPU Usage",
                        "type": "string"
                      },
                      "system_max_cpu_usage": {
                        "description": "System Maximum CPU Usage",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DashboardMeetingParticipantShareResponse": {
      "title": "dashboardMeetingParticipantShareResponse",
      "description": "Meeting Participants Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of participants",
          "type": "array",
          "items": {
            "title": "Participant210",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "user_name": {
                "description": "Participant display name",
                "type": "string"
              },
              "details": {
                "description": "Array of sharing and recording details",
                "type": "array",
                "items": {
                  "title": "Detail",
                  "type": "object",
                  "properties": {
                    "content": {
                      "description": "Type of content shared",
                      "type": "string"
                    },
                    "start_time": {
                      "description": "Start time of sharing",
                      "type": "string"
                    },
                    "end_time": {
                      "description": "End time of sharing",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "Participant210": {
      "title": "Participant210",
      "type": "object",
      "properties": {
        "id": {
          "description": "Participant UUID",
          "type": "string"
        },
        "user_id": {
          "description": "Participant ID",
          "type": "string"
        },
        "user_name": {
          "description": "Participant display name",
          "type": "string"
        },
        "details": {
          "description": "Array of sharing and recording details",
          "type": "array",
          "items": {
            "title": "Detail",
            "type": "object",
            "properties": {
              "content": {
                "description": "Type of content shared",
                "type": "string"
              },
              "start_time": {
                "description": "Start time of sharing",
                "type": "string"
              },
              "end_time": {
                "description": "End time of sharing",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Detail": {
      "title": "Detail",
      "type": "object",
      "properties": {
        "content": {
          "description": "Type of content shared",
          "type": "string"
        },
        "start_time": {
          "description": "Start time of sharing",
          "type": "string"
        },
        "end_time": {
          "description": "End time of sharing",
          "type": "string"
        }
      }
    },
    "DashboardWebinarsResponse": {
      "title": "dashboardWebinarsResponse",
      "description": "Meetings Returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "webinars": {
          "description": "Array of webinar objects",
          "type": "array",
          "items": {
            "title": "Webinar Metrics",
            "description": "Webinar metric details",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Webinar UUID",
                "type": "string",
                "format": "uuid"
              },
              "id": {
                "description": "Webinar ID",
                "type": "integer",
                "format": "int32"
              },
              "topic": {
                "description": "Webinar topic",
                "type": "string"
              },
              "host": {
                "description": "User display name",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "user_type": {
                "description": "User type",
                "type": "string"
              },
              "start_time": {
                "description": "Webinar start time",
                "type": "string",
                "format": "date-time"
              },
              "end_time": {
                "description": "Webinar end time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Webinar duration",
                "type": "string"
              },
              "participants": {
                "description": "Webinar participant count",
                "type": "integer",
                "format": "int32"
              },
              "has_pstn": {
                "description": "",
                "type": "boolean"
              },
              "has_voip": {
                "description": "",
                "type": "boolean"
              },
              "has_3rd_party_audio": {
                "description": "",
                "type": "boolean"
              },
              "has_video": {
                "description": "",
                "type": "boolean"
              },
              "has_screen_share": {
                "description": "",
                "type": "boolean"
              },
              "has_recording": {
                "description": "",
                "type": "boolean"
              },
              "has_sip": {
                "description": "",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "WebinarMetrics": {
      "title": "Webinar Metrics",
      "description": "Webinar metric details",
      "type": "object",
      "properties": {
        "uuid": {
          "description": "Webinar UUID",
          "type": "string",
          "format": "uuid"
        },
        "id": {
          "description": "Webinar ID",
          "type": "integer",
          "format": "int32"
        },
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "host": {
          "description": "User display name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "user_type": {
          "description": "User type",
          "type": "string"
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "end_time": {
          "description": "Webinar end time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration",
          "type": "string"
        },
        "participants": {
          "description": "Webinar participant count",
          "type": "integer",
          "format": "int32"
        },
        "has_pstn": {
          "description": "",
          "type": "boolean"
        },
        "has_voip": {
          "description": "",
          "type": "boolean"
        },
        "has_3rd_party_audio": {
          "description": "",
          "type": "boolean"
        },
        "has_video": {
          "description": "",
          "type": "boolean"
        },
        "has_screen_share": {
          "description": "",
          "type": "boolean"
        },
        "has_recording": {
          "description": "",
          "type": "boolean"
        },
        "has_sip": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "DashboardWebinarParticipantsResponse": {
      "title": "dashboardWebinarParticipantsResponse",
      "description": "Webinar Participants Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of user objects",
          "type": "array",
          "items": {
            "title": "Participant205",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string",
                "format": "uuid"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "user_name": {
                "description": "Participant display name",
                "type": "string"
              },
              "device": {
                "description": "Participant device",
                "type": "string"
              },
              "ip_address": {
                "description": "Participant IP Address",
                "type": "string"
              },
              "location": {
                "description": "Participant location",
                "type": "string"
              },
              "network_type": {
                "description": "Participant network type",
                "type": "string"
              },
              "microphone": {
                "description": "Participant microphone",
                "type": "string"
              },
              "speaker": {
                "description": "Participant speaker",
                "type": "string"
              },
              "data_center": {
                "description": "Participant data center",
                "type": "string"
              },
              "connection_type": {
                "description": "Participant connection type",
                "type": "string"
              },
              "join_time": {
                "description": "Participant join time",
                "type": "string",
                "format": "date-time"
              },
              "leave_time": {
                "description": "Participant leave time",
                "type": "string",
                "format": "date-time"
              },
              "share_application": {
                "description": "Did participant share application",
                "type": "boolean"
              },
              "share_desktop": {
                "description": "Did participant share desktop",
                "type": "boolean"
              },
              "share_whiteboard": {
                "description": "Did participant share whiteboard",
                "type": "boolean"
              },
              "recording": {
                "description": "Participant record",
                "type": "boolean"
              },
              "pc_name": {
                "description": "Participant PC name",
                "type": "string"
              },
              "domain": {
                "description": "Participant domain",
                "type": "string"
              },
              "mac_addr": {
                "description": "Participant MAC Address",
                "type": "string"
              },
              "harddisk_id": {
                "description": "Participant hard disk id",
                "type": "string"
              },
              "version": {
                "description": "Participant version",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DashboardWebinarParticipantShareResponse": {
      "title": "dashboardWebinarParticipantShareResponse",
      "description": "Webinar Participants Returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "participants": {
          "description": "Array of participants",
          "type": "array",
          "items": {
            "title": "Participant210",
            "type": "object",
            "properties": {
              "id": {
                "description": "Participant UUID",
                "type": "string"
              },
              "user_id": {
                "description": "Participant ID",
                "type": "string"
              },
              "user_name": {
                "description": "Participant display name",
                "type": "string"
              },
              "details": {
                "description": "Array of sharing and recording details",
                "type": "array",
                "items": {
                  "title": "Detail",
                  "type": "object",
                  "properties": {
                    "content": {
                      "description": "Type of content shared",
                      "type": "string"
                    },
                    "start_time": {
                      "description": "Start time of sharing",
                      "type": "string"
                    },
                    "end_time": {
                      "description": "End time of sharing",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ZoomRoomList": {
      "title": "Zoom Room List",
      "description": "List of Zoom Rooms returned",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "zoom_rooms": {
          "description": "Array of Zoom Rooms",
          "type": "array",
          "items": {
            "title": "Zoom Room",
            "description": "Zoom Room",
            "type": "object",
            "properties": {
              "id": {
                "description": "Zoom Room ID",
                "type": "string"
              },
              "room_name": {
                "description": "Zoom Room name",
                "type": "string"
              },
              "calender_name": {
                "description": "Zoom Calendar name",
                "type": "string"
              },
              "email": {
                "description": "Zoom Room email",
                "type": "string"
              },
              "account_type": {
                "description": "Zoom Room email type",
                "type": "string"
              },
              "status": {
                "description": "Zoom Room status",
                "type": "string"
              },
              "device_ip": {
                "description": "Zoom Room device IP",
                "type": "string"
              },
              "camera": {
                "description": "Zoom Room camera",
                "type": "string"
              },
              "microphone": {
                "description": "Zoom Room microphone",
                "type": "string"
              },
              "speaker": {
                "description": "Zoom Room speaker",
                "type": "string"
              },
              "last_start_time": {
                "description": "Zoom Room last start time",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "ZoomRoom": {
      "title": "Zoom Room",
      "description": "Zoom Room",
      "type": "object",
      "properties": {
        "id": {
          "description": "Zoom Room ID",
          "type": "string"
        },
        "room_name": {
          "description": "Zoom Room name",
          "type": "string"
        },
        "calender_name": {
          "description": "Zoom Calendar name",
          "type": "string"
        },
        "email": {
          "description": "Zoom Room email",
          "type": "string"
        },
        "account_type": {
          "description": "Zoom Room email type",
          "type": "string"
        },
        "status": {
          "description": "Zoom Room status",
          "type": "string"
        },
        "device_ip": {
          "description": "Zoom Room device IP",
          "type": "string"
        },
        "camera": {
          "description": "Zoom Room camera",
          "type": "string"
        },
        "microphone": {
          "description": "Zoom Room microphone",
          "type": "string"
        },
        "speaker": {
          "description": "Zoom Room speaker",
          "type": "string"
        },
        "last_start_time": {
          "description": "Zoom Room last start time",
          "type": "string"
        }
      }
    },
    "DashboardZoomRoomResponse": {
      "title": "dashboardZoomRoomResponse",
      "description": "Zoom Room returned",
      "type": "object",
      "properties": {
        "id": {
          "description": "Zoom Room ID",
          "type": "string"
        },
        "room_name": {
          "description": "Zoom Room name",
          "type": "string"
        },
        "calender_name": {
          "description": "Zoom Calendar name",
          "type": "string"
        },
        "email": {
          "description": "Zoom Room email",
          "type": "string"
        },
        "account_type": {
          "description": "Zoom Room email type",
          "type": "string"
        },
        "status": {
          "description": "Zoom Room status",
          "type": "string"
        },
        "device_ip": {
          "description": "Zoom Room device IP",
          "type": "string"
        },
        "camera": {
          "description": "Zoom Room camera",
          "type": "string"
        },
        "microphone": {
          "description": "Zoom Room microphone",
          "type": "string"
        },
        "speaker": {
          "description": "Zoom Room speaker",
          "type": "string"
        },
        "last_start_time": {
          "description": "Zoom Room last start time",
          "type": "string"
        },
        "live_meeting": {
          "title": "Meeting Metrics",
          "description": "Meeting metric details",
          "type": "object",
          "properties": {
            "uuid": {
              "description": "Meeting UUID",
              "type": "string",
              "format": "uuid"
            },
            "id": {
              "description": "Meeting ID",
              "type": "integer",
              "format": "int32"
            },
            "topic": {
              "description": "Meeting topic",
              "type": "string"
            },
            "host": {
              "description": "User display name",
              "type": "string"
            },
            "email": {
              "description": "User email",
              "type": "string"
            },
            "user_type": {
              "description": "User type",
              "type": "string"
            },
            "start_time": {
              "description": "Meeting start time",
              "type": "string",
              "format": "date-time"
            },
            "end_time": {
              "description": "Meeting end time",
              "type": "string",
              "format": "date-time"
            },
            "duration": {
              "description": "Meeting duration",
              "type": "string"
            },
            "participants": {
              "description": "Meeting participant count",
              "type": "integer",
              "format": "int32"
            },
            "has_pstn": {
              "description": "",
              "type": "boolean"
            },
            "has_voip": {
              "description": "",
              "type": "boolean"
            },
            "has_3rd_party_audio": {
              "description": "",
              "type": "boolean"
            },
            "has_video": {
              "description": "",
              "type": "boolean"
            },
            "has_screen_share": {
              "description": "",
              "type": "boolean"
            },
            "has_recording": {
              "description": "",
              "type": "boolean"
            },
            "has_sip": {
              "description": "",
              "type": "boolean"
            }
          }
        },
        "past_meetings": {
          "title": "PastMeetings",
          "type": "object",
          "properties": {
            "from": {
              "description": "Start date for this report",
              "type": "string",
              "format": "date"
            },
            "to": {
              "description": "End date for this report",
              "type": "string",
              "format": "date"
            },
            "page_count": {
              "description": "The number of items returned on this page",
              "type": "integer",
              "format": "int32"
            },
            "page_size": {
              "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
              "example": 30,
              "type": "integer",
              "maximum": 300,
              "format": "int32"
            },
            "total_records": {
              "description": "The number of all records available across pages",
              "type": "integer",
              "format": "int32"
            },
            "next_page_token": {
              "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
              "type": "string"
            },
            "meetings": {
              "description": "Array of meeting objects",
              "type": "array",
              "items": {
                "title": "Meeting Metrics",
                "description": "Meeting metric details",
                "type": "object",
                "properties": {
                  "uuid": {
                    "description": "Meeting UUID",
                    "type": "string",
                    "format": "uuid"
                  },
                  "id": {
                    "description": "Meeting ID",
                    "type": "integer",
                    "format": "int32"
                  },
                  "topic": {
                    "description": "Meeting topic",
                    "type": "string"
                  },
                  "host": {
                    "description": "User display name",
                    "type": "string"
                  },
                  "email": {
                    "description": "User email",
                    "type": "string"
                  },
                  "user_type": {
                    "description": "User type",
                    "type": "string"
                  },
                  "start_time": {
                    "description": "Meeting start time",
                    "type": "string",
                    "format": "date-time"
                  },
                  "end_time": {
                    "description": "Meeting end time",
                    "type": "string",
                    "format": "date-time"
                  },
                  "duration": {
                    "description": "Meeting duration",
                    "type": "string"
                  },
                  "participants": {
                    "description": "Meeting participant count",
                    "type": "integer",
                    "format": "int32"
                  },
                  "has_pstn": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_voip": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_3rd_party_audio": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_video": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_screen_share": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_recording": {
                    "description": "",
                    "type": "boolean"
                  },
                  "has_sip": {
                    "description": "",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      }
    },
    "PastMeetings": {
      "title": "PastMeetings",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "meetings": {
          "description": "Array of meeting objects",
          "type": "array",
          "items": {
            "title": "Meeting Metrics",
            "description": "Meeting metric details",
            "type": "object",
            "properties": {
              "uuid": {
                "description": "Meeting UUID",
                "type": "string",
                "format": "uuid"
              },
              "id": {
                "description": "Meeting ID",
                "type": "integer",
                "format": "int32"
              },
              "topic": {
                "description": "Meeting topic",
                "type": "string"
              },
              "host": {
                "description": "User display name",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "user_type": {
                "description": "User type",
                "type": "string"
              },
              "start_time": {
                "description": "Meeting start time",
                "type": "string",
                "format": "date-time"
              },
              "end_time": {
                "description": "Meeting end time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Meeting duration",
                "type": "string"
              },
              "participants": {
                "description": "Meeting participant count",
                "type": "integer",
                "format": "int32"
              },
              "has_pstn": {
                "description": "",
                "type": "boolean"
              },
              "has_voip": {
                "description": "",
                "type": "boolean"
              },
              "has_3rd_party_audio": {
                "description": "",
                "type": "boolean"
              },
              "has_video": {
                "description": "",
                "type": "boolean"
              },
              "has_screen_share": {
                "description": "",
                "type": "boolean"
              },
              "has_recording": {
                "description": "",
                "type": "boolean"
              },
              "has_sip": {
                "description": "",
                "type": "boolean"
              }
            }
          }
        }
      }
    },
    "DashboardCRCResponse": {
      "title": "dashboardCRCResponse",
      "description": "CRC Usage returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "crc_ports_usage": {
          "description": "",
          "type": "array",
          "items": {
            "title": "CrcPortsUsage",
            "type": "object",
            "properties": {
              "date_time": {
                "description": "Date and time",
                "type": "string"
              },
              "crc_ports_hour_usage": {
                "description": "",
                "type": "array",
                "items": {
                  "title": "CrcPortsHourUsage",
                  "type": "object",
                  "properties": {
                    "hour": {
                      "description": "",
                      "type": "string"
                    },
                    "max_usage": {
                      "description": "",
                      "type": "integer",
                      "format": "int32"
                    },
                    "total_usage": {
                      "description": "",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "CrcPortsUsage": {
      "title": "CrcPortsUsage",
      "type": "object",
      "properties": {
        "date_time": {
          "description": "Date and time",
          "type": "string"
        },
        "crc_ports_hour_usage": {
          "description": "",
          "type": "array",
          "items": {
            "title": "CrcPortsHourUsage",
            "type": "object",
            "properties": {
              "hour": {
                "description": "",
                "type": "string"
              },
              "max_usage": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "total_usage": {
                "description": "",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "CrcPortsHourUsage": {
      "title": "CrcPortsHourUsage",
      "type": "object",
      "properties": {
        "hour": {
          "description": "",
          "type": "string"
        },
        "max_usage": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "total_usage": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "DashboardIMResponse": {
      "title": "dashboardIMResponse",
      "description": "IM setails returned",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start date for this report",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End date for this report",
          "type": "string",
          "format": "date"
        },
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        },
        "users": {
          "description": "",
          "type": "array",
          "items": {
            "title": "User230",
            "type": "object",
            "properties": {
              "user_id": {
                "description": "User ID",
                "type": "string"
              },
              "user_name": {
                "description": "User display name",
                "type": "string"
              },
              "email": {
                "description": "User email",
                "type": "string"
              },
              "total_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "total_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "group_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "group_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "calls_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "calls_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "files_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "files_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "images_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "images_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "voice_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "voice_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "videos_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "videos_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "emoji_send": {
                "description": "",
                "type": "integer",
                "format": "int32"
              },
              "emoji_receive": {
                "description": "",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        }
      }
    },
    "User230": {
      "title": "User230",
      "type": "object",
      "properties": {
        "user_id": {
          "description": "User ID",
          "type": "string"
        },
        "user_name": {
          "description": "User display name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "total_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "total_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "group_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "group_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "calls_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "calls_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "files_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "files_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "images_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "images_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "voice_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "voice_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "videos_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "videos_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "emoji_send": {
          "description": "",
          "type": "integer",
          "format": "int32"
        },
        "emoji_receive": {
          "description": "",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Body293": {
      "title": "body293",
      "description": "`v1` Version 1\n`v2` Version 2",
      "type": "object",
      "properties": {
        "version": {
          "title": "version",
          "example": "v1",
          "x-enum-elements": [
            {
              "name": "v1",
              "description": ""
            },
            {
              "name": "v2",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "v1",
            "v2"
          ]
        }
      },
      "required": [
        "version"
      ]
    },
    "Version": {
      "title": "version",
      "example": "v1",
      "x-enum-elements": [
        {
          "name": "v1",
          "description": ""
        },
        {
          "name": "v2",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "v1",
        "v2"
      ]
    },
    "WebhookList": {
      "title": "Webhook List",
      "description": "List of Webhook objects returned",
      "type": "object",
      "properties": {
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "webhooks": {
          "description": "List of Webhook objects",
          "type": "array",
          "items": {
            "title": "Webhook154",
            "type": "object",
            "properties": {
              "url": {
                "description": "Webhook endpoint\n**max length:** 256",
                "type": "string",
                "maxLength": 256
              },
              "auth_user": {
                "description": "Webhook auth user name\n**max length:** 128",
                "type": "string",
                "maxLength": 128
              },
              "auth_password": {
                "description": "Webhook auth password\n**max length:** 64",
                "type": "string",
                "maxLength": 64
              },
              "events": {
                "title": "events",
                "example": "meeting_started",
                "x-enum-elements": [
                  {
                    "name": "meeting_started",
                    "description": ""
                  },
                  {
                    "name": "meeting_ended",
                    "description": ""
                  },
                  {
                    "name": "meeting_jbh",
                    "description": ""
                  },
                  {
                    "name": "meeting_join",
                    "description": ""
                  },
                  {
                    "name": "recording_completed",
                    "description": ""
                  },
                  {
                    "name": "participant_joined",
                    "description": ""
                  },
                  {
                    "name": "participant_left",
                    "description": ""
                  },
                  {
                    "name": "meeting_registered",
                    "description": ""
                  },
                  {
                    "name": "recording_transcript_completed",
                    "description": ""
                  }
                ],
                "type": "string",
                "enum": [
                  "meeting_started",
                  "meeting_ended",
                  "meeting_jbh",
                  "meeting_join",
                  "recording_completed",
                  "participant_joined",
                  "participant_left",
                  "meeting_registered",
                  "recording_transcript_completed"
                ]
              },
              "webhook_id": {
                "description": "Webhook Id",
                "type": "string"
              },
              "created_at": {
                "description": "Webhook create time",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "url",
              "auth_user",
              "auth_password",
              "events"
            ]
          }
        }
      }
    },
    "Webhook154": {
      "title": "Webhook154",
      "type": "object",
      "properties": {
        "url": {
          "description": "Webhook endpoint\n**max length:** 256",
          "type": "string",
          "maxLength": 256
        },
        "auth_user": {
          "description": "Webhook auth user name\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "auth_password": {
          "description": "Webhook auth password\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "events": {
          "title": "events",
          "example": "meeting_started",
          "x-enum-elements": [
            {
              "name": "meeting_started",
              "description": ""
            },
            {
              "name": "meeting_ended",
              "description": ""
            },
            {
              "name": "meeting_jbh",
              "description": ""
            },
            {
              "name": "meeting_join",
              "description": ""
            },
            {
              "name": "recording_completed",
              "description": ""
            },
            {
              "name": "participant_joined",
              "description": ""
            },
            {
              "name": "participant_left",
              "description": ""
            },
            {
              "name": "meeting_registered",
              "description": ""
            },
            {
              "name": "recording_transcript_completed",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ]
        },
        "webhook_id": {
          "description": "Webhook Id",
          "type": "string"
        },
        "created_at": {
          "description": "Webhook create time",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "url",
        "auth_user",
        "auth_password",
        "events"
      ]
    },
    "Events": {
      "title": "events",
      "example": "meeting_started",
      "x-enum-elements": [
        {
          "name": "meeting_started",
          "description": ""
        },
        {
          "name": "meeting_ended",
          "description": ""
        },
        {
          "name": "meeting_jbh",
          "description": ""
        },
        {
          "name": "meeting_join",
          "description": ""
        },
        {
          "name": "recording_completed",
          "description": ""
        },
        {
          "name": "participant_joined",
          "description": ""
        },
        {
          "name": "participant_left",
          "description": ""
        },
        {
          "name": "meeting_registered",
          "description": ""
        },
        {
          "name": "recording_transcript_completed",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "meeting_started",
        "meeting_ended",
        "meeting_jbh",
        "meeting_join",
        "recording_completed",
        "participant_joined",
        "participant_left",
        "meeting_registered",
        "recording_transcript_completed"
      ]
    },
    "Webhook": {
      "title": "Webhook",
      "description": "Webhook",
      "type": "object",
      "properties": {
        "url": {
          "description": "Webhook endpoint\n**max length:** 256",
          "type": "string",
          "maxLength": 256
        },
        "auth_user": {
          "description": "Webhook auth user name\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "auth_password": {
          "description": "Webhook auth password\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "events": {
          "title": "events",
          "example": "meeting_started",
          "x-enum-elements": [
            {
              "name": "meeting_started",
              "description": ""
            },
            {
              "name": "meeting_ended",
              "description": ""
            },
            {
              "name": "meeting_jbh",
              "description": ""
            },
            {
              "name": "meeting_join",
              "description": ""
            },
            {
              "name": "recording_completed",
              "description": ""
            },
            {
              "name": "participant_joined",
              "description": ""
            },
            {
              "name": "participant_left",
              "description": ""
            },
            {
              "name": "meeting_registered",
              "description": ""
            },
            {
              "name": "recording_transcript_completed",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ]
        }
      },
      "required": [
        "url",
        "auth_user",
        "auth_password",
        "events"
      ]
    },
    "WebhookCreateResponse": {
      "title": "webhookCreateResponse",
      "description": "Webhook Created",
      "type": "object",
      "properties": {
        "url": {
          "description": "Webhook endpoint\n**max length:** 456",
          "type": "string",
          "maxLength": 256
        },
        "auth_user": {
          "description": "Webhook auth user name\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "auth_password": {
          "description": "Webhook auth password\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "events": {
          "title": "events",
          "example": "meeting_started",
          "x-enum-elements": [
            {
              "name": "meeting_started",
              "description": ""
            },
            {
              "name": "meeting_ended",
              "description": ""
            },
            {
              "name": "meeting_jbh",
              "description": ""
            },
            {
              "name": "meeting_join",
              "description": ""
            },
            {
              "name": "recording_completed",
              "description": ""
            },
            {
              "name": "participant_joined",
              "description": ""
            },
            {
              "name": "participant_left",
              "description": ""
            },
            {
              "name": "meeting_registered",
              "description": ""
            },
            {
              "name": "recording_transcript_completed",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ]
        },
        "webhook_id": {
          "description": "Webhook Id",
          "type": "string"
        },
        "created_at": {
          "description": "Webhook create time",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "url",
        "auth_user",
        "auth_password",
        "events"
      ]
    },
    "WebhookResponse": {
      "title": "webhookResponse",
      "description": "Webhook object returned",
      "type": "object",
      "properties": {
        "url": {
          "description": "Webhook endpoint\n**max length:** 256",
          "type": "string",
          "maxLength": 256
        },
        "auth_user": {
          "description": "Webhook auth user name\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "auth_password": {
          "description": "Webhook auth password\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "events": {
          "title": "events",
          "example": "meeting_started",
          "x-enum-elements": [
            {
              "name": "meeting_started",
              "description": ""
            },
            {
              "name": "meeting_ended",
              "description": ""
            },
            {
              "name": "meeting_jbh",
              "description": ""
            },
            {
              "name": "meeting_join",
              "description": ""
            },
            {
              "name": "recording_completed",
              "description": ""
            },
            {
              "name": "participant_joined",
              "description": ""
            },
            {
              "name": "participant_left",
              "description": ""
            },
            {
              "name": "meeting_registered",
              "description": ""
            },
            {
              "name": "recording_transcript_completed",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ]
        },
        "webhook_id": {
          "description": "Webhook Id",
          "type": "string"
        },
        "created_at": {
          "description": "Webhook create time",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "url",
        "auth_user",
        "auth_password",
        "events"
      ]
    },
    "WebhookUpdate": {
      "title": "WebhookUpdate",
      "description": "Webhook",
      "type": "object",
      "properties": {
        "url": {
          "description": "Webhook endpoint\n**max length:** 256",
          "type": "string",
          "maxLength": 256
        },
        "auth_user": {
          "description": "Webhook auth user name\n**max length:** 128",
          "type": "string",
          "maxLength": 128
        },
        "auth_password": {
          "description": "Webhook auth password\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "events": {
          "title": "events",
          "example": "meeting_started",
          "x-enum-elements": [
            {
              "name": "meeting_started",
              "description": ""
            },
            {
              "name": "meeting_ended",
              "description": ""
            },
            {
              "name": "meeting_jbh",
              "description": ""
            },
            {
              "name": "meeting_join",
              "description": ""
            },
            {
              "name": "recording_completed",
              "description": ""
            },
            {
              "name": "participant_joined",
              "description": ""
            },
            {
              "name": "participant_left",
              "description": ""
            },
            {
              "name": "meeting_registered",
              "description": ""
            },
            {
              "name": "recording_transcript_completed",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "meeting_started",
            "meeting_ended",
            "meeting_jbh",
            "meeting_join",
            "recording_completed",
            "participant_joined",
            "participant_left",
            "meeting_registered",
            "recording_transcript_completed"
          ]
        }
      }
    },
    "TspResponse": {
      "title": "tspResponse",
      "description": "TSP dial-in numbers returned",
      "type": "object",
      "properties": {
        "tsp_provider": {
          "description": "",
          "type": "string"
        },
        "dial_in_numbers": {
          "description": "",
          "type": "array",
          "items": {
            "title": "DialInNumber256",
            "type": "object",
            "properties": {
              "code": {
                "description": "Country Code",
                "type": "string"
              },
              "number": {
                "description": "Dial-in number, length is less than 16",
                "type": "string"
              },
              "type": {
                "description": "",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "DialInNumber256": {
      "title": "DialInNumber256",
      "type": "object",
      "properties": {
        "code": {
          "description": "Country Code",
          "type": "string"
        },
        "number": {
          "description": "Dial-in number, length is less than 16",
          "type": "string"
        },
        "type": {
          "description": "",
          "type": "string"
        }
      }
    },
    "UserTSPsResponse": {
      "title": "userTSPsResponse",
      "description": "TSP Account list returned",
      "type": "object",
      "properties": {
        "tsp_accounts": {
          "description": "",
          "type": "array",
          "items": {
            "title": "TSP Accounts List",
            "description": "List of TSP Accounts",
            "type": "object",
            "properties": {
              "conference_code": {
                "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                "type": "string",
                "minLength": 1,
                "maxLength": 16
              },
              "leader_pin": {
                "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
                "type": "string",
                "minLength": 1,
                "maxLength": 16
              },
              "dial_in_numbers": {
                "description": "List of Dial In Numbers",
                "type": "array",
                "items": {
                  "title": "DialInNumber",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "Country Code\n**max length:** 6",
                      "type": "string",
                      "maxLength": 6
                    },
                    "number": {
                      "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                      "type": "string",
                      "minLength": 1,
                      "maxLength": 16
                    },
                    "type": {
                      "title": "type394",
                      "example": "toll",
                      "x-enum-elements": [
                        {
                          "name": "toll",
                          "description": ""
                        },
                        {
                          "name": "tollfree",
                          "description": ""
                        },
                        {
                          "name": "media_link",
                          "description": ""
                        }
                      ],
                      "type": "string",
                      "enum": [
                        "toll",
                        "tollfree",
                        "media_link"
                      ]
                    }
                  }
                }
              }
            },
            "required": [
              "conference_code",
              "leader_pin"
            ]
          }
        }
      }
    },
    "TspAccountsList": {
      "title": "TSP Accounts List",
      "description": "List of TSP Accounts",
      "type": "object",
      "properties": {
        "conference_code": {
          "description": "Conference code, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "leader_pin": {
          "description": "Leader PIN, numeric value, length is less than 16.\n**min length:** 1\n**max length:** 16",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "dial_in_numbers": {
          "description": "List of Dial In Numbers",
          "type": "array",
          "items": {
            "title": "DialInNumber",
            "type": "object",
            "properties": {
              "code": {
                "description": "Country Code\n**max length:** 6",
                "type": "string",
                "maxLength": 6
              },
              "number": {
                "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
                "type": "string",
                "minLength": 1,
                "maxLength": 16
              },
              "type": {
                "title": "type394",
                "example": "toll",
                "x-enum-elements": [
                  {
                    "name": "toll",
                    "description": ""
                  },
                  {
                    "name": "tollfree",
                    "description": ""
                  },
                  {
                    "name": "media_link",
                    "description": ""
                  }
                ],
                "type": "string",
                "enum": [
                  "toll",
                  "tollfree",
                  "media_link"
                ]
              }
            }
          }
        }
      },
      "required": [
        "conference_code",
        "leader_pin"
      ]
    },
    "DialInNumber": {
      "title": "DialInNumber",
      "type": "object",
      "properties": {
        "code": {
          "description": "Country Code\n**max length:** 6",
          "type": "string",
          "maxLength": 6
        },
        "number": {
          "description": "Dial-in number, length is less than 16.\n**min length:** 1\n**max length:** 16",
          "type": "string",
          "minLength": 1,
          "maxLength": 16
        },
        "type": {
          "title": "type394",
          "example": "toll",
          "x-enum-elements": [
            {
              "name": "toll",
              "description": ""
            },
            {
              "name": "tollfree",
              "description": ""
            },
            {
              "name": "media_link",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "toll",
            "tollfree",
            "media_link"
          ]
        }
      }
    },
    "Type394": {
      "title": "type394",
      "example": "toll",
      "x-enum-elements": [
        {
          "name": "toll",
          "description": ""
        },
        {
          "name": "tollfree",
          "description": ""
        },
        {
          "name": "media_link",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "toll",
        "tollfree",
        "media_link"
      ]
    },
    "UserPACsResponse": {
      "title": "userPACsResponse",
      "description": "PAC Account list returned",
      "type": "object",
      "properties": {
        "tsp_accounts": {
          "description": "",
          "type": "array",
          "items": {
            "title": "PAC Accounts List",
            "description": "List of PAC Accounts",
            "type": "object",
            "properties": {
              "dedicated_dial_in_number": {
                "description": "List of Dedicated Dial In Numbers",
                "type": "array",
                "items": {
                  "title": "DedicatedDialInNumber",
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Dial-in number, length is less than 16",
                      "type": "string"
                    },
                    "country": {
                      "description": "Country Code",
                      "type": "string"
                    }
                  }
                }
              },
              "global_dial_in_numbers": {
                "description": "List of Global Dial In Numbers",
                "type": "array",
                "items": {
                  "title": "GlobalDialInNumber",
                  "type": "object",
                  "properties": {
                    "number": {
                      "description": "Dial-in number, length is less than 16",
                      "type": "string"
                    },
                    "country": {
                      "description": "Country Code",
                      "type": "string"
                    }
                  }
                }
              },
              "conference_id": {
                "description": "Conference ID",
                "type": "integer",
                "format": "int32"
              },
              "participant_password": {
                "description": "Participant Password, numeric value, length is less than 6",
                "type": "string"
              },
              "listen_only_password": {
                "description": "Listen-Only Password, numeric value, length is less than 6",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "PacAccountsList": {
      "title": "PAC Accounts List",
      "description": "List of PAC Accounts",
      "type": "object",
      "properties": {
        "dedicated_dial_in_number": {
          "description": "List of Dedicated Dial In Numbers",
          "type": "array",
          "items": {
            "title": "DedicatedDialInNumber",
            "type": "object",
            "properties": {
              "number": {
                "description": "Dial-in number, length is less than 16",
                "type": "string"
              },
              "country": {
                "description": "Country Code",
                "type": "string"
              }
            }
          }
        },
        "global_dial_in_numbers": {
          "description": "List of Global Dial In Numbers",
          "type": "array",
          "items": {
            "title": "GlobalDialInNumber",
            "type": "object",
            "properties": {
              "number": {
                "description": "Dial-in number, length is less than 16",
                "type": "string"
              },
              "country": {
                "description": "Country Code",
                "type": "string"
              }
            }
          }
        },
        "conference_id": {
          "description": "Conference ID",
          "type": "integer",
          "format": "int32"
        },
        "participant_password": {
          "description": "Participant Password, numeric value, length is less than 6",
          "type": "string"
        },
        "listen_only_password": {
          "description": "Listen-Only Password, numeric value, length is less than 6",
          "type": "string"
        }
      }
    },
    "DedicatedDialInNumber": {
      "title": "DedicatedDialInNumber",
      "type": "object",
      "properties": {
        "number": {
          "description": "Dial-in number, length is less than 16",
          "type": "string"
        },
        "country": {
          "description": "Country Code",
          "type": "string"
        }
      }
    },
    "GlobalDialInNumber": {
      "title": "GlobalDialInNumber",
      "type": "object",
      "properties": {
        "number": {
          "description": "Dial-in number, length is less than 16",
          "type": "string"
        },
        "country": {
          "description": "Country Code",
          "type": "string"
        }
      }
    },
    "H.323/sipDeviceList": {
      "title": "H.323/SIP Device List",
      "description": "List of H.323/SIP Devices returned.",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "devices": {
          "description": "List of H.323/SIP Device objects",
          "type": "array",
          "items": {
            "title": "Device",
            "type": "object",
            "properties": {
              "name": {
                "description": "Device name\n**max length:** 64",
                "type": "string",
                "maxLength": 64
              },
              "protocol": {
                "title": "Protocol",
                "example": "H.323",
                "x-enum-elements": [
                  {
                    "name": "Enum_H323",
                    "description": ""
                  },
                  {
                    "name": "SIP",
                    "description": ""
                  }
                ],
                "type": "string",
                "enum": [
                  "H.323",
                  "SIP"
                ]
              },
              "ip": {
                "description": "Device Ip",
                "type": "string"
              },
              "encryption": {
                "title": "encryption",
                "example": "auto",
                "x-enum-elements": [
                  {
                    "name": "auto",
                    "description": ""
                  },
                  {
                    "name": "yes",
                    "description": ""
                  },
                  {
                    "name": "no",
                    "description": ""
                  }
                ],
                "type": "string",
                "enum": [
                  "auto",
                  "yes",
                  "no"
                ]
              },
              "id": {
                "description": "Device ID",
                "type": "string"
              }
            },
            "required": [
              "name",
              "protocol",
              "ip",
              "encryption"
            ]
          }
        }
      }
    },
    "Device": {
      "title": "Device",
      "type": "object",
      "properties": {
        "name": {
          "description": "Device name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "protocol": {
          "title": "Protocol",
          "example": "H.323",
          "x-enum-elements": [
            {
              "name": "Enum_H323",
              "description": ""
            },
            {
              "name": "SIP",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "H.323",
            "SIP"
          ]
        },
        "ip": {
          "description": "Device Ip",
          "type": "string"
        },
        "encryption": {
          "title": "encryption",
          "example": "auto",
          "x-enum-elements": [
            {
              "name": "auto",
              "description": ""
            },
            {
              "name": "yes",
              "description": ""
            },
            {
              "name": "no",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "auto",
            "yes",
            "no"
          ]
        },
        "id": {
          "description": "Device ID",
          "type": "string"
        }
      },
      "required": [
        "name",
        "protocol",
        "ip",
        "encryption"
      ]
    },
    "Protocol": {
      "title": "Protocol",
      "example": "H.323",
      "x-enum-elements": [
        {
          "name": "Enum_H323",
          "description": ""
        },
        {
          "name": "SIP",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "H.323",
        "SIP"
      ]
    },
    "Encryption": {
      "title": "encryption",
      "example": "auto",
      "x-enum-elements": [
        {
          "name": "auto",
          "description": ""
        },
        {
          "name": "yes",
          "description": ""
        },
        {
          "name": "no",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "auto",
        "yes",
        "no"
      ]
    },
    "TheH.323/sipDeviceObject.": {
      "title": "The H.323/SIP device object.",
      "description": "H.323/SIP Device",
      "type": "object",
      "properties": {
        "name": {
          "description": "Device name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "protocol": {
          "title": "Protocol",
          "example": "H.323",
          "x-enum-elements": [
            {
              "name": "Enum_H323",
              "description": ""
            },
            {
              "name": "SIP",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "H.323",
            "SIP"
          ]
        },
        "ip": {
          "description": "Device Ip",
          "type": "string"
        },
        "encryption": {
          "title": "encryption",
          "example": "auto",
          "x-enum-elements": [
            {
              "name": "auto",
              "description": ""
            },
            {
              "name": "yes",
              "description": ""
            },
            {
              "name": "no",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "auto",
            "yes",
            "no"
          ]
        }
      },
      "required": [
        "name",
        "protocol",
        "ip",
        "encryption"
      ]
    },
    "DeviceCreateResponse": {
      "title": "deviceCreateResponse",
      "description": "H.323/SIP Device created",
      "type": "object",
      "properties": {
        "name": {
          "description": "Device name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "protocol": {
          "title": "Protocol",
          "example": "H.323",
          "x-enum-elements": [
            {
              "name": "Enum_H323",
              "description": ""
            },
            {
              "name": "SIP",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "H.323",
            "SIP"
          ]
        },
        "ip": {
          "description": "Device Ip",
          "type": "string"
        },
        "encryption": {
          "title": "encryption",
          "example": "auto",
          "x-enum-elements": [
            {
              "name": "auto",
              "description": ""
            },
            {
              "name": "yes",
              "description": ""
            },
            {
              "name": "no",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "auto",
            "yes",
            "no"
          ]
        },
        "id": {
          "description": "Device ID",
          "type": "string"
        }
      },
      "required": [
        "name",
        "protocol",
        "ip",
        "encryption"
      ]
    },
    "AccountListItem": {
      "title": "AccountListItem",
      "description": "Account object in account list",
      "type": "object",
      "properties": {
        "accounts": {
          "description": "List of Account objects",
          "type": "array",
          "items": {
            "title": "Account4",
            "type": "object",
            "properties": {
              "id": {
                "description": "Account ID",
                "type": "string",
                "format": "uuid"
              },
              "account_name": {
                "description": "Account name",
                "type": "string"
              },
              "owner_email": {
                "description": "Account owner email",
                "type": "string"
              },
              "account_type": {
                "description": "Account type",
                "type": "string"
              },
              "seats": {
                "description": "Account seats",
                "type": "integer",
                "format": "int32"
              },
              "subscription_start_time": {
                "description": "Account subscription start date/time",
                "type": "string",
                "format": "date-time"
              },
              "subscription_end_time": {
                "description": "Account subscription end date/time",
                "type": "string",
                "format": "date-time"
              },
              "created_at": {
                "description": "Account creation date/time",
                "type": "string",
                "format": "date-time"
              }
            }
          }
        }
      }
    },
    "DateTime27": {
      "title": "DateTime27",
      "description": "DateTime Object",
      "type": "object",
      "properties": {
        "from": {
          "description": "Start Date,",
          "type": "string",
          "format": "date"
        },
        "to": {
          "description": "End Date",
          "type": "string",
          "format": "date"
        }
      }
    },
    "Group": {
      "title": "Group",
      "description": "Group object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Total number of members in this group",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "IMGroup": {
      "title": "IMGroup",
      "description": "IM Group object",
      "type": "object",
      "properties": {
        "name": {
          "description": "Group name",
          "type": "string"
        },
        "total_members": {
          "description": "Total number of members in this group",
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "title": "type252",
          "example": "normal",
          "x-enum-elements": [
            {
              "name": "normal",
              "description": ""
            },
            {
              "name": "shared",
              "description": ""
            },
            {
              "name": "restricted",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "normal",
            "shared",
            "restricted"
          ]
        },
        "search_by_domain": {
          "description": "Members can search others in the same email domain",
          "type": "boolean"
        },
        "search_by_account": {
          "description": "Members can search others under same account",
          "type": "boolean"
        },
        "search_by_ma_account": {
          "description": "Members can search others under same master account, including all sub accounts",
          "type": "boolean"
        }
      }
    },
    "MeetingInfo": {
      "title": "MeetingInfo",
      "description": "Meeting object",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Meeting topic",
          "type": "string"
        },
        "type": {
          "title": "type118",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            },
            {
              "name": "Enum_8",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3",
            "8"
          ]
        },
        "start_time": {
          "description": "Meeting start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Meeting duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "agenda": {
          "description": "Agenda",
          "type": "string"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "password": {
          "description": "Meeting password",
          "type": "string"
        },
        "h323_password": {
          "description": "H.323/SIP room system password",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins meeting",
              "type": "boolean"
            },
            "participant_video": {
              "description": "Start video when participants join meeting",
              "type": "boolean"
            },
            "cn_meeting": {
              "description": "Host meeting in China",
              "example": false,
              "type": "boolean"
            },
            "in_meeting": {
              "description": "Host meeting in India",
              "example": false,
              "type": "boolean"
            },
            "join_before_host": {
              "description": "Allow participants to join the meeting before the host starts the meeting. Only used for scheduled or recurring meetings.",
              "example": false,
              "type": "boolean"
            },
            "mute_upon_entry": {
              "description": "Mute participants upon entry",
              "example": false,
              "type": "boolean"
            },
            "watermark": {
              "description": "Add watermark when viewing shared screen",
              "example": false,
              "type": "boolean"
            },
            "use_pmi": {
              "description": "Use Personal Meeting ID. Only used for scheduled meetings and recurring meetings with no fixed time.",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple value separated by comma.",
              "type": "string"
            }
          }
        }
      }
    },
    "Pagination": {
      "title": "Pagination",
      "description": "Pagination Object",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_number": {
          "description": "The page number of current results",
          "example": 1,
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "PaginationToken": {
      "title": "PaginationToken",
      "description": "Pagination Object",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int32"
        },
        "page_size": {
          "description": "The number of records returned within a single API call\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4Qos": {
      "title": "PaginationToken4Qos",
      "description": "Pagination Object",
      "type": "object",
      "properties": {
        "page_count": {
          "description": "The number of items returned on this page",
          "type": "integer",
          "format": "int64"
        },
        "page_size": {
          "description": "The number of items per page\n**maximum:** 10",
          "example": 1,
          "type": "integer",
          "maximum": 10,
          "format": "int32"
        },
        "total_records": {
          "description": "The number of all records available across pages",
          "type": "integer",
          "format": "int64"
        },
        "next_page_token": {
          "description": "Next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceed the current page size. The expiration period for this token is 15 minutes.",
          "type": "string"
        }
      }
    },
    "PaginationToken4IMChat": {
      "title": "PaginationToken4IMChat",
      "description": "Pagination Object",
      "type": "object",
      "properties": {
        "page_size": {
          "description": "The amount of records returns within a single API call.\n**default:** 30\n**maximum:** 300",
          "example": 30,
          "type": "integer",
          "maximum": 300,
          "format": "int32"
        },
        "next_page_token": {
          "description": "Next page token, used to paginate through large result sets. A next page token will be returned whenever the set of available result list exceeds page size. The expiration period is 15 minutes.",
          "type": "string"
        }
      }
    },
    "Recording614": {
      "title": "Recording614",
      "description": "Recording file Object",
      "type": "object",
      "properties": {
        "id": {
          "description": "The recording file ID.Response in general query.",
          "type": "string"
        },
        "meeting_id": {
          "description": "The meeting ID.",
          "type": "string"
        },
        "recording_start": {
          "description": "The recording start time",
          "type": "string"
        },
        "recording_end": {
          "description": "The recording end time. Response in general query.",
          "type": "string"
        },
        "file_type": {
          "description": "The recording file type",
          "type": "string"
        },
        "file_size": {
          "description": "The recording file size",
          "type": "number",
          "format": "double"
        },
        "play_url": {
          "description": "The recording file play url. Response in general query.",
          "type": "string"
        },
        "download_url": {
          "description": "The recording download url. Response in general query.",
          "type": "string"
        },
        "status": {
          "description": "The recording status. Response in general query.",
          "type": "string"
        },
        "deleted_time": {
          "description": "The recording delete time. Response in trash query.",
          "type": "string"
        },
        "recording_type": {
          "description": "The recording file type, active_speaker or gallery_view",
          "type": "string"
        }
      }
    },
    "RecordingFileList": {
      "title": "Recording file List",
      "type": "object",
      "properties": {
        "recording_files": {
          "description": "List of Recording file",
          "type": "array",
          "items": {
            "title": "Recording614",
            "description": "Recording file Object",
            "type": "object",
            "properties": {
              "id": {
                "description": "The recording file ID.Response in general query.",
                "type": "string"
              },
              "meeting_id": {
                "description": "The meeting ID.",
                "type": "string"
              },
              "recording_start": {
                "description": "The recording start time",
                "type": "string"
              },
              "recording_end": {
                "description": "The recording end time. Response in general query.",
                "type": "string"
              },
              "file_type": {
                "description": "The recording file type",
                "type": "string"
              },
              "file_size": {
                "description": "The recording file size",
                "type": "number",
                "format": "double"
              },
              "play_url": {
                "description": "The recording file play url. Response in general query.",
                "type": "string"
              },
              "download_url": {
                "description": "The recording download url. Response in general query.",
                "type": "string"
              },
              "status": {
                "description": "The recording status. Response in general query.",
                "type": "string"
              },
              "deleted_time": {
                "description": "The recording delete time. Response in trash query.",
                "type": "string"
              },
              "recording_type": {
                "description": "The recording file type, active_speaker or gallery_view",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "User": {
      "title": "User",
      "description": "The user object represents a User on Zoom",
      "type": "object",
      "properties": {
        "email": {
          "description": "User's email address",
          "type": "string"
        },
        "type": {
          "title": "type",
          "example": 1,
          "x-enum-elements": [
            {
              "name": "Enum_1",
              "description": ""
            },
            {
              "name": "Enum_2",
              "description": ""
            },
            {
              "name": "Enum_3",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "1",
            "2",
            "3"
          ]
        },
        "first_name": {
          "description": "User's first name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "last_name": {
          "description": "User's last name\n**max length:** 64",
          "type": "string",
          "maxLength": 64
        },
        "pmi": {
          "description": "Personal Meeting ID",
          "type": "string"
        },
        "timezone": {
          "description": "Time Zone",
          "type": "string"
        },
        "dept": {
          "description": "Department",
          "type": "string"
        },
        "created_at": {
          "description": "User create time",
          "type": "string",
          "format": "date-time"
        },
        "last_login_time": {
          "description": "User last login time",
          "type": "string",
          "format": "date-time"
        },
        "last_client_version": {
          "description": "User last login client version",
          "type": "string"
        }
      },
      "required": [
        "email",
        "type"
      ]
    },
    "WebinarInfo": {
      "title": "WebinarInfo",
      "description": "Webinar object",
      "type": "object",
      "properties": {
        "topic": {
          "description": "Webinar topic",
          "type": "string"
        },
        "type": {
          "title": "type177",
          "example": 5,
          "x-enum-elements": [
            {
              "name": "Enum_5",
              "description": ""
            },
            {
              "name": "Enum_6",
              "description": ""
            },
            {
              "name": "Enum_9",
              "description": ""
            }
          ],
          "type": "integer",
          "format": "int32",
          "enum": [
            "5",
            "6",
            "9"
          ]
        },
        "start_time": {
          "description": "Webinar start time",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Webinar duration",
          "type": "integer",
          "format": "int32"
        },
        "timezone": {
          "description": "Timezone to format start_time",
          "type": "string"
        },
        "agenda": {
          "description": "Webinar agenda",
          "type": "string"
        },
        "created_at": {
          "description": "Create time",
          "type": "string",
          "format": "date-time"
        },
        "start_url": {
          "description": "Start url",
          "type": "string"
        },
        "join_url": {
          "description": "Join url",
          "type": "string"
        },
        "occurrences": {
          "description": "Array of occurrence objects",
          "type": "array",
          "items": {
            "title": "Occurrence",
            "description": "Occurence object",
            "type": "object",
            "properties": {
              "occurrence_id": {
                "description": "Occurrence Id",
                "type": "integer",
                "format": "int32"
              },
              "start_time": {
                "description": "Start time",
                "type": "string",
                "format": "date-time"
              },
              "duration": {
                "description": "Duration",
                "type": "integer",
                "format": "int32"
              },
              "status": {
                "description": "Occurrence status",
                "type": "string"
              }
            }
          }
        },
        "settings": {
          "title": "settings185",
          "type": "object",
          "properties": {
            "host_video": {
              "description": "Start video when host joins webinar",
              "type": "boolean"
            },
            "panelists_video": {
              "description": "Start video when panelists join webinar",
              "type": "boolean"
            },
            "practice_session": {
              "description": "Enable Practice Session",
              "example": false,
              "type": "boolean"
            },
            "hd_video": {
              "description": "Default to HD Video",
              "example": false,
              "type": "boolean"
            },
            "approval_type": {
              "title": "approval_type",
              "example": 0,
              "x-enum-elements": [
                {
                  "name": "Enum_0",
                  "description": ""
                },
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "0",
                "1",
                "2"
              ]
            },
            "registration_type": {
              "title": "registration_type",
              "example": 1,
              "x-enum-elements": [
                {
                  "name": "Enum_1",
                  "description": ""
                },
                {
                  "name": "Enum_2",
                  "description": ""
                },
                {
                  "name": "Enum_3",
                  "description": ""
                }
              ],
              "type": "integer",
              "format": "int32",
              "enum": [
                "1",
                "2",
                "3"
              ]
            },
            "audio": {
              "title": "Audio",
              "example": "both",
              "x-enum-elements": [
                {
                  "name": "both",
                  "description": ""
                },
                {
                  "name": "telephony",
                  "description": ""
                },
                {
                  "name": "voip",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "both",
                "telephony",
                "voip"
              ]
            },
            "auto_recording": {
              "title": "auto_recording",
              "example": "local",
              "x-enum-elements": [
                {
                  "name": "local",
                  "description": ""
                },
                {
                  "name": "cloud",
                  "description": ""
                },
                {
                  "name": "none",
                  "description": ""
                }
              ],
              "type": "string",
              "enum": [
                "local",
                "cloud",
                "none"
              ]
            },
            "enforce_login": {
              "description": "Only signed-in users can join this meeting",
              "type": "boolean"
            },
            "enforce_login_domains": {
              "description": "Only signed-in users with specified domains can join meetings",
              "type": "string"
            },
            "alternative_hosts": {
              "description": "Alternative hosts emails or IDs. Multiple values separated by comma.",
              "type": "string"
            },
            "close_registration": {
              "description": "Close registration after event date",
              "type": "boolean"
            },
            "show_share_button": {
              "description": "Show social share buttons on registration page",
              "type": "boolean"
            },
            "allow_multiple_devices": {
              "description": "Allow attendees to join from multiple devices",
              "type": "boolean"
            }
          }
        }
      }
    }
  }
}
